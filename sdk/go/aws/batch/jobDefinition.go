// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Batch Job Definition resource.
// 
// ## retryStrategy
// 
// `retryStrategy` supports the following:
// 
// * `attempts` - (Optional) The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
// 
// ## timeout
// 
// `timeout` supports the following:
// 
// * `attemptDurationSeconds` - (Optional) The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/batch_job_definition.html.markdown.
type JobDefinition struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name of the job definition.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringOutput `pulumi:"containerProperties"`

	// Specifies the name of the job definition.
	Name pulumi.StringOutput `pulumi:"name"`

	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.MapOutput `pulumi:"parameters"`

	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy pulumi.AnyOutput `pulumi:"retryStrategy"`

	// The revision of the job definition.
	Revision pulumi.IntOutput `pulumi:"revision"`

	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout pulumi.AnyOutput `pulumi:"timeout"`

	// The type of job definition.  Must be `container`
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewJobDefinition(ctx *pulumi.Context,
	name string, args *JobDefinitionArgs, opts ...pulumi.ResourceOpt) (*JobDefinition, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["containerProperties"] = args.ContainerProperties
		inputs["name"] = args.Name
		inputs["parameters"] = args.Parameters
		inputs["retryStrategy"] = args.RetryStrategy
		inputs["timeout"] = args.Timeout
		inputs["type"] = args.Type
	}
	var resource JobDefinition
	err := ctx.RegisterResource("aws:batch/jobDefinition:JobDefinition", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobDefinition gets an existing JobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.ID, state *JobDefinitionState, opts ...pulumi.ResourceOpt) (*JobDefinition, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["containerProperties"] = state.ContainerProperties
		inputs["name"] = state.Name
		inputs["parameters"] = state.Parameters
		inputs["retryStrategy"] = state.RetryStrategy
		inputs["revision"] = state.Revision
		inputs["timeout"] = state.Timeout
		inputs["type"] = state.Type
	}
	var resource JobDefinition
	err := ctx.ReadResource("aws:batch/jobDefinition:JobDefinition", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *JobDefinition) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *JobDefinition) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering JobDefinition resources.
type JobDefinitionState struct {
	// The Amazon Resource Name of the job definition.
	Arn pulumi.StringInput `pulumi:"arn"`
	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringInput `pulumi:"containerProperties"`
	// Specifies the name of the job definition.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy pulumi.AnyInput `pulumi:"retryStrategy"`
	// The revision of the job definition.
	Revision pulumi.IntInput `pulumi:"revision"`
	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout pulumi.AnyInput `pulumi:"timeout"`
	// The type of job definition.  Must be `container`
	Type pulumi.StringInput `pulumi:"type"`
}

// The set of arguments for constructing a JobDefinition resource.
type JobDefinitionArgs struct {
	// A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)
	// provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.
	ContainerProperties pulumi.StringInput `pulumi:"containerProperties"`
	// Specifies the name of the job definition.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the parameter substitution placeholders to set in the job definition.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// Specifies the retry strategy to use for failed jobs that are submitted with this job definition.
	// Maximum number of `retryStrategy` is `1`.  Defined below.
	RetryStrategy pulumi.AnyInput `pulumi:"retryStrategy"`
	// Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
	Timeout pulumi.AnyInput `pulumi:"timeout"`
	// The type of job definition.  Must be `container`
	Type pulumi.StringInput `pulumi:"type"`
}
