// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Resource for managing Quick Sight Group
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/quicksight_group.html.markdown.
type Group struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Amazon Resource Name (ARN) of group
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`

	// A description for the group.
	Description pulumi.StringOutput `pulumi:"description"`

	// A name for the group.
	GroupName pulumi.StringOutput `pulumi:"groupName"`

	// The namespace. Currently, you should set this to `default`.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOpt) (*Group, error) {
	if args == nil || args.GroupName == nil {
		return nil, errors.New("missing required argument 'GroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["awsAccountId"] = args.AwsAccountId
		inputs["description"] = args.Description
		inputs["groupName"] = args.GroupName
		inputs["namespace"] = args.Namespace
	}
	var resource Group
	err := ctx.RegisterResource("aws:quicksight/group:Group", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupState, opts ...pulumi.ResourceOpt) (*Group, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["awsAccountId"] = state.AwsAccountId
		inputs["description"] = state.Description
		inputs["groupName"] = state.GroupName
		inputs["namespace"] = state.Namespace
	}
	var resource Group
	err := ctx.ReadResource("aws:quicksight/group:Group", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Group) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Group) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Group resources.
type GroupState struct {
	// Amazon Resource Name (ARN) of group
	Arn pulumi.StringInput `pulumi:"arn"`
	// The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// A description for the group.
	Description pulumi.StringInput `pulumi:"description"`
	// A name for the group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The namespace. Currently, you should set this to `default`.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// A description for the group.
	Description pulumi.StringInput `pulumi:"description"`
	// A name for the group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The namespace. Currently, you should set this to `default`.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}
