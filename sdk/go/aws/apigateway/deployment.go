// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Deployment.
// 
// > **Note:** Depends on having `apigateway.Integration` inside your rest api (which in turn depends on `apigateway.Method`). To avoid race conditions
// you might need to add an explicit `dependsOn = ["aws_api_gateway_integration.name"]`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_deployment.html.markdown.
type Deployment struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The creation date of the deployment
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`

	// The description of the deployment
	Description pulumi.StringOutput `pulumi:"description"`

	// The execution ARN to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringOutput `pulumi:"executionArn"`

	// The URL to invoke the API pointing to the stage,
	// e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringOutput `pulumi:"invokeUrl"`

	// The ID of the associated REST API
	RestApi pulumi.StringOutput `pulumi:"restApi"`

	// The description of the stage
	StageDescription pulumi.StringOutput `pulumi:"stageDescription"`

	// The name of the stage. If the specified stage already exists, it will be updated to point to the new deployment. If the stage does not exist, a new one will be created and point to this deployment.
	StageName pulumi.StringOutput `pulumi:"stageName"`

	// A map that defines variables for the stage
	Variables pulumi.MapOutput `pulumi:"variables"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOpt) (*Deployment, error) {
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["description"] = args.Description
		inputs["restApi"] = args.RestApi
		inputs["stageDescription"] = args.StageDescription
		inputs["stageName"] = args.StageName
		inputs["variables"] = args.Variables
	}
	var resource Deployment
	err := ctx.RegisterResource("aws:apigateway/deployment:Deployment", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DeploymentState, opts ...pulumi.ResourceOpt) (*Deployment, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["createdDate"] = state.CreatedDate
		inputs["description"] = state.Description
		inputs["executionArn"] = state.ExecutionArn
		inputs["invokeUrl"] = state.InvokeUrl
		inputs["restApi"] = state.RestApi
		inputs["stageDescription"] = state.StageDescription
		inputs["stageName"] = state.StageName
		inputs["variables"] = state.Variables
	}
	var resource Deployment
	err := ctx.ReadResource("aws:apigateway/deployment:Deployment", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Deployment) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Deployment) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Deployment resources.
type DeploymentState struct {
	// The creation date of the deployment
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the deployment
	Description pulumi.StringInput `pulumi:"description"`
	// The execution ARN to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringInput `pulumi:"executionArn"`
	// The URL to invoke the API pointing to the stage,
	// e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringInput `pulumi:"invokeUrl"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The description of the stage
	StageDescription pulumi.StringInput `pulumi:"stageDescription"`
	// The name of the stage. If the specified stage already exists, it will be updated to point to the new deployment. If the stage does not exist, a new one will be created and point to this deployment.
	StageName pulumi.StringInput `pulumi:"stageName"`
	// A map that defines variables for the stage
	Variables pulumi.MapInput `pulumi:"variables"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// The description of the deployment
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The description of the stage
	StageDescription pulumi.StringInput `pulumi:"stageDescription"`
	// The name of the stage. If the specified stage already exists, it will be updated to point to the new deployment. If the stage does not exist, a new one will be created and point to this deployment.
	StageName pulumi.StringInput `pulumi:"stageName"`
	// A map that defines variables for the stage
	Variables pulumi.MapInput `pulumi:"variables"`
}
