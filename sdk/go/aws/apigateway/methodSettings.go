// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Method Settings, e.g. logging or monitoring.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_method_settings.html.markdown.
type MethodSettings struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage.
	MethodPath pulumi.StringOutput `pulumi:"methodPath"`

	// The ID of the REST API
	RestApi pulumi.StringOutput `pulumi:"restApi"`

	// The settings block, see below.
	Settings pulumi.AnyOutput `pulumi:"settings"`

	// The name of the stage
	StageName pulumi.StringOutput `pulumi:"stageName"`
}

// NewMethodSettings registers a new resource with the given unique name, arguments, and options.
func NewMethodSettings(ctx *pulumi.Context,
	name string, args *MethodSettingsArgs, opts ...pulumi.ResourceOpt) (*MethodSettings, error) {
	if args == nil || args.MethodPath == nil {
		return nil, errors.New("missing required argument 'MethodPath'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil || args.Settings == nil {
		return nil, errors.New("missing required argument 'Settings'")
	}
	if args == nil || args.StageName == nil {
		return nil, errors.New("missing required argument 'StageName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["methodPath"] = args.MethodPath
		inputs["restApi"] = args.RestApi
		inputs["settings"] = args.Settings
		inputs["stageName"] = args.StageName
	}
	var resource MethodSettings
	err := ctx.RegisterResource("aws:apigateway/methodSettings:MethodSettings", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMethodSettings gets an existing MethodSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMethodSettings(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MethodSettingsState, opts ...pulumi.ResourceOpt) (*MethodSettings, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["methodPath"] = state.MethodPath
		inputs["restApi"] = state.RestApi
		inputs["settings"] = state.Settings
		inputs["stageName"] = state.StageName
	}
	var resource MethodSettings
	err := ctx.ReadResource("aws:apigateway/methodSettings:MethodSettings", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *MethodSettings) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *MethodSettings) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering MethodSettings resources.
type MethodSettingsState struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage.
	MethodPath pulumi.StringInput `pulumi:"methodPath"`
	// The ID of the REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The settings block, see below.
	Settings pulumi.AnyInput `pulumi:"settings"`
	// The name of the stage
	StageName pulumi.StringInput `pulumi:"stageName"`
}

// The set of arguments for constructing a MethodSettings resource.
type MethodSettingsArgs struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage.
	MethodPath pulumi.StringInput `pulumi:"methodPath"`
	// The ID of the REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The settings block, see below.
	Settings pulumi.AnyInput `pulumi:"settings"`
	// The name of the stage
	StageName pulumi.StringInput `pulumi:"stageName"`
}
