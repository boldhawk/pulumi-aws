// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Client Certificate.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_client_certificate.html.markdown.
type ClientCertificate struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The date when the client certificate was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`

	// The description of the client certificate.
	Description pulumi.StringOutput `pulumi:"description"`

	// The date when the client certificate will expire.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`

	// The PEM-encoded public key of the client certificate.
	PemEncodedCertificate pulumi.StringOutput `pulumi:"pemEncodedCertificate"`
}

// NewClientCertificate registers a new resource with the given unique name, arguments, and options.
func NewClientCertificate(ctx *pulumi.Context,
	name string, args *ClientCertificateArgs, opts ...pulumi.ResourceOpt) (*ClientCertificate, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["description"] = args.Description
	}
	var resource ClientCertificate
	err := ctx.RegisterResource("aws:apigateway/clientCertificate:ClientCertificate", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientCertificate gets an existing ClientCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientCertificate(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClientCertificateState, opts ...pulumi.ResourceOpt) (*ClientCertificate, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["createdDate"] = state.CreatedDate
		inputs["description"] = state.Description
		inputs["expirationDate"] = state.ExpirationDate
		inputs["pemEncodedCertificate"] = state.PemEncodedCertificate
	}
	var resource ClientCertificate
	err := ctx.ReadResource("aws:apigateway/clientCertificate:ClientCertificate", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *ClientCertificate) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *ClientCertificate) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering ClientCertificate resources.
type ClientCertificateState struct {
	// The date when the client certificate was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the client certificate.
	Description pulumi.StringInput `pulumi:"description"`
	// The date when the client certificate will expire.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The PEM-encoded public key of the client certificate.
	PemEncodedCertificate pulumi.StringInput `pulumi:"pemEncodedCertificate"`
}

// The set of arguments for constructing a ClientCertificate resource.
type ClientCertificateArgs struct {
	// The description of the client certificate.
	Description pulumi.StringInput `pulumi:"description"`
}
