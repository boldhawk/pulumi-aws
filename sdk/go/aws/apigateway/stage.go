// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Stage.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_stage.html.markdown.
type Stage struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Enables access logs for the API stage. Detailed below.
	AccessLogSettings pulumi.AnyOutput `pulumi:"accessLogSettings"`

	// Specifies whether a cache cluster is enabled for the stage
	CacheClusterEnabled pulumi.BoolOutput `pulumi:"cacheClusterEnabled"`

	// The size of the cache cluster for the stage, if enabled.
	// Allowed values include `0.5`, `1.6`, `6.1`, `13.5`, `28.4`, `58.2`, `118` and `237`.
	CacheClusterSize pulumi.StringOutput `pulumi:"cacheClusterSize"`

	// The identifier of a client certificate for the stage.
	ClientCertificateId pulumi.StringOutput `pulumi:"clientCertificateId"`

	// The ID of the deployment that the stage points to
	Deployment pulumi.StringOutput `pulumi:"deployment"`

	// The description of the stage
	Description pulumi.StringOutput `pulumi:"description"`

	// The version of the associated API documentation
	DocumentationVersion pulumi.StringOutput `pulumi:"documentationVersion"`

	// The execution ARN to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringOutput `pulumi:"executionArn"`

	// The URL to invoke the API pointing to the stage,
	// e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringOutput `pulumi:"invokeUrl"`

	// The ID of the associated REST API
	RestApi pulumi.StringOutput `pulumi:"restApi"`

	// The name of the stage
	StageName pulumi.StringOutput `pulumi:"stageName"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// A map that defines the stage variables
	Variables pulumi.MapOutput `pulumi:"variables"`

	// Whether active tracing with X-ray is enabled. Defaults to `false`.
	XrayTracingEnabled pulumi.BoolOutput `pulumi:"xrayTracingEnabled"`
}

// NewStage registers a new resource with the given unique name, arguments, and options.
func NewStage(ctx *pulumi.Context,
	name string, args *StageArgs, opts ...pulumi.ResourceOpt) (*Stage, error) {
	if args == nil || args.Deployment == nil {
		return nil, errors.New("missing required argument 'Deployment'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil || args.StageName == nil {
		return nil, errors.New("missing required argument 'StageName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["accessLogSettings"] = args.AccessLogSettings
		inputs["cacheClusterEnabled"] = args.CacheClusterEnabled
		inputs["cacheClusterSize"] = args.CacheClusterSize
		inputs["clientCertificateId"] = args.ClientCertificateId
		inputs["deployment"] = args.Deployment
		inputs["description"] = args.Description
		inputs["documentationVersion"] = args.DocumentationVersion
		inputs["restApi"] = args.RestApi
		inputs["stageName"] = args.StageName
		inputs["tags"] = args.Tags
		inputs["variables"] = args.Variables
		inputs["xrayTracingEnabled"] = args.XrayTracingEnabled
	}
	var resource Stage
	err := ctx.RegisterResource("aws:apigateway/stage:Stage", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStage gets an existing Stage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStage(ctx *pulumi.Context,
	name string, id pulumi.ID, state *StageState, opts ...pulumi.ResourceOpt) (*Stage, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accessLogSettings"] = state.AccessLogSettings
		inputs["cacheClusterEnabled"] = state.CacheClusterEnabled
		inputs["cacheClusterSize"] = state.CacheClusterSize
		inputs["clientCertificateId"] = state.ClientCertificateId
		inputs["deployment"] = state.Deployment
		inputs["description"] = state.Description
		inputs["documentationVersion"] = state.DocumentationVersion
		inputs["executionArn"] = state.ExecutionArn
		inputs["invokeUrl"] = state.InvokeUrl
		inputs["restApi"] = state.RestApi
		inputs["stageName"] = state.StageName
		inputs["tags"] = state.Tags
		inputs["variables"] = state.Variables
		inputs["xrayTracingEnabled"] = state.XrayTracingEnabled
	}
	var resource Stage
	err := ctx.ReadResource("aws:apigateway/stage:Stage", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Stage) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Stage) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Stage resources.
type StageState struct {
	// Enables access logs for the API stage. Detailed below.
	AccessLogSettings pulumi.AnyInput `pulumi:"accessLogSettings"`
	// Specifies whether a cache cluster is enabled for the stage
	CacheClusterEnabled pulumi.BoolInput `pulumi:"cacheClusterEnabled"`
	// The size of the cache cluster for the stage, if enabled.
	// Allowed values include `0.5`, `1.6`, `6.1`, `13.5`, `28.4`, `58.2`, `118` and `237`.
	CacheClusterSize pulumi.StringInput `pulumi:"cacheClusterSize"`
	// The identifier of a client certificate for the stage.
	ClientCertificateId pulumi.StringInput `pulumi:"clientCertificateId"`
	// The ID of the deployment that the stage points to
	Deployment pulumi.StringInput `pulumi:"deployment"`
	// The description of the stage
	Description pulumi.StringInput `pulumi:"description"`
	// The version of the associated API documentation
	DocumentationVersion pulumi.StringInput `pulumi:"documentationVersion"`
	// The execution ARN to be used in [`lambdaPermission`](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html)'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g. `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringInput `pulumi:"executionArn"`
	// The URL to invoke the API pointing to the stage,
	// e.g. `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringInput `pulumi:"invokeUrl"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The name of the stage
	StageName pulumi.StringInput `pulumi:"stageName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A map that defines the stage variables
	Variables pulumi.MapInput `pulumi:"variables"`
	// Whether active tracing with X-ray is enabled. Defaults to `false`.
	XrayTracingEnabled pulumi.BoolInput `pulumi:"xrayTracingEnabled"`
}

// The set of arguments for constructing a Stage resource.
type StageArgs struct {
	// Enables access logs for the API stage. Detailed below.
	AccessLogSettings pulumi.AnyInput `pulumi:"accessLogSettings"`
	// Specifies whether a cache cluster is enabled for the stage
	CacheClusterEnabled pulumi.BoolInput `pulumi:"cacheClusterEnabled"`
	// The size of the cache cluster for the stage, if enabled.
	// Allowed values include `0.5`, `1.6`, `6.1`, `13.5`, `28.4`, `58.2`, `118` and `237`.
	CacheClusterSize pulumi.StringInput `pulumi:"cacheClusterSize"`
	// The identifier of a client certificate for the stage.
	ClientCertificateId pulumi.StringInput `pulumi:"clientCertificateId"`
	// The ID of the deployment that the stage points to
	Deployment pulumi.StringInput `pulumi:"deployment"`
	// The description of the stage
	Description pulumi.StringInput `pulumi:"description"`
	// The version of the associated API documentation
	DocumentationVersion pulumi.StringInput `pulumi:"documentationVersion"`
	// The ID of the associated REST API
	RestApi pulumi.StringInput `pulumi:"restApi"`
	// The name of the stage
	StageName pulumi.StringInput `pulumi:"stageName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A map that defines the stage variables
	Variables pulumi.MapInput `pulumi:"variables"`
	// Whether active tracing with X-ray is enabled. Defaults to `false`.
	XrayTracingEnabled pulumi.BoolInput `pulumi:"xrayTracingEnabled"`
}
