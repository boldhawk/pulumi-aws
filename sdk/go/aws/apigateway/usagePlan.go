// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Usage Plan.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_usage_plan.html.markdown.
type UsagePlan struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The associated API stages of the usage plan.
	ApiStages pulumi.ArrayOutput `pulumi:"apiStages"`

	// The description of a usage plan.
	Description pulumi.StringOutput `pulumi:"description"`

	// The name of the usage plan.
	Name pulumi.StringOutput `pulumi:"name"`

	// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
	ProductCode pulumi.StringOutput `pulumi:"productCode"`

	// The quota settings of the usage plan.
	QuotaSettings pulumi.AnyOutput `pulumi:"quotaSettings"`

	// The throttling limits of the usage plan.
	ThrottleSettings pulumi.AnyOutput `pulumi:"throttleSettings"`
}

// NewUsagePlan registers a new resource with the given unique name, arguments, and options.
func NewUsagePlan(ctx *pulumi.Context,
	name string, args *UsagePlanArgs, opts ...pulumi.ResourceOpt) (*UsagePlan, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["apiStages"] = args.ApiStages
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["productCode"] = args.ProductCode
		inputs["quotaSettings"] = args.QuotaSettings
		inputs["throttleSettings"] = args.ThrottleSettings
	}
	var resource UsagePlan
	err := ctx.RegisterResource("aws:apigateway/usagePlan:UsagePlan", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsagePlan gets an existing UsagePlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsagePlan(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UsagePlanState, opts ...pulumi.ResourceOpt) (*UsagePlan, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["apiStages"] = state.ApiStages
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["productCode"] = state.ProductCode
		inputs["quotaSettings"] = state.QuotaSettings
		inputs["throttleSettings"] = state.ThrottleSettings
	}
	var resource UsagePlan
	err := ctx.ReadResource("aws:apigateway/usagePlan:UsagePlan", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *UsagePlan) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *UsagePlan) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering UsagePlan resources.
type UsagePlanState struct {
	// The associated API stages of the usage plan.
	ApiStages pulumi.ArrayInput `pulumi:"apiStages"`
	// The description of a usage plan.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the usage plan.
	Name pulumi.StringInput `pulumi:"name"`
	// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// The quota settings of the usage plan.
	QuotaSettings pulumi.AnyInput `pulumi:"quotaSettings"`
	// The throttling limits of the usage plan.
	ThrottleSettings pulumi.AnyInput `pulumi:"throttleSettings"`
}

// The set of arguments for constructing a UsagePlan resource.
type UsagePlanArgs struct {
	// The associated API stages of the usage plan.
	ApiStages pulumi.ArrayInput `pulumi:"apiStages"`
	// The description of a usage plan.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the usage plan.
	Name pulumi.StringInput `pulumi:"name"`
	// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// The quota settings of the usage plan.
	QuotaSettings pulumi.AnyInput `pulumi:"quotaSettings"`
	// The throttling limits of the usage plan.
	ThrottleSettings pulumi.AnyInput `pulumi:"throttleSettings"`
}
