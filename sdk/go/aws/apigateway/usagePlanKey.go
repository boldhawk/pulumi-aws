// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Usage Plan Key.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/api_gateway_usage_plan_key.html.markdown.
type UsagePlanKey struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The identifier of the API key resource.
	KeyId pulumi.StringOutput `pulumi:"keyId"`

	// The type of the API key resource. Currently, the valid key type is API_KEY.
	KeyType pulumi.StringOutput `pulumi:"keyType"`

	// The name of a usage plan key.
	Name pulumi.StringOutput `pulumi:"name"`

	// The Id of the usage plan resource representing to associate the key to.
	UsagePlanId pulumi.StringOutput `pulumi:"usagePlanId"`

	// The value of a usage plan key.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewUsagePlanKey registers a new resource with the given unique name, arguments, and options.
func NewUsagePlanKey(ctx *pulumi.Context,
	name string, args *UsagePlanKeyArgs, opts ...pulumi.ResourceOpt) (*UsagePlanKey, error) {
	if args == nil || args.KeyId == nil {
		return nil, errors.New("missing required argument 'KeyId'")
	}
	if args == nil || args.KeyType == nil {
		return nil, errors.New("missing required argument 'KeyType'")
	}
	if args == nil || args.UsagePlanId == nil {
		return nil, errors.New("missing required argument 'UsagePlanId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["keyId"] = args.KeyId
		inputs["keyType"] = args.KeyType
		inputs["usagePlanId"] = args.UsagePlanId
	}
	var resource UsagePlanKey
	err := ctx.RegisterResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsagePlanKey gets an existing UsagePlanKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsagePlanKey(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UsagePlanKeyState, opts ...pulumi.ResourceOpt) (*UsagePlanKey, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["keyId"] = state.KeyId
		inputs["keyType"] = state.KeyType
		inputs["name"] = state.Name
		inputs["usagePlanId"] = state.UsagePlanId
		inputs["value"] = state.Value
	}
	var resource UsagePlanKey
	err := ctx.ReadResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *UsagePlanKey) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *UsagePlanKey) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering UsagePlanKey resources.
type UsagePlanKeyState struct {
	// The identifier of the API key resource.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The type of the API key resource. Currently, the valid key type is API_KEY.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// The name of a usage plan key.
	Name pulumi.StringInput `pulumi:"name"`
	// The Id of the usage plan resource representing to associate the key to.
	UsagePlanId pulumi.StringInput `pulumi:"usagePlanId"`
	// The value of a usage plan key.
	Value pulumi.StringInput `pulumi:"value"`
}

// The set of arguments for constructing a UsagePlanKey resource.
type UsagePlanKeyArgs struct {
	// The identifier of the API key resource.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The type of the API key resource. Currently, the valid key type is API_KEY.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// The Id of the usage plan resource representing to associate the key to.
	UsagePlanId pulumi.StringInput `pulumi:"usagePlanId"`
}
