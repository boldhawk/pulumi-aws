// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Global Accelerator accelerator.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/globalaccelerator_accelerator.html.markdown.
type Accelerator struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The attributes of the accelerator. Fields documented below.
	Attributes pulumi.AnyOutput `pulumi:"attributes"`

	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`

	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringOutput `pulumi:"ipAddressType"`

	// IP address set associated with the accelerator.
	IpSets pulumi.ArrayOutput `pulumi:"ipSets"`

	// The name of the accelerator.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAccelerator registers a new resource with the given unique name, arguments, and options.
func NewAccelerator(ctx *pulumi.Context,
	name string, args *AcceleratorArgs, opts ...pulumi.ResourceOpt) (*Accelerator, error) {
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["attributes"] = args.Attributes
		inputs["enabled"] = args.Enabled
		inputs["ipAddressType"] = args.IpAddressType
		inputs["name"] = args.Name
	}
	var resource Accelerator
	err := ctx.RegisterResource("aws:globalaccelerator/accelerator:Accelerator", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccelerator gets an existing Accelerator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccelerator(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AcceleratorState, opts ...pulumi.ResourceOpt) (*Accelerator, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["attributes"] = state.Attributes
		inputs["enabled"] = state.Enabled
		inputs["ipAddressType"] = state.IpAddressType
		inputs["ipSets"] = state.IpSets
		inputs["name"] = state.Name
	}
	var resource Accelerator
	err := ctx.ReadResource("aws:globalaccelerator/accelerator:Accelerator", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Accelerator) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Accelerator) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Accelerator resources.
type AcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes pulumi.AnyInput `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringInput `pulumi:"ipAddressType"`
	// IP address set associated with the accelerator.
	IpSets pulumi.ArrayInput `pulumi:"ipSets"`
	// The name of the accelerator.
	Name pulumi.StringInput `pulumi:"name"`
}

// The set of arguments for constructing a Accelerator resource.
type AcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes pulumi.AnyInput `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringInput `pulumi:"ipAddressType"`
	// The name of the accelerator.
	Name pulumi.StringInput `pulumi:"name"`
}
