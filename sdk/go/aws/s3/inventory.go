// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a S3 bucket [inventory configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html) resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/s3_bucket_inventory.html.markdown.
type Inventory struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The S3 bucket configuration where inventory results are published (documented below).
	Bucket pulumi.StringOutput `pulumi:"bucket"`

	// Destination bucket where inventory list files are written (documented below).
	Destination pulumi.AnyOutput `pulumi:"destination"`

	// Specifies whether the inventory is enabled or disabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`

	// Object filtering that accepts a prefix (documented below).
	Filter pulumi.AnyOutput `pulumi:"filter"`

	// Object filtering that accepts a prefix (documented below). Can be `All` or `Current`.
	IncludedObjectVersions pulumi.StringOutput `pulumi:"includedObjectVersions"`

	// Unique identifier of the inventory configuration for the bucket.
	Name pulumi.StringOutput `pulumi:"name"`

	// Contains the optional fields that are included in the inventory results.
	OptionalFields pulumi.ArrayOutput `pulumi:"optionalFields"`

	// Contains the frequency for generating inventory results (documented below).
	Schedule pulumi.AnyOutput `pulumi:"schedule"`
}

// NewInventory registers a new resource with the given unique name, arguments, and options.
func NewInventory(ctx *pulumi.Context,
	name string, args *InventoryArgs, opts ...pulumi.ResourceOpt) (*Inventory, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	if args == nil || args.IncludedObjectVersions == nil {
		return nil, errors.New("missing required argument 'IncludedObjectVersions'")
	}
	if args == nil || args.Schedule == nil {
		return nil, errors.New("missing required argument 'Schedule'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["bucket"] = args.Bucket
		inputs["destination"] = args.Destination
		inputs["enabled"] = args.Enabled
		inputs["filter"] = args.Filter
		inputs["includedObjectVersions"] = args.IncludedObjectVersions
		inputs["name"] = args.Name
		inputs["optionalFields"] = args.OptionalFields
		inputs["schedule"] = args.Schedule
	}
	var resource Inventory
	err := ctx.RegisterResource("aws:s3/inventory:Inventory", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInventory gets an existing Inventory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInventory(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InventoryState, opts ...pulumi.ResourceOpt) (*Inventory, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["bucket"] = state.Bucket
		inputs["destination"] = state.Destination
		inputs["enabled"] = state.Enabled
		inputs["filter"] = state.Filter
		inputs["includedObjectVersions"] = state.IncludedObjectVersions
		inputs["name"] = state.Name
		inputs["optionalFields"] = state.OptionalFields
		inputs["schedule"] = state.Schedule
	}
	var resource Inventory
	err := ctx.ReadResource("aws:s3/inventory:Inventory", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Inventory) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Inventory) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Inventory resources.
type InventoryState struct {
	// The S3 bucket configuration where inventory results are published (documented below).
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Destination bucket where inventory list files are written (documented below).
	Destination pulumi.AnyInput `pulumi:"destination"`
	// Specifies whether the inventory is enabled or disabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Object filtering that accepts a prefix (documented below).
	Filter pulumi.AnyInput `pulumi:"filter"`
	// Object filtering that accepts a prefix (documented below). Can be `All` or `Current`.
	IncludedObjectVersions pulumi.StringInput `pulumi:"includedObjectVersions"`
	// Unique identifier of the inventory configuration for the bucket.
	Name pulumi.StringInput `pulumi:"name"`
	// Contains the optional fields that are included in the inventory results.
	OptionalFields pulumi.ArrayInput `pulumi:"optionalFields"`
	// Contains the frequency for generating inventory results (documented below).
	Schedule pulumi.AnyInput `pulumi:"schedule"`
}

// The set of arguments for constructing a Inventory resource.
type InventoryArgs struct {
	// The S3 bucket configuration where inventory results are published (documented below).
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Destination bucket where inventory list files are written (documented below).
	Destination pulumi.AnyInput `pulumi:"destination"`
	// Specifies whether the inventory is enabled or disabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Object filtering that accepts a prefix (documented below).
	Filter pulumi.AnyInput `pulumi:"filter"`
	// Object filtering that accepts a prefix (documented below). Can be `All` or `Current`.
	IncludedObjectVersions pulumi.StringInput `pulumi:"includedObjectVersions"`
	// Unique identifier of the inventory configuration for the bucket.
	Name pulumi.StringInput `pulumi:"name"`
	// Contains the optional fields that are included in the inventory results.
	OptionalFields pulumi.ArrayInput `pulumi:"optionalFields"`
	// Contains the frequency for generating inventory results (documented below).
	Schedule pulumi.AnyInput `pulumi:"schedule"`
}
