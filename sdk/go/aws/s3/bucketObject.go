// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a S3 bucket object resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/s3_bucket_object.html.markdown.
type BucketObject struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".
	Acl pulumi.StringOutput `pulumi:"acl"`

	// The name of the bucket to put the file in.
	Bucket pulumi.StringOutput `pulumi:"bucket"`

	// Specifies caching behavior along the request/reply chain Read [w3c cacheControl](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
	CacheControl pulumi.StringOutput `pulumi:"cacheControl"`

	// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
	Content pulumi.StringOutput `pulumi:"content"`

	// Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.
	ContentBase64 pulumi.StringOutput `pulumi:"contentBase64"`

	// Specifies presentational information for the object. Read [w3c contentDisposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`

	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
	ContentEncoding pulumi.StringOutput `pulumi:"contentEncoding"`

	// The language the content is in e.g. en-US or en-GB.
	ContentLanguage pulumi.StringOutput `pulumi:"contentLanguage"`

	// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
	ContentType pulumi.StringOutput `pulumi:"contentType"`

	// Used to trigger updates. The only meaningful value is `${filemd5("path/to/file")}` (this provider 0.11.12 or later) or `${md5(file("path/to/file"))}` (this provider 0.11.11 or earlier).
	// This attribute is not compatible with KMS encryption, `kmsKeyId` or `serverSideEncryption = "aws:kms"`.
	Etag pulumi.StringOutput `pulumi:"etag"`

	// Allow the object to be deleted by removing any legal hold on any object version.
	// Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
	ForceDestroy pulumi.BoolOutput `pulumi:"forceDestroy"`

	// The name of the object once it is in the bucket.
	Key pulumi.StringOutput `pulumi:"key"`

	// Specifies the AWS KMS Key ARN to use for object encryption.
	// This value is a fully qualified **ARN** of the KMS Key. If using `kms.Key`,
	// use the exported `arn` attribute:
	// `kmsKeyId = "${aws_kms_key.foo.arn}"`
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`

	// A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
	Metadata pulumi.MapOutput `pulumi:"metadata"`

	// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHoldStatus pulumi.StringOutput `pulumi:"objectLockLegalHoldStatus"`

	// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringOutput `pulumi:"objectLockMode"`

	// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
	ObjectLockRetainUntilDate pulumi.StringOutput `pulumi:"objectLockRetainUntilDate"`

	// Specifies server-side encryption of the object in S3. Valid values are "`AES256`" and "`aws:kms`".
	ServerSideEncryption pulumi.StringOutput `pulumi:"serverSideEncryption"`

	// The path to a file that will be read and uploaded as raw bytes for the object content.
	Source pulumi.StringOutput `pulumi:"source"`

	// Specifies the desired [Storage Class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html)
	// for the object. Can be either "`STANDARD`", "`REDUCED_REDUNDANCY`", "`ONEZONE_IA`", "`INTELLIGENT_TIERING`", "`GLACIER`", "`DEEP_ARCHIVE`", or "`STANDARD_IA`". Defaults to "`STANDARD`".
	StorageClass pulumi.StringOutput `pulumi:"storageClass"`

	// A mapping of tags to assign to the object.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// A unique version ID value for the object, if bucket versioning
	// is enabled.
	VersionId pulumi.StringOutput `pulumi:"versionId"`

	// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
	WebsiteRedirect pulumi.StringOutput `pulumi:"websiteRedirect"`
}

// NewBucketObject registers a new resource with the given unique name, arguments, and options.
func NewBucketObject(ctx *pulumi.Context,
	name string, args *BucketObjectArgs, opts ...pulumi.ResourceOpt) (*BucketObject, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["acl"] = args.Acl
		inputs["bucket"] = args.Bucket
		inputs["cacheControl"] = args.CacheControl
		inputs["content"] = args.Content
		inputs["contentBase64"] = args.ContentBase64
		inputs["contentDisposition"] = args.ContentDisposition
		inputs["contentEncoding"] = args.ContentEncoding
		inputs["contentLanguage"] = args.ContentLanguage
		inputs["contentType"] = args.ContentType
		inputs["etag"] = args.Etag
		inputs["forceDestroy"] = args.ForceDestroy
		inputs["key"] = args.Key
		inputs["kmsKeyId"] = args.KmsKeyId
		inputs["metadata"] = args.Metadata
		inputs["objectLockLegalHoldStatus"] = args.ObjectLockLegalHoldStatus
		inputs["objectLockMode"] = args.ObjectLockMode
		inputs["objectLockRetainUntilDate"] = args.ObjectLockRetainUntilDate
		inputs["serverSideEncryption"] = args.ServerSideEncryption
		inputs["source"] = args.Source
		inputs["storageClass"] = args.StorageClass
		inputs["tags"] = args.Tags
		inputs["websiteRedirect"] = args.WebsiteRedirect
	}
	var resource BucketObject
	err := ctx.RegisterResource("aws:s3/bucketObject:BucketObject", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketObject gets an existing BucketObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketObject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BucketObjectState, opts ...pulumi.ResourceOpt) (*BucketObject, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["acl"] = state.Acl
		inputs["bucket"] = state.Bucket
		inputs["cacheControl"] = state.CacheControl
		inputs["content"] = state.Content
		inputs["contentBase64"] = state.ContentBase64
		inputs["contentDisposition"] = state.ContentDisposition
		inputs["contentEncoding"] = state.ContentEncoding
		inputs["contentLanguage"] = state.ContentLanguage
		inputs["contentType"] = state.ContentType
		inputs["etag"] = state.Etag
		inputs["forceDestroy"] = state.ForceDestroy
		inputs["key"] = state.Key
		inputs["kmsKeyId"] = state.KmsKeyId
		inputs["metadata"] = state.Metadata
		inputs["objectLockLegalHoldStatus"] = state.ObjectLockLegalHoldStatus
		inputs["objectLockMode"] = state.ObjectLockMode
		inputs["objectLockRetainUntilDate"] = state.ObjectLockRetainUntilDate
		inputs["serverSideEncryption"] = state.ServerSideEncryption
		inputs["source"] = state.Source
		inputs["storageClass"] = state.StorageClass
		inputs["tags"] = state.Tags
		inputs["versionId"] = state.VersionId
		inputs["websiteRedirect"] = state.WebsiteRedirect
	}
	var resource BucketObject
	err := ctx.ReadResource("aws:s3/bucketObject:BucketObject", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *BucketObject) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *BucketObject) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering BucketObject resources.
type BucketObjectState struct {
	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".
	Acl pulumi.StringInput `pulumi:"acl"`
	// The name of the bucket to put the file in.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies caching behavior along the request/reply chain Read [w3c cacheControl](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
	CacheControl pulumi.StringInput `pulumi:"cacheControl"`
	// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
	Content pulumi.StringInput `pulumi:"content"`
	// Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.
	ContentBase64 pulumi.StringInput `pulumi:"contentBase64"`
	// Specifies presentational information for the object. Read [w3c contentDisposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
	ContentDisposition pulumi.StringInput `pulumi:"contentDisposition"`
	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
	ContentEncoding pulumi.StringInput `pulumi:"contentEncoding"`
	// The language the content is in e.g. en-US or en-GB.
	ContentLanguage pulumi.StringInput `pulumi:"contentLanguage"`
	// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Used to trigger updates. The only meaningful value is `${filemd5("path/to/file")}` (this provider 0.11.12 or later) or `${md5(file("path/to/file"))}` (this provider 0.11.11 or earlier).
	// This attribute is not compatible with KMS encryption, `kmsKeyId` or `serverSideEncryption = "aws:kms"`.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Allow the object to be deleted by removing any legal hold on any object version.
	// Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
	ForceDestroy pulumi.BoolInput `pulumi:"forceDestroy"`
	// The name of the object once it is in the bucket.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies the AWS KMS Key ARN to use for object encryption.
	// This value is a fully qualified **ARN** of the KMS Key. If using `kms.Key`,
	// use the exported `arn` attribute:
	// `kmsKeyId = "${aws_kms_key.foo.arn}"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHoldStatus pulumi.StringInput `pulumi:"objectLockLegalHoldStatus"`
	// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringInput `pulumi:"objectLockMode"`
	// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
	ObjectLockRetainUntilDate pulumi.StringInput `pulumi:"objectLockRetainUntilDate"`
	// Specifies server-side encryption of the object in S3. Valid values are "`AES256`" and "`aws:kms`".
	ServerSideEncryption pulumi.StringInput `pulumi:"serverSideEncryption"`
	// The path to a file that will be read and uploaded as raw bytes for the object content.
	Source pulumi.StringInput `pulumi:"source"`
	// Specifies the desired [Storage Class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html)
	// for the object. Can be either "`STANDARD`", "`REDUCED_REDUNDANCY`", "`ONEZONE_IA`", "`INTELLIGENT_TIERING`", "`GLACIER`", "`DEEP_ARCHIVE`", or "`STANDARD_IA`". Defaults to "`STANDARD`".
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A unique version ID value for the object, if bucket versioning
	// is enabled.
	VersionId pulumi.StringInput `pulumi:"versionId"`
	// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
	WebsiteRedirect pulumi.StringInput `pulumi:"websiteRedirect"`
}

// The set of arguments for constructing a BucketObject resource.
type BucketObjectArgs struct {
	// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".
	Acl pulumi.StringInput `pulumi:"acl"`
	// The name of the bucket to put the file in.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies caching behavior along the request/reply chain Read [w3c cacheControl](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
	CacheControl pulumi.StringInput `pulumi:"cacheControl"`
	// Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
	Content pulumi.StringInput `pulumi:"content"`
	// Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the `gzipbase64` function with small text strings. For larger objects, use `source` to stream the content from a disk file.
	ContentBase64 pulumi.StringInput `pulumi:"contentBase64"`
	// Specifies presentational information for the object. Read [w3c contentDisposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
	ContentDisposition pulumi.StringInput `pulumi:"contentDisposition"`
	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
	ContentEncoding pulumi.StringInput `pulumi:"contentEncoding"`
	// The language the content is in e.g. en-US or en-GB.
	ContentLanguage pulumi.StringInput `pulumi:"contentLanguage"`
	// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Used to trigger updates. The only meaningful value is `${filemd5("path/to/file")}` (this provider 0.11.12 or later) or `${md5(file("path/to/file"))}` (this provider 0.11.11 or earlier).
	// This attribute is not compatible with KMS encryption, `kmsKeyId` or `serverSideEncryption = "aws:kms"`.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Allow the object to be deleted by removing any legal hold on any object version.
	// Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
	ForceDestroy pulumi.BoolInput `pulumi:"forceDestroy"`
	// The name of the object once it is in the bucket.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies the AWS KMS Key ARN to use for object encryption.
	// This value is a fully qualified **ARN** of the KMS Key. If using `kms.Key`,
	// use the exported `arn` attribute:
	// `kmsKeyId = "${aws_kms_key.foo.arn}"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// A mapping of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHoldStatus pulumi.StringInput `pulumi:"objectLockLegalHoldStatus"`
	// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringInput `pulumi:"objectLockMode"`
	// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
	ObjectLockRetainUntilDate pulumi.StringInput `pulumi:"objectLockRetainUntilDate"`
	// Specifies server-side encryption of the object in S3. Valid values are "`AES256`" and "`aws:kms`".
	ServerSideEncryption pulumi.StringInput `pulumi:"serverSideEncryption"`
	// The path to a file that will be read and uploaded as raw bytes for the object content.
	Source pulumi.StringInput `pulumi:"source"`
	// Specifies the desired [Storage Class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html)
	// for the object. Can be either "`STANDARD`", "`REDUCED_REDUNDANCY`", "`ONEZONE_IA`", "`INTELLIGENT_TIERING`", "`GLACIER`", "`DEEP_ARCHIVE`", or "`STANDARD_IA`". Defaults to "`STANDARD`".
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
	WebsiteRedirect pulumi.StringInput `pulumi:"websiteRedirect"`
}
