// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Kinesis Firehose Delivery Stream resource. Amazon Kinesis Firehose is a fully managed, elastic service to easily deliver real-time data streams to destinations such as Amazon S3 and Amazon Redshift.
// 
// For more details, see the [Amazon Kinesis Firehose Documentation][1].
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/kinesis_firehose_delivery_stream.html.markdown.
type FirehoseDeliveryStream struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringOutput `pulumi:"arn"`

	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, and `splunk`.
	Destination pulumi.StringOutput `pulumi:"destination"`

	DestinationId pulumi.StringOutput `pulumi:"destinationId"`

	ElasticsearchConfiguration pulumi.AnyOutput `pulumi:"elasticsearchConfiguration"`

	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumi.AnyOutput `pulumi:"extendedS3Configuration"`

	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumi.AnyOutput `pulumi:"kinesisSourceConfiguration"`

	// A name to identify the stream. This is unique to the
	// AWS account and region the Stream is created in.
	Name pulumi.StringOutput `pulumi:"name"`

	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumi.AnyOutput `pulumi:"redshiftConfiguration"`

	// Required for non-S3 destinations. For S3 destination, use `extendedS3Configuration` instead. Configuration options for the s3 destination (or the intermediate bucket if the destination
	// is redshift). More details are given below.
	S3Configuration pulumi.AnyOutput `pulumi:"s3Configuration"`

	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumi.AnyOutput `pulumi:"serverSideEncryption"`

	SplunkConfiguration pulumi.AnyOutput `pulumi:"splunkConfiguration"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewFirehoseDeliveryStream registers a new resource with the given unique name, arguments, and options.
func NewFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, args *FirehoseDeliveryStreamArgs, opts ...pulumi.ResourceOpt) (*FirehoseDeliveryStream, error) {
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["arn"] = args.Arn
		inputs["destination"] = args.Destination
		inputs["destinationId"] = args.DestinationId
		inputs["elasticsearchConfiguration"] = args.ElasticsearchConfiguration
		inputs["extendedS3Configuration"] = args.ExtendedS3Configuration
		inputs["kinesisSourceConfiguration"] = args.KinesisSourceConfiguration
		inputs["name"] = args.Name
		inputs["redshiftConfiguration"] = args.RedshiftConfiguration
		inputs["s3Configuration"] = args.S3Configuration
		inputs["serverSideEncryption"] = args.ServerSideEncryption
		inputs["splunkConfiguration"] = args.SplunkConfiguration
		inputs["tags"] = args.Tags
		inputs["versionId"] = args.VersionId
	}
	var resource FirehoseDeliveryStream
	err := ctx.RegisterResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirehoseDeliveryStream gets an existing FirehoseDeliveryStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FirehoseDeliveryStreamState, opts ...pulumi.ResourceOpt) (*FirehoseDeliveryStream, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["destination"] = state.Destination
		inputs["destinationId"] = state.DestinationId
		inputs["elasticsearchConfiguration"] = state.ElasticsearchConfiguration
		inputs["extendedS3Configuration"] = state.ExtendedS3Configuration
		inputs["kinesisSourceConfiguration"] = state.KinesisSourceConfiguration
		inputs["name"] = state.Name
		inputs["redshiftConfiguration"] = state.RedshiftConfiguration
		inputs["s3Configuration"] = state.S3Configuration
		inputs["serverSideEncryption"] = state.ServerSideEncryption
		inputs["splunkConfiguration"] = state.SplunkConfiguration
		inputs["tags"] = state.Tags
		inputs["versionId"] = state.VersionId
	}
	var resource FirehoseDeliveryStream
	err := ctx.ReadResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *FirehoseDeliveryStream) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *FirehoseDeliveryStream) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering FirehoseDeliveryStream resources.
type FirehoseDeliveryStreamState struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringInput `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, and `splunk`.
	Destination pulumi.StringInput `pulumi:"destination"`
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
	ElasticsearchConfiguration pulumi.AnyInput `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumi.AnyInput `pulumi:"extendedS3Configuration"`
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumi.AnyInput `pulumi:"kinesisSourceConfiguration"`
	// A name to identify the stream. This is unique to the
	// AWS account and region the Stream is created in.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumi.AnyInput `pulumi:"redshiftConfiguration"`
	// Required for non-S3 destinations. For S3 destination, use `extendedS3Configuration` instead. Configuration options for the s3 destination (or the intermediate bucket if the destination
	// is redshift). More details are given below.
	S3Configuration pulumi.AnyInput `pulumi:"s3Configuration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumi.AnyInput `pulumi:"serverSideEncryption"`
	SplunkConfiguration pulumi.AnyInput `pulumi:"splunkConfiguration"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringInput `pulumi:"versionId"`
}

// The set of arguments for constructing a FirehoseDeliveryStream resource.
type FirehoseDeliveryStreamArgs struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringInput `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, and `splunk`.
	Destination pulumi.StringInput `pulumi:"destination"`
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
	ElasticsearchConfiguration pulumi.AnyInput `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumi.AnyInput `pulumi:"extendedS3Configuration"`
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumi.AnyInput `pulumi:"kinesisSourceConfiguration"`
	// A name to identify the stream. This is unique to the
	// AWS account and region the Stream is created in.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumi.AnyInput `pulumi:"redshiftConfiguration"`
	// Required for non-S3 destinations. For S3 destination, use `extendedS3Configuration` instead. Configuration options for the s3 destination (or the intermediate bucket if the destination
	// is redshift). More details are given below.
	S3Configuration pulumi.AnyInput `pulumi:"s3Configuration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumi.AnyInput `pulumi:"serverSideEncryption"`
	SplunkConfiguration pulumi.AnyInput `pulumi:"splunkConfiguration"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringInput `pulumi:"versionId"`
}
