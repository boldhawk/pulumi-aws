// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a KMS customer master key.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/kms_key.html.markdown.
type Key struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) of the key.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntOutput `pulumi:"deletionWindowInDays"`

	// The description of the key as viewed in AWS console.
	Description pulumi.StringOutput `pulumi:"description"`

	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolOutput `pulumi:"enableKeyRotation"`

	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`

	// The globally unique identifier for the key.
	KeyId pulumi.StringOutput `pulumi:"keyId"`

	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringOutput `pulumi:"keyUsage"`

	// A valid policy JSON document.
	Policy pulumi.StringOutput `pulumi:"policy"`

	// A mapping of tags to assign to the object.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewKey registers a new resource with the given unique name, arguments, and options.
func NewKey(ctx *pulumi.Context,
	name string, args *KeyArgs, opts ...pulumi.ResourceOpt) (*Key, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["deletionWindowInDays"] = args.DeletionWindowInDays
		inputs["description"] = args.Description
		inputs["enableKeyRotation"] = args.EnableKeyRotation
		inputs["isEnabled"] = args.IsEnabled
		inputs["keyUsage"] = args.KeyUsage
		inputs["policy"] = args.Policy
		inputs["tags"] = args.Tags
	}
	var resource Key
	err := ctx.RegisterResource("aws:kms/key:Key", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKey gets an existing Key resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKey(ctx *pulumi.Context,
	name string, id pulumi.ID, state *KeyState, opts ...pulumi.ResourceOpt) (*Key, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["deletionWindowInDays"] = state.DeletionWindowInDays
		inputs["description"] = state.Description
		inputs["enableKeyRotation"] = state.EnableKeyRotation
		inputs["isEnabled"] = state.IsEnabled
		inputs["keyId"] = state.KeyId
		inputs["keyUsage"] = state.KeyUsage
		inputs["policy"] = state.Policy
		inputs["tags"] = state.Tags
	}
	var resource Key
	err := ctx.ReadResource("aws:kms/key:Key", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Key) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Key) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Key resources.
type KeyState struct {
	// The Amazon Resource Name (ARN) of the key.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntInput `pulumi:"deletionWindowInDays"`
	// The description of the key as viewed in AWS console.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolInput `pulumi:"enableKeyRotation"`
	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The globally unique identifier for the key.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringInput `pulumi:"keyUsage"`
	// A valid policy JSON document.
	Policy pulumi.StringInput `pulumi:"policy"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Key resource.
type KeyArgs struct {
	// Duration in days after which the key is deleted
	// after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.
	DeletionWindowInDays pulumi.IntInput `pulumi:"deletionWindowInDays"`
	// The description of the key as viewed in AWS console.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html)
	// is enabled. Defaults to false.
	EnableKeyRotation pulumi.BoolInput `pulumi:"enableKeyRotation"`
	// Specifies whether the key is enabled. Defaults to true.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Specifies the intended use of the key.
	// Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.
	KeyUsage pulumi.StringInput `pulumi:"keyUsage"`
	// A valid policy JSON document.
	Policy pulumi.StringInput `pulumi:"policy"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}
