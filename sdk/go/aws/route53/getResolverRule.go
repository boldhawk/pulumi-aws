// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `route53.ResolverRule` provides details about a specific Route53 Resolver rule.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/route53_resolver_rule.html.markdown.
func LookupResolverRule(ctx *pulumi.Context, args *GetResolverRuleArgs) (*GetResolverRuleResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["domainName"] = args.DomainName
		inputs["name"] = args.Name
		inputs["resolverEndpointId"] = args.ResolverEndpointId
		inputs["resolverRuleId"] = args.ResolverRuleId
		inputs["ruleType"] = args.RuleType
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:route53/getResolverRule:getResolverRule", inputs)
	if err != nil {
		return nil, err
	}
	return &GetResolverRuleResult{
		Arn: outputs["arn"],
		DomainName: outputs["domainName"],
		Name: outputs["name"],
		OwnerId: outputs["ownerId"],
		ResolverEndpointId: outputs["resolverEndpointId"],
		ResolverRuleId: outputs["resolverRuleId"],
		RuleType: outputs["ruleType"],
		ShareStatus: outputs["shareStatus"],
		Tags: outputs["tags"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getResolverRule.
type GetResolverRuleArgs struct {
	// The domain name the desired resolver rule forwards DNS queries for. Conflicts with `resolverRuleId`.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The friendly name of the desired resolver rule. Conflicts with `resolverRuleId`.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the outbound resolver endpoint of the desired resolver rule. Conflicts with `resolverRuleId`.
	ResolverEndpointId pulumi.StringInput `pulumi:"resolverEndpointId"`
	// The ID of the desired resolver rule. Conflicts with `domainName`, `name`, `resolverEndpointId` and `ruleType`.
	ResolverRuleId pulumi.StringInput `pulumi:"resolverRuleId"`
	// The rule type of the desired resolver rule. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`. Conflicts with `resolverRuleId`.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	Tags pulumi.MapInput `pulumi:"tags"`
}

// A collection of values returned by getResolverRule.
type GetResolverRuleResult struct {
	// The ARN (Amazon Resource Name) for the resolver rule.
	Arn string `pulumi:"arn"`
	DomainName string `pulumi:"domainName"`
	Name string `pulumi:"name"`
	// When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.
	OwnerId string `pulumi:"ownerId"`
	ResolverEndpointId string `pulumi:"resolverEndpointId"`
	ResolverRuleId string `pulumi:"resolverRuleId"`
	RuleType string `pulumi:"ruleType"`
	// Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
	// Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
	ShareStatus string `pulumi:"shareStatus"`
	// A mapping of tags assigned to the resolver rule.
	Tags map[string]interface{} `pulumi:"tags"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
