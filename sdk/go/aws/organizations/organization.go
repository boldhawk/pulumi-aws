// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create an organization.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/organizations_organization.html.markdown.
type Organization struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
	Accounts pulumi.ArrayOutput `pulumi:"accounts"`

	// ARN of the root
	Arn pulumi.StringOutput `pulumi:"arn"`

	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
	AwsServiceAccessPrincipals pulumi.ArrayOutput `pulumi:"awsServiceAccessPrincipals"`

	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g. `SERVICE_CONTROL_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumi.ArrayOutput `pulumi:"enabledPolicyTypes"`

	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumi.StringOutput `pulumi:"featureSet"`

	// ARN of the master account
	MasterAccountArn pulumi.StringOutput `pulumi:"masterAccountArn"`

	// Email address of the master account
	MasterAccountEmail pulumi.StringOutput `pulumi:"masterAccountEmail"`

	// Identifier of the master account
	MasterAccountId pulumi.StringOutput `pulumi:"masterAccountId"`

	// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
	NonMasterAccounts pulumi.ArrayOutput `pulumi:"nonMasterAccounts"`

	// List of organization roots. All elements have these attributes:
	Roots pulumi.ArrayOutput `pulumi:"roots"`
}

// NewOrganization registers a new resource with the given unique name, arguments, and options.
func NewOrganization(ctx *pulumi.Context,
	name string, args *OrganizationArgs, opts ...pulumi.ResourceOpt) (*Organization, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["awsServiceAccessPrincipals"] = args.AwsServiceAccessPrincipals
		inputs["enabledPolicyTypes"] = args.EnabledPolicyTypes
		inputs["featureSet"] = args.FeatureSet
	}
	var resource Organization
	err := ctx.RegisterResource("aws:organizations/organization:Organization", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganization gets an existing Organization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganization(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OrganizationState, opts ...pulumi.ResourceOpt) (*Organization, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accounts"] = state.Accounts
		inputs["arn"] = state.Arn
		inputs["awsServiceAccessPrincipals"] = state.AwsServiceAccessPrincipals
		inputs["enabledPolicyTypes"] = state.EnabledPolicyTypes
		inputs["featureSet"] = state.FeatureSet
		inputs["masterAccountArn"] = state.MasterAccountArn
		inputs["masterAccountEmail"] = state.MasterAccountEmail
		inputs["masterAccountId"] = state.MasterAccountId
		inputs["nonMasterAccounts"] = state.NonMasterAccounts
		inputs["roots"] = state.Roots
	}
	var resource Organization
	err := ctx.ReadResource("aws:organizations/organization:Organization", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Organization) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Organization) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Organization resources.
type OrganizationState struct {
	// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
	Accounts pulumi.ArrayInput `pulumi:"accounts"`
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
	AwsServiceAccessPrincipals pulumi.ArrayInput `pulumi:"awsServiceAccessPrincipals"`
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g. `SERVICE_CONTROL_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumi.ArrayInput `pulumi:"enabledPolicyTypes"`
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumi.StringInput `pulumi:"featureSet"`
	// ARN of the master account
	MasterAccountArn pulumi.StringInput `pulumi:"masterAccountArn"`
	// Email address of the master account
	MasterAccountEmail pulumi.StringInput `pulumi:"masterAccountEmail"`
	// Identifier of the master account
	MasterAccountId pulumi.StringInput `pulumi:"masterAccountId"`
	// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
	NonMasterAccounts pulumi.ArrayInput `pulumi:"nonMasterAccounts"`
	// List of organization roots. All elements have these attributes:
	Roots pulumi.ArrayInput `pulumi:"roots"`
}

// The set of arguments for constructing a Organization resource.
type OrganizationArgs struct {
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
	AwsServiceAccessPrincipals pulumi.ArrayInput `pulumi:"awsServiceAccessPrincipals"`
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g. `SERVICE_CONTROL_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumi.ArrayInput `pulumi:"enabledPolicyTypes"`
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumi.StringInput `pulumi:"featureSet"`
}
