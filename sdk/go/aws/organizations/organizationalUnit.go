// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create an organizational unit.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/organizations_organizational_unit.html.markdown.
type OrganizationalUnit struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	Accounts pulumi.ArrayOutput `pulumi:"accounts"`

	// ARN of the organizational unit
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The name for the organizational unit
	Name pulumi.StringOutput `pulumi:"name"`

	// ID of the parent organizational unit, which may be the root
	ParentId pulumi.StringOutput `pulumi:"parentId"`
}

// NewOrganizationalUnit registers a new resource with the given unique name, arguments, and options.
func NewOrganizationalUnit(ctx *pulumi.Context,
	name string, args *OrganizationalUnitArgs, opts ...pulumi.ResourceOpt) (*OrganizationalUnit, error) {
	if args == nil || args.ParentId == nil {
		return nil, errors.New("missing required argument 'ParentId'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["name"] = args.Name
		inputs["parentId"] = args.ParentId
	}
	var resource OrganizationalUnit
	err := ctx.RegisterResource("aws:organizations/organizationalUnit:OrganizationalUnit", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationalUnit gets an existing OrganizationalUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationalUnit(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OrganizationalUnitState, opts ...pulumi.ResourceOpt) (*OrganizationalUnit, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accounts"] = state.Accounts
		inputs["arn"] = state.Arn
		inputs["name"] = state.Name
		inputs["parentId"] = state.ParentId
	}
	var resource OrganizationalUnit
	err := ctx.ReadResource("aws:organizations/organizationalUnit:OrganizationalUnit", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *OrganizationalUnit) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *OrganizationalUnit) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering OrganizationalUnit resources.
type OrganizationalUnitState struct {
	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	Accounts pulumi.ArrayInput `pulumi:"accounts"`
	// ARN of the organizational unit
	Arn pulumi.StringInput `pulumi:"arn"`
	// The name for the organizational unit
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the parent organizational unit, which may be the root
	ParentId pulumi.StringInput `pulumi:"parentId"`
}

// The set of arguments for constructing a OrganizationalUnit resource.
type OrganizationalUnitArgs struct {
	// The name for the organizational unit
	Name pulumi.StringInput `pulumi:"name"`
	// ID of the parent organizational unit, which may be the root
	ParentId pulumi.StringInput `pulumi:"parentId"`
}
