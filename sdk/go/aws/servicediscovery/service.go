// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Service Discovery Service resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/service_discovery_service.html.markdown.
type Service struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN of the service.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The description of the service.
	Description pulumi.StringOutput `pulumi:"description"`

	// A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.
	DnsConfig pulumi.AnyOutput `pulumi:"dnsConfig"`

	// A complex type that contains settings for an optional health check. Only for Public DNS namespaces.
	HealthCheckConfig pulumi.AnyOutput `pulumi:"healthCheckConfig"`

	// A complex type that contains settings for ECS managed health checks.
	HealthCheckCustomConfig pulumi.AnyOutput `pulumi:"healthCheckCustomConfig"`

	// The name of the service.
	Name pulumi.StringOutput `pulumi:"name"`

	// The ID of the namespace to use for DNS configuration.
	NamespaceId pulumi.StringOutput `pulumi:"namespaceId"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOpt) (*Service, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["description"] = args.Description
		inputs["dnsConfig"] = args.DnsConfig
		inputs["healthCheckConfig"] = args.HealthCheckConfig
		inputs["healthCheckCustomConfig"] = args.HealthCheckCustomConfig
		inputs["name"] = args.Name
		inputs["namespaceId"] = args.NamespaceId
	}
	var resource Service
	err := ctx.RegisterResource("aws:servicediscovery/service:Service", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ServiceState, opts ...pulumi.ResourceOpt) (*Service, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["dnsConfig"] = state.DnsConfig
		inputs["healthCheckConfig"] = state.HealthCheckConfig
		inputs["healthCheckCustomConfig"] = state.HealthCheckCustomConfig
		inputs["name"] = state.Name
		inputs["namespaceId"] = state.NamespaceId
	}
	var resource Service
	err := ctx.ReadResource("aws:servicediscovery/service:Service", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Service) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Service) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Service resources.
type ServiceState struct {
	// The ARN of the service.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The description of the service.
	Description pulumi.StringInput `pulumi:"description"`
	// A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.
	DnsConfig pulumi.AnyInput `pulumi:"dnsConfig"`
	// A complex type that contains settings for an optional health check. Only for Public DNS namespaces.
	HealthCheckConfig pulumi.AnyInput `pulumi:"healthCheckConfig"`
	// A complex type that contains settings for ECS managed health checks.
	HealthCheckCustomConfig pulumi.AnyInput `pulumi:"healthCheckCustomConfig"`
	// The name of the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// The description of the service.
	Description pulumi.StringInput `pulumi:"description"`
	// A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.
	DnsConfig pulumi.AnyInput `pulumi:"dnsConfig"`
	// A complex type that contains settings for an optional health check. Only for Public DNS namespaces.
	HealthCheckConfig pulumi.AnyInput `pulumi:"healthCheckConfig"`
	// A complex type that contains settings for ECS managed health checks.
	HealthCheckCustomConfig pulumi.AnyInput `pulumi:"healthCheckCustomConfig"`
	// The name of the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
}
