// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SES email identity resource
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ses_email_identity.html.markdown.
type EmailIdentity struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN of the email identity.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The email address to assign to SES
	Email pulumi.StringOutput `pulumi:"email"`
}

// NewEmailIdentity registers a new resource with the given unique name, arguments, and options.
func NewEmailIdentity(ctx *pulumi.Context,
	name string, args *EmailIdentityArgs, opts ...pulumi.ResourceOpt) (*EmailIdentity, error) {
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["email"] = args.Email
	}
	var resource EmailIdentity
	err := ctx.RegisterResource("aws:ses/emailIdentity:EmailIdentity", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailIdentity gets an existing EmailIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailIdentity(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EmailIdentityState, opts ...pulumi.ResourceOpt) (*EmailIdentity, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["email"] = state.Email
	}
	var resource EmailIdentity
	err := ctx.ReadResource("aws:ses/emailIdentity:EmailIdentity", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *EmailIdentity) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *EmailIdentity) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering EmailIdentity resources.
type EmailIdentityState struct {
	// The ARN of the email identity.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The email address to assign to SES
	Email pulumi.StringInput `pulumi:"email"`
}

// The set of arguments for constructing a EmailIdentity resource.
type EmailIdentityArgs struct {
	// The email address to assign to SES
	Email pulumi.StringInput `pulumi:"email"`
}
