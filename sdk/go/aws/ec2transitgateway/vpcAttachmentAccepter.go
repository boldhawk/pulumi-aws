// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages the accepter's side of an EC2 Transit Gateway VPC Attachment.
// 
// When a cross-account (requester's AWS account differs from the accepter's AWS account) EC2 Transit Gateway VPC Attachment
// is created, an EC2 Transit Gateway VPC Attachment resource is automatically created in the accepter's account.
// The requester can use the `ec2transitgateway.VpcAttachment` resource to manage its side of the connection
// and the accepter can use the `ec2transitgateway.VpcAttachmentAccepter` resource to "adopt" its side of the
// connection into management.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ec2_transit_gateway_vpc_attachment_accepter.html.markdown.
type VpcAttachmentAccepter struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Whether DNS support is enabled. Valid values: `disable`, `enable`.
	DnsSupport pulumi.StringOutput `pulumi:"dnsSupport"`

	// Whether IPv6 support is enabled. Valid values: `disable`, `enable`.
	Ipv6Support pulumi.StringOutput `pulumi:"ipv6Support"`

	// Identifiers of EC2 Subnets.
	SubnetIds pulumi.ArrayOutput `pulumi:"subnetIds"`

	// Key-value tags for the EC2 Transit Gateway VPC Attachment.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// The ID of the EC2 Transit Gateway Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`

	// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumi.BoolOutput `pulumi:"transitGatewayDefaultRouteTableAssociation"`

	// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumi.BoolOutput `pulumi:"transitGatewayDefaultRouteTablePropagation"`

	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumi.StringOutput `pulumi:"transitGatewayId"`

	// Identifier of EC2 VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`

	// Identifier of the AWS account that owns the EC2 VPC.
	VpcOwnerId pulumi.StringOutput `pulumi:"vpcOwnerId"`
}

// NewVpcAttachmentAccepter registers a new resource with the given unique name, arguments, and options.
func NewVpcAttachmentAccepter(ctx *pulumi.Context,
	name string, args *VpcAttachmentAccepterArgs, opts ...pulumi.ResourceOpt) (*VpcAttachmentAccepter, error) {
	if args == nil || args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("missing required argument 'TransitGatewayAttachmentId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["tags"] = args.Tags
		inputs["transitGatewayAttachmentId"] = args.TransitGatewayAttachmentId
		inputs["transitGatewayDefaultRouteTableAssociation"] = args.TransitGatewayDefaultRouteTableAssociation
		inputs["transitGatewayDefaultRouteTablePropagation"] = args.TransitGatewayDefaultRouteTablePropagation
	}
	var resource VpcAttachmentAccepter
	err := ctx.RegisterResource("aws:ec2transitgateway/vpcAttachmentAccepter:VpcAttachmentAccepter", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAttachmentAccepter gets an existing VpcAttachmentAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAttachmentAccepter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpcAttachmentAccepterState, opts ...pulumi.ResourceOpt) (*VpcAttachmentAccepter, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["dnsSupport"] = state.DnsSupport
		inputs["ipv6Support"] = state.Ipv6Support
		inputs["subnetIds"] = state.SubnetIds
		inputs["tags"] = state.Tags
		inputs["transitGatewayAttachmentId"] = state.TransitGatewayAttachmentId
		inputs["transitGatewayDefaultRouteTableAssociation"] = state.TransitGatewayDefaultRouteTableAssociation
		inputs["transitGatewayDefaultRouteTablePropagation"] = state.TransitGatewayDefaultRouteTablePropagation
		inputs["transitGatewayId"] = state.TransitGatewayId
		inputs["vpcId"] = state.VpcId
		inputs["vpcOwnerId"] = state.VpcOwnerId
	}
	var resource VpcAttachmentAccepter
	err := ctx.ReadResource("aws:ec2transitgateway/vpcAttachmentAccepter:VpcAttachmentAccepter", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *VpcAttachmentAccepter) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *VpcAttachmentAccepter) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering VpcAttachmentAccepter resources.
type VpcAttachmentAccepterState struct {
	// Whether DNS support is enabled. Valid values: `disable`, `enable`.
	DnsSupport pulumi.StringInput `pulumi:"dnsSupport"`
	// Whether IPv6 support is enabled. Valid values: `disable`, `enable`.
	Ipv6Support pulumi.StringInput `pulumi:"ipv6Support"`
	// Identifiers of EC2 Subnets.
	SubnetIds pulumi.ArrayInput `pulumi:"subnetIds"`
	// Key-value tags for the EC2 Transit Gateway VPC Attachment.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The ID of the EC2 Transit Gateway Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringInput `pulumi:"transitGatewayAttachmentId"`
	// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumi.BoolInput `pulumi:"transitGatewayDefaultRouteTableAssociation"`
	// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumi.BoolInput `pulumi:"transitGatewayDefaultRouteTablePropagation"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
	// Identifier of EC2 VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Identifier of the AWS account that owns the EC2 VPC.
	VpcOwnerId pulumi.StringInput `pulumi:"vpcOwnerId"`
}

// The set of arguments for constructing a VpcAttachmentAccepter resource.
type VpcAttachmentAccepterArgs struct {
	// Key-value tags for the EC2 Transit Gateway VPC Attachment.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The ID of the EC2 Transit Gateway Attachment to manage.
	TransitGatewayAttachmentId pulumi.StringInput `pulumi:"transitGatewayAttachmentId"`
	// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumi.BoolInput `pulumi:"transitGatewayDefaultRouteTableAssociation"`
	// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumi.BoolInput `pulumi:"transitGatewayDefaultRouteTablePropagation"`
}
