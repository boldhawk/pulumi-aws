// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to accept a pending GuardDuty invite on creation, ensure the detector has the correct master account on read, and disassociate with the master account upon removal.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/guardduty_invite_accepter.html.markdown.
type InviteAccepter struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The detector ID of the member GuardDuty account.
	DetectorId pulumi.StringOutput `pulumi:"detectorId"`

	// AWS account ID for master account.
	MasterAccountId pulumi.StringOutput `pulumi:"masterAccountId"`
}

// NewInviteAccepter registers a new resource with the given unique name, arguments, and options.
func NewInviteAccepter(ctx *pulumi.Context,
	name string, args *InviteAccepterArgs, opts ...pulumi.ResourceOpt) (*InviteAccepter, error) {
	if args == nil || args.DetectorId == nil {
		return nil, errors.New("missing required argument 'DetectorId'")
	}
	if args == nil || args.MasterAccountId == nil {
		return nil, errors.New("missing required argument 'MasterAccountId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["detectorId"] = args.DetectorId
		inputs["masterAccountId"] = args.MasterAccountId
	}
	var resource InviteAccepter
	err := ctx.RegisterResource("aws:guardduty/inviteAccepter:InviteAccepter", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInviteAccepter gets an existing InviteAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInviteAccepter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InviteAccepterState, opts ...pulumi.ResourceOpt) (*InviteAccepter, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["detectorId"] = state.DetectorId
		inputs["masterAccountId"] = state.MasterAccountId
	}
	var resource InviteAccepter
	err := ctx.ReadResource("aws:guardduty/inviteAccepter:InviteAccepter", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *InviteAccepter) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *InviteAccepter) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering InviteAccepter resources.
type InviteAccepterState struct {
	// The detector ID of the member GuardDuty account.
	DetectorId pulumi.StringInput `pulumi:"detectorId"`
	// AWS account ID for master account.
	MasterAccountId pulumi.StringInput `pulumi:"masterAccountId"`
}

// The set of arguments for constructing a InviteAccepter resource.
type InviteAccepterArgs struct {
	// The detector ID of the member GuardDuty account.
	DetectorId pulumi.StringInput `pulumi:"detectorId"`
	// AWS account ID for master account.
	MasterAccountId pulumi.StringInput `pulumi:"masterAccountId"`
}
