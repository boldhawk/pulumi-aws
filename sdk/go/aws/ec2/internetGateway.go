// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create a VPC Internet Gateway.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/internet_gateway.html.markdown.
type InternetGateway struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ID of the AWS account that owns the internet gateway.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// The VPC ID to create in.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewInternetGateway registers a new resource with the given unique name, arguments, and options.
func NewInternetGateway(ctx *pulumi.Context,
	name string, args *InternetGatewayArgs, opts ...pulumi.ResourceOpt) (*InternetGateway, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
	}
	var resource InternetGateway
	err := ctx.RegisterResource("aws:ec2/internetGateway:InternetGateway", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetGateway gets an existing InternetGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InternetGatewayState, opts ...pulumi.ResourceOpt) (*InternetGateway, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["ownerId"] = state.OwnerId
		inputs["tags"] = state.Tags
		inputs["vpcId"] = state.VpcId
	}
	var resource InternetGateway
	err := ctx.ReadResource("aws:ec2/internetGateway:InternetGateway", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *InternetGateway) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *InternetGateway) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering InternetGateway resources.
type InternetGatewayState struct {
	// The ID of the AWS account that owns the internet gateway.
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The VPC ID to create in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

// The set of arguments for constructing a InternetGateway resource.
type InternetGatewayArgs struct {
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The VPC ID to create in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}
