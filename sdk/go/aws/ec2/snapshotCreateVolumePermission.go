// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Adds permission to create volumes off of a given EBS Snapshot.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/snapshot_create_volume_permission.html.markdown.
type SnapshotCreateVolumePermission struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// An AWS Account ID to add create volume permissions
	AccountId pulumi.StringOutput `pulumi:"accountId"`

	// A snapshot ID
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
}

// NewSnapshotCreateVolumePermission registers a new resource with the given unique name, arguments, and options.
func NewSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, args *SnapshotCreateVolumePermissionArgs, opts ...pulumi.ResourceOpt) (*SnapshotCreateVolumePermission, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.SnapshotId == nil {
		return nil, errors.New("missing required argument 'SnapshotId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["accountId"] = args.AccountId
		inputs["snapshotId"] = args.SnapshotId
	}
	var resource SnapshotCreateVolumePermission
	err := ctx.RegisterResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotCreateVolumePermission gets an existing SnapshotCreateVolumePermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SnapshotCreateVolumePermissionState, opts ...pulumi.ResourceOpt) (*SnapshotCreateVolumePermission, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["snapshotId"] = state.SnapshotId
	}
	var resource SnapshotCreateVolumePermission
	err := ctx.ReadResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *SnapshotCreateVolumePermission) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *SnapshotCreateVolumePermission) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering SnapshotCreateVolumePermission resources.
type SnapshotCreateVolumePermissionState struct {
	// An AWS Account ID to add create volume permissions
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A snapshot ID
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}

// The set of arguments for constructing a SnapshotCreateVolumePermission resource.
type SnapshotCreateVolumePermissionArgs struct {
	// An AWS Account ID to add create volume permissions
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A snapshot ID
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
}
