// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a VPC Endpoint Route Table Association
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_endpoint_route_table_association.html.markdown.
type VpcEndpointRouteTableAssociation struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`

	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumi.StringOutput `pulumi:"vpcEndpointId"`
}

// NewVpcEndpointRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointRouteTableAssociation(ctx *pulumi.Context,
	name string, args *VpcEndpointRouteTableAssociationArgs, opts ...pulumi.ResourceOpt) (*VpcEndpointRouteTableAssociation, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	if args == nil || args.VpcEndpointId == nil {
		return nil, errors.New("missing required argument 'VpcEndpointId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["routeTableId"] = args.RouteTableId
		inputs["vpcEndpointId"] = args.VpcEndpointId
	}
	var resource VpcEndpointRouteTableAssociation
	err := ctx.RegisterResource("aws:ec2/vpcEndpointRouteTableAssociation:VpcEndpointRouteTableAssociation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointRouteTableAssociation gets an existing VpcEndpointRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpcEndpointRouteTableAssociationState, opts ...pulumi.ResourceOpt) (*VpcEndpointRouteTableAssociation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["routeTableId"] = state.RouteTableId
		inputs["vpcEndpointId"] = state.VpcEndpointId
	}
	var resource VpcEndpointRouteTableAssociation
	err := ctx.ReadResource("aws:ec2/vpcEndpointRouteTableAssociation:VpcEndpointRouteTableAssociation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *VpcEndpointRouteTableAssociation) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *VpcEndpointRouteTableAssociation) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering VpcEndpointRouteTableAssociation resources.
type VpcEndpointRouteTableAssociationState struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a VpcEndpointRouteTableAssociation resource.
type VpcEndpointRouteTableAssociationArgs struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
}
