// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource for managing the main routing table of a VPC.
// 
// ## Notes
// 
// On VPC creation, the AWS API always creates an initial Main Route Table. This
// resource records the ID of that Route Table under `originalRouteTableId`.
// The "Delete" action for a `mainRouteTableAssociation` consists of resetting
// this original table as the Main Route Table for the VPC. You'll see this
// additional Route Table in the AWS console; it must remain intact in order for
// the `mainRouteTableAssociation` delete to work properly.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/main_route_table_association.html.markdown.
type MainRouteTableAssociation struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Used internally, see __Notes__ below
	OriginalRouteTableId pulumi.StringOutput `pulumi:"originalRouteTableId"`

	// The ID of the Route Table to set as the new
	// main route table for the target VPC
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`

	// The ID of the VPC whose main route table should be set
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewMainRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewMainRouteTableAssociation(ctx *pulumi.Context,
	name string, args *MainRouteTableAssociationArgs, opts ...pulumi.ResourceOpt) (*MainRouteTableAssociation, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["routeTableId"] = args.RouteTableId
		inputs["vpcId"] = args.VpcId
	}
	var resource MainRouteTableAssociation
	err := ctx.RegisterResource("aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMainRouteTableAssociation gets an existing MainRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMainRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MainRouteTableAssociationState, opts ...pulumi.ResourceOpt) (*MainRouteTableAssociation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["originalRouteTableId"] = state.OriginalRouteTableId
		inputs["routeTableId"] = state.RouteTableId
		inputs["vpcId"] = state.VpcId
	}
	var resource MainRouteTableAssociation
	err := ctx.ReadResource("aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *MainRouteTableAssociation) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *MainRouteTableAssociation) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering MainRouteTableAssociation resources.
type MainRouteTableAssociationState struct {
	// Used internally, see __Notes__ below
	OriginalRouteTableId pulumi.StringInput `pulumi:"originalRouteTableId"`
	// The ID of the Route Table to set as the new
	// main route table for the target VPC
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The ID of the VPC whose main route table should be set
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

// The set of arguments for constructing a MainRouteTableAssociation resource.
type MainRouteTableAssociationArgs struct {
	// The ID of the Route Table to set as the new
	// main route table for the target VPC
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The ID of the VPC whose main route table should be set
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}
