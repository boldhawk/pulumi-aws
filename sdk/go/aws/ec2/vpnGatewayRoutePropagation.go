// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Requests automatic route propagation between a VPN gateway and a route table.
// 
// > **Note:** This resource should not be used with a route table that has
// the `propagatingVgws` argument set. If that argument is set, any route
// propagation not explicitly listed in its value will be removed.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpn_gateway_route_propagation.html.markdown.
type VpnGatewayRoutePropagation struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The id of the `ec2.RouteTable` to propagate routes into.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`

	// The id of the `ec2.VpnGateway` to propagate routes from.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
}

// NewVpnGatewayRoutePropagation registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayRoutePropagation(ctx *pulumi.Context,
	name string, args *VpnGatewayRoutePropagationArgs, opts ...pulumi.ResourceOpt) (*VpnGatewayRoutePropagation, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	if args == nil || args.VpnGatewayId == nil {
		return nil, errors.New("missing required argument 'VpnGatewayId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["routeTableId"] = args.RouteTableId
		inputs["vpnGatewayId"] = args.VpnGatewayId
	}
	var resource VpnGatewayRoutePropagation
	err := ctx.RegisterResource("aws:ec2/vpnGatewayRoutePropagation:VpnGatewayRoutePropagation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGatewayRoutePropagation gets an existing VpnGatewayRoutePropagation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayRoutePropagation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpnGatewayRoutePropagationState, opts ...pulumi.ResourceOpt) (*VpnGatewayRoutePropagation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["routeTableId"] = state.RouteTableId
		inputs["vpnGatewayId"] = state.VpnGatewayId
	}
	var resource VpnGatewayRoutePropagation
	err := ctx.ReadResource("aws:ec2/vpnGatewayRoutePropagation:VpnGatewayRoutePropagation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *VpnGatewayRoutePropagation) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *VpnGatewayRoutePropagation) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering VpnGatewayRoutePropagation resources.
type VpnGatewayRoutePropagationState struct {
	// The id of the `ec2.RouteTable` to propagate routes into.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The id of the `ec2.VpnGateway` to propagate routes from.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

// The set of arguments for constructing a VpnGatewayRoutePropagation resource.
type VpnGatewayRoutePropagationArgs struct {
	// The id of the `ec2.RouteTable` to propagate routes into.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The id of the `ec2.VpnGateway` to propagate routes from.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}
