// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a VPC DHCP Options Association resource.
// 
// ## Remarks
// 
// * You can only associate one DHCP Options Set to a given VPC ID.
// * Removing the DHCP Options Association automatically sets AWS's `default` DHCP Options Set to the VPC.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/vpc_dhcp_options_association.html.markdown.
type VpcDhcpOptionsAssociation struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringOutput `pulumi:"dhcpOptionsId"`

	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcDhcpOptionsAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, args *VpcDhcpOptionsAssociationArgs, opts ...pulumi.ResourceOpt) (*VpcDhcpOptionsAssociation, error) {
	if args == nil || args.DhcpOptionsId == nil {
		return nil, errors.New("missing required argument 'DhcpOptionsId'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["dhcpOptionsId"] = args.DhcpOptionsId
		inputs["vpcId"] = args.VpcId
	}
	var resource VpcDhcpOptionsAssociation
	err := ctx.RegisterResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcDhcpOptionsAssociation gets an existing VpcDhcpOptionsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpcDhcpOptionsAssociationState, opts ...pulumi.ResourceOpt) (*VpcDhcpOptionsAssociation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["dhcpOptionsId"] = state.DhcpOptionsId
		inputs["vpcId"] = state.VpcId
	}
	var resource VpcDhcpOptionsAssociation
	err := ctx.ReadResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *VpcDhcpOptionsAssociation) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *VpcDhcpOptionsAssociation) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering VpcDhcpOptionsAssociation resources.
type VpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringInput `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcDhcpOptionsAssociation resource.
type VpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumi.StringInput `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}
