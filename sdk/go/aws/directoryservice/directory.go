// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Simple or Managed Microsoft directory in AWS Directory Service.
// 
// > **Note:** All arguments including the password and customer username will be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/directory_service_directory.html.markdown.
type Directory struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The access URL for the directory, such as `http://alias.awsapps.com`.
	AccessUrl pulumi.StringOutput `pulumi:"accessUrl"`

	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumi.StringOutput `pulumi:"alias"`

	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumi.AnyOutput `pulumi:"connectSettings"`

	// A textual description for the directory.
	Description pulumi.StringOutput `pulumi:"description"`

	// A list of IP addresses of the DNS servers for the directory or connector.
	DnsIpAddresses pulumi.ArrayOutput `pulumi:"dnsIpAddresses"`

	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise` (applies to MicrosoftAD type only).
	Edition pulumi.StringOutput `pulumi:"edition"`

	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumi.BoolOutput `pulumi:"enableSso"`

	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumi.StringOutput `pulumi:"name"`

	// The password for the directory administrator or connector user.
	Password pulumi.StringOutput `pulumi:"password"`

	// The ID of the security group created by the directory.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`

	// The short name of the directory, such as `CORP`.
	ShortName pulumi.StringOutput `pulumi:"shortName"`

	// The size of the directory (`Small` or `Large` are accepted values).
	Size pulumi.StringOutput `pulumi:"size"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumi.StringOutput `pulumi:"type"`

	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumi.AnyOutput `pulumi:"vpcSettings"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOpt) (*Directory, error) {
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["alias"] = args.Alias
		inputs["connectSettings"] = args.ConnectSettings
		inputs["description"] = args.Description
		inputs["edition"] = args.Edition
		inputs["enableSso"] = args.EnableSso
		inputs["name"] = args.Name
		inputs["password"] = args.Password
		inputs["shortName"] = args.ShortName
		inputs["size"] = args.Size
		inputs["tags"] = args.Tags
		inputs["type"] = args.Type
		inputs["vpcSettings"] = args.VpcSettings
	}
	var resource Directory
	err := ctx.RegisterResource("aws:directoryservice/directory:Directory", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DirectoryState, opts ...pulumi.ResourceOpt) (*Directory, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accessUrl"] = state.AccessUrl
		inputs["alias"] = state.Alias
		inputs["connectSettings"] = state.ConnectSettings
		inputs["description"] = state.Description
		inputs["dnsIpAddresses"] = state.DnsIpAddresses
		inputs["edition"] = state.Edition
		inputs["enableSso"] = state.EnableSso
		inputs["name"] = state.Name
		inputs["password"] = state.Password
		inputs["securityGroupId"] = state.SecurityGroupId
		inputs["shortName"] = state.ShortName
		inputs["size"] = state.Size
		inputs["tags"] = state.Tags
		inputs["type"] = state.Type
		inputs["vpcSettings"] = state.VpcSettings
	}
	var resource Directory
	err := ctx.ReadResource("aws:directoryservice/directory:Directory", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Directory) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Directory) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Directory resources.
type DirectoryState struct {
	// The access URL for the directory, such as `http://alias.awsapps.com`.
	AccessUrl pulumi.StringInput `pulumi:"accessUrl"`
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumi.StringInput `pulumi:"alias"`
	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumi.AnyInput `pulumi:"connectSettings"`
	// A textual description for the directory.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of IP addresses of the DNS servers for the directory or connector.
	DnsIpAddresses pulumi.ArrayInput `pulumi:"dnsIpAddresses"`
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise` (applies to MicrosoftAD type only).
	Edition pulumi.StringInput `pulumi:"edition"`
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumi.BoolInput `pulumi:"enableSso"`
	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the directory administrator or connector user.
	Password pulumi.StringInput `pulumi:"password"`
	// The ID of the security group created by the directory.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The short name of the directory, such as `CORP`.
	ShortName pulumi.StringInput `pulumi:"shortName"`
	// The size of the directory (`Small` or `Large` are accepted values).
	Size pulumi.StringInput `pulumi:"size"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumi.StringInput `pulumi:"type"`
	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumi.AnyInput `pulumi:"vpcSettings"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumi.StringInput `pulumi:"alias"`
	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumi.AnyInput `pulumi:"connectSettings"`
	// A textual description for the directory.
	Description pulumi.StringInput `pulumi:"description"`
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise` (applies to MicrosoftAD type only).
	Edition pulumi.StringInput `pulumi:"edition"`
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumi.BoolInput `pulumi:"enableSso"`
	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the directory administrator or connector user.
	Password pulumi.StringInput `pulumi:"password"`
	// The short name of the directory, such as `CORP`.
	ShortName pulumi.StringInput `pulumi:"shortName"`
	// The size of the directory (`Small` or `Large` are accepted values).
	Size pulumi.StringInput `pulumi:"size"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumi.StringInput `pulumi:"type"`
	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumi.AnyInput `pulumi:"vpcSettings"`
}
