// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AutoScaling Attachment resource.
// 
// > **NOTE on AutoScaling Groups and ASG Attachments:** This provider currently provides
// both a standalone ASG Attachment resource (describing an ASG attached to
// an ELB), and an AutoScaling Group resource with
// `loadBalancers` defined in-line. At this time you cannot use an ASG with in-line
// load balancers in conjunction with an ASG Attachment resource. Doing so will cause a
// conflict and will overwrite attachments.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/autoscaling_attachment.html.markdown.
type Attachment struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN of an ALB Target Group.
	AlbTargetGroupArn pulumi.StringOutput `pulumi:"albTargetGroupArn"`

	// Name of ASG to associate with the ELB.
	AutoscalingGroupName pulumi.StringOutput `pulumi:"autoscalingGroupName"`

	// The name of the ELB.
	Elb pulumi.StringOutput `pulumi:"elb"`
}

// NewAttachment registers a new resource with the given unique name, arguments, and options.
func NewAttachment(ctx *pulumi.Context,
	name string, args *AttachmentArgs, opts ...pulumi.ResourceOpt) (*Attachment, error) {
	if args == nil || args.AutoscalingGroupName == nil {
		return nil, errors.New("missing required argument 'AutoscalingGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["albTargetGroupArn"] = args.AlbTargetGroupArn
		inputs["autoscalingGroupName"] = args.AutoscalingGroupName
		inputs["elb"] = args.Elb
	}
	var resource Attachment
	err := ctx.RegisterResource("aws:autoscaling/attachment:Attachment", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttachment gets an existing Attachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AttachmentState, opts ...pulumi.ResourceOpt) (*Attachment, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["albTargetGroupArn"] = state.AlbTargetGroupArn
		inputs["autoscalingGroupName"] = state.AutoscalingGroupName
		inputs["elb"] = state.Elb
	}
	var resource Attachment
	err := ctx.ReadResource("aws:autoscaling/attachment:Attachment", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Attachment) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Attachment) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Attachment resources.
type AttachmentState struct {
	// The ARN of an ALB Target Group.
	AlbTargetGroupArn pulumi.StringInput `pulumi:"albTargetGroupArn"`
	// Name of ASG to associate with the ELB.
	AutoscalingGroupName pulumi.StringInput `pulumi:"autoscalingGroupName"`
	// The name of the ELB.
	Elb pulumi.StringInput `pulumi:"elb"`
}

// The set of arguments for constructing a Attachment resource.
type AttachmentArgs struct {
	// The ARN of an ALB Target Group.
	AlbTargetGroupArn pulumi.StringInput `pulumi:"albTargetGroupArn"`
	// Name of ASG to associate with the ELB.
	AutoscalingGroupName pulumi.StringInput `pulumi:"autoscalingGroupName"`
	// The name of the ELB.
	Elb pulumi.StringInput `pulumi:"elb"`
}
