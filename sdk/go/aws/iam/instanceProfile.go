// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an IAM instance profile.
// 
// > **NOTE:** Either `role` or `roles` (**deprecated**) must be specified.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/iam_instance_profile.html.markdown.
type InstanceProfile struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN assigned by AWS to the instance profile.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The creation timestamp of the instance profile.
	CreateDate pulumi.StringOutput `pulumi:"createDate"`

	// The profile's name. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringOutput `pulumi:"name"`

	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`

	// Path in which to create the profile.
	Path pulumi.StringOutput `pulumi:"path"`

	// The role name to include in the profile.
	Role pulumi.StringOutput `pulumi:"role"`

	// 
	// A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
	Roles pulumi.ArrayOutput `pulumi:"roles"`

	// The [unique ID][1] assigned by AWS.
	UniqueId pulumi.StringOutput `pulumi:"uniqueId"`
}

// NewInstanceProfile registers a new resource with the given unique name, arguments, and options.
func NewInstanceProfile(ctx *pulumi.Context,
	name string, args *InstanceProfileArgs, opts ...pulumi.ResourceOpt) (*InstanceProfile, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["path"] = args.Path
		inputs["role"] = args.Role
		inputs["roles"] = args.Roles
	}
	var resource InstanceProfile
	err := ctx.RegisterResource("aws:iam/instanceProfile:InstanceProfile", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceProfile gets an existing InstanceProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceProfile(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceProfileState, opts ...pulumi.ResourceOpt) (*InstanceProfile, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["createDate"] = state.CreateDate
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["path"] = state.Path
		inputs["role"] = state.Role
		inputs["roles"] = state.Roles
		inputs["uniqueId"] = state.UniqueId
	}
	var resource InstanceProfile
	err := ctx.ReadResource("aws:iam/instanceProfile:InstanceProfile", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *InstanceProfile) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *InstanceProfile) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering InstanceProfile resources.
type InstanceProfileState struct {
	// The ARN assigned by AWS to the instance profile.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The creation timestamp of the instance profile.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// The profile's name. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// Path in which to create the profile.
	Path pulumi.StringInput `pulumi:"path"`
	// The role name to include in the profile.
	Role pulumi.StringInput `pulumi:"role"`
	// 
	// A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
	Roles pulumi.ArrayInput `pulumi:"roles"`
	// The [unique ID][1] assigned by AWS.
	UniqueId pulumi.StringInput `pulumi:"uniqueId"`
}

// The set of arguments for constructing a InstanceProfile resource.
type InstanceProfileArgs struct {
	// The profile's name. If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// Path in which to create the profile.
	Path pulumi.StringInput `pulumi:"path"`
	// The role name to include in the profile.
	Role pulumi.StringInput `pulumi:"role"`
	// 
	// A list of role names to include in the profile.  The current default is 1.  If you see an error message similar to `Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1`, then you must contact AWS support and ask for a limit increase.
	Roles pulumi.ArrayInput `pulumi:"roles"`
}
