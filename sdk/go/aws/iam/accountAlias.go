// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > **Note:** There is only a single account alias per AWS account.
// 
// Manages the account alias for the AWS Account.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/iam_account_alias.html.markdown.
type AccountAlias struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The account alias
	AccountAlias pulumi.StringOutput `pulumi:"accountAlias"`
}

// NewAccountAlias registers a new resource with the given unique name, arguments, and options.
func NewAccountAlias(ctx *pulumi.Context,
	name string, args *AccountAliasArgs, opts ...pulumi.ResourceOpt) (*AccountAlias, error) {
	if args == nil || args.AccountAlias == nil {
		return nil, errors.New("missing required argument 'AccountAlias'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["accountAlias"] = args.AccountAlias
	}
	var resource AccountAlias
	err := ctx.RegisterResource("aws:iam/accountAlias:AccountAlias", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAlias gets an existing AccountAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAlias(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AccountAliasState, opts ...pulumi.ResourceOpt) (*AccountAlias, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["accountAlias"] = state.AccountAlias
	}
	var resource AccountAlias
	err := ctx.ReadResource("aws:iam/accountAlias:AccountAlias", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *AccountAlias) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *AccountAlias) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering AccountAlias resources.
type AccountAliasState struct {
	// The account alias
	AccountAlias pulumi.StringInput `pulumi:"accountAlias"`
}

// The set of arguments for constructing a AccountAlias resource.
type AccountAliasArgs struct {
	// The account alias
	AccountAlias pulumi.StringInput `pulumi:"accountAlias"`
}
