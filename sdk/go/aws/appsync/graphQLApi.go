// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AppSync GraphQL API.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/appsync_graphql_api.html.markdown.
type GraphQLApi struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// One or more additional authentication providers for the GraphqlApi. Defined below.
	AdditionalAuthenticationProviders pulumi.ArrayOutput `pulumi:"additionalAuthenticationProviders"`

	// The ARN
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType pulumi.StringOutput `pulumi:"authenticationType"`

	// Nested argument containing logging configuration. Defined below.
	LogConfig pulumi.AnyOutput `pulumi:"logConfig"`

	// A user-supplied name for the GraphqlApi.
	Name pulumi.StringOutput `pulumi:"name"`

	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig pulumi.AnyOutput `pulumi:"openidConnectConfig"`

	// The schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
	Schema pulumi.StringOutput `pulumi:"schema"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// Map of URIs associated with the API. e.g. `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
	Uris pulumi.MapOutput `pulumi:"uris"`

	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig pulumi.AnyOutput `pulumi:"userPoolConfig"`
}

// NewGraphQLApi registers a new resource with the given unique name, arguments, and options.
func NewGraphQLApi(ctx *pulumi.Context,
	name string, args *GraphQLApiArgs, opts ...pulumi.ResourceOpt) (*GraphQLApi, error) {
	if args == nil || args.AuthenticationType == nil {
		return nil, errors.New("missing required argument 'AuthenticationType'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["additionalAuthenticationProviders"] = args.AdditionalAuthenticationProviders
		inputs["authenticationType"] = args.AuthenticationType
		inputs["logConfig"] = args.LogConfig
		inputs["name"] = args.Name
		inputs["openidConnectConfig"] = args.OpenidConnectConfig
		inputs["schema"] = args.Schema
		inputs["tags"] = args.Tags
		inputs["userPoolConfig"] = args.UserPoolConfig
	}
	var resource GraphQLApi
	err := ctx.RegisterResource("aws:appsync/graphQLApi:GraphQLApi", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGraphQLApi gets an existing GraphQLApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGraphQLApi(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GraphQLApiState, opts ...pulumi.ResourceOpt) (*GraphQLApi, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["additionalAuthenticationProviders"] = state.AdditionalAuthenticationProviders
		inputs["arn"] = state.Arn
		inputs["authenticationType"] = state.AuthenticationType
		inputs["logConfig"] = state.LogConfig
		inputs["name"] = state.Name
		inputs["openidConnectConfig"] = state.OpenidConnectConfig
		inputs["schema"] = state.Schema
		inputs["tags"] = state.Tags
		inputs["uris"] = state.Uris
		inputs["userPoolConfig"] = state.UserPoolConfig
	}
	var resource GraphQLApi
	err := ctx.ReadResource("aws:appsync/graphQLApi:GraphQLApi", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *GraphQLApi) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *GraphQLApi) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering GraphQLApi resources.
type GraphQLApiState struct {
	// One or more additional authentication providers for the GraphqlApi. Defined below.
	AdditionalAuthenticationProviders pulumi.ArrayInput `pulumi:"additionalAuthenticationProviders"`
	// The ARN
	Arn pulumi.StringInput `pulumi:"arn"`
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing logging configuration. Defined below.
	LogConfig pulumi.AnyInput `pulumi:"logConfig"`
	// A user-supplied name for the GraphqlApi.
	Name pulumi.StringInput `pulumi:"name"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig pulumi.AnyInput `pulumi:"openidConnectConfig"`
	// The schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
	Schema pulumi.StringInput `pulumi:"schema"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Map of URIs associated with the API. e.g. `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
	Uris pulumi.MapInput `pulumi:"uris"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig pulumi.AnyInput `pulumi:"userPoolConfig"`
}

// The set of arguments for constructing a GraphQLApi resource.
type GraphQLApiArgs struct {
	// One or more additional authentication providers for the GraphqlApi. Defined below.
	AdditionalAuthenticationProviders pulumi.ArrayInput `pulumi:"additionalAuthenticationProviders"`
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing logging configuration. Defined below.
	LogConfig pulumi.AnyInput `pulumi:"logConfig"`
	// A user-supplied name for the GraphqlApi.
	Name pulumi.StringInput `pulumi:"name"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig pulumi.AnyInput `pulumi:"openidConnectConfig"`
	// The schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
	Schema pulumi.StringInput `pulumi:"schema"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig pulumi.AnyInput `pulumi:"userPoolConfig"`
}
