// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an OpsWorks instance resource.
// 
// ## Block devices
// 
// Each of the `*_block_device` attributes controls a portion of the AWS
// Instance's "Block Device Mapping". It's a good idea to familiarize yourself with [AWS's Block Device
// Mapping docs](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
// to understand the implications of using these attributes.
// 
// The `rootBlockDevice` mapping supports the following:
// 
// * `volumeType` - (Optional) The type of volume. Can be `"standard"`, `"gp2"`,
//   or `"io1"`. (Default: `"standard"`).
// * `volumeSize` - (Optional) The size of the volume in gigabytes.
// * `iops` - (Optional) The amount of provisioned
//   [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
//   This must be set with a `volumeType` of `"io1"`.
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed
//   on instance termination (Default: `true`).
// 
// Modifying any of the `rootBlockDevice` settings requires resource
// replacement.
// 
// Each `ebsBlockDevice` supports the following:
// 
// * `deviceName` - The name of the device to mount.
// * `snapshotId` - (Optional) The Snapshot ID to mount.
// * `volumeType` - (Optional) The type of volume. Can be `"standard"`, `"gp2"`,
//   or `"io1"`. (Default: `"standard"`).
// * `volumeSize` - (Optional) The size of the volume in gigabytes.
// * `iops` - (Optional) The amount of provisioned
//   [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
//   This must be set with a `volumeType` of `"io1"`.
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed
//   on instance termination (Default: `true`).
// 
// Modifying any `ebsBlockDevice` currently requires resource replacement.
// 
// Each `ephemeralBlockDevice` supports the following:
// 
// * `deviceName` - The name of the block device to mount on the instance.
// * `virtualName` - The [Instance Store Device
//   Name](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
//   (e.g. `"ephemeral0"`)
// 
// Each AWS Instance type has a different set of Instance Store block devices
// available for attachment. AWS [publishes a
// list](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes)
// of which ephemeral devices are available on each type. The devices are always
// identified by the `virtualName` in the format `"ephemeral{0..N}"`.
// 
// > **NOTE:** Currently, changes to `*_block_device` configuration of _existing_
// resources cannot be automatically detected by this provider. After making updates
// to block device configuration, resource recreation can be manually triggered by
// using the [`taint` command](https://www.terraform.io/docs/commands/taint.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/opsworks_instance.html.markdown.
type Instance struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The AWS OpsWorks agent to install.  Defaults to `"INHERIT"`.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`

	// The AMI to use for the instance.  If an AMI is specified, `os` must be `"Custom"`.
	AmiId pulumi.StringOutput `pulumi:"amiId"`

	// Machine architecture for created instances.  Can be either `"x8664"` (the default) or `"i386"`
	Architecture pulumi.StringOutput `pulumi:"architecture"`

	// Creates load-based or time-based instances.  If set, can be either: `"load"` or `"timer"`.
	AutoScalingType pulumi.StringOutput `pulumi:"autoScalingType"`

	// Name of the availability zone where instances will be created
	// by default.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`

	DeleteEbs pulumi.BoolOutput `pulumi:"deleteEbs"`

	DeleteEip pulumi.BoolOutput `pulumi:"deleteEip"`

	// Additional EBS block devices to attach to the
	// instance.  See Block Devices below for details.
	EbsBlockDevices pulumi.ArrayOutput `pulumi:"ebsBlockDevices"`

	// If true, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolOutput `pulumi:"ebsOptimized"`

	// EC2 instance ID
	Ec2InstanceId pulumi.StringOutput `pulumi:"ec2InstanceId"`

	EcsClusterArn pulumi.StringOutput `pulumi:"ecsClusterArn"`

	ElasticIp pulumi.StringOutput `pulumi:"elasticIp"`

	// Customize Ephemeral (also known as
	// "Instance Store") volumes on the instance. See Block Devices below for details.
	EphemeralBlockDevices pulumi.ArrayOutput `pulumi:"ephemeralBlockDevices"`

	// The instance's host name.
	Hostname pulumi.StringOutput `pulumi:"hostname"`

	InfrastructureClass pulumi.StringOutput `pulumi:"infrastructureClass"`

	// Controls where to install OS and package updates when the instance boots.  Defaults to `true`.
	InstallUpdatesOnBoot pulumi.BoolOutput `pulumi:"installUpdatesOnBoot"`

	InstanceProfileArn pulumi.StringOutput `pulumi:"instanceProfileArn"`

	// The type of instance to start
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`

	LastServiceErrorId pulumi.StringOutput `pulumi:"lastServiceErrorId"`

	// The ids of the layers the instance will belong to.
	LayerIds pulumi.ArrayOutput `pulumi:"layerIds"`

	// Name of operating system that will be installed.
	Os pulumi.StringOutput `pulumi:"os"`

	Platform pulumi.StringOutput `pulumi:"platform"`

	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns pulumi.StringOutput `pulumi:"privateDns"`

	// The private IP address assigned to the instance
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`

	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns pulumi.StringOutput `pulumi:"publicDns"`

	// The public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`

	RegisteredBy pulumi.StringOutput `pulumi:"registeredBy"`

	ReportedAgentVersion pulumi.StringOutput `pulumi:"reportedAgentVersion"`

	ReportedOsFamily pulumi.StringOutput `pulumi:"reportedOsFamily"`

	ReportedOsName pulumi.StringOutput `pulumi:"reportedOsName"`

	ReportedOsVersion pulumi.StringOutput `pulumi:"reportedOsVersion"`

	// Customize details about the root block
	// device of the instance. See Block Devices below for details.
	RootBlockDevices pulumi.ArrayOutput `pulumi:"rootBlockDevices"`

	// Name of the type of root device instances will have by default.  Can be either `"ebs"` or `"instance-store"`
	RootDeviceType pulumi.StringOutput `pulumi:"rootDeviceType"`

	RootDeviceVolumeId pulumi.StringOutput `pulumi:"rootDeviceVolumeId"`

	// The associated security groups.
	SecurityGroupIds pulumi.ArrayOutput `pulumi:"securityGroupIds"`

	SshHostDsaKeyFingerprint pulumi.StringOutput `pulumi:"sshHostDsaKeyFingerprint"`

	SshHostRsaKeyFingerprint pulumi.StringOutput `pulumi:"sshHostRsaKeyFingerprint"`

	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringOutput `pulumi:"sshKeyName"`

	// The id of the stack the instance will belong to.
	StackId pulumi.StringOutput `pulumi:"stackId"`

	// The desired state of the instance.  Can be either `"running"` or `"stopped"`.
	State pulumi.StringOutput `pulumi:"state"`

	Status pulumi.StringOutput `pulumi:"status"`

	// Subnet ID to attach to
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`

	// Instance tenancy to use. Can be one of `"default"`, `"dedicated"` or `"host"`
	Tenancy pulumi.StringOutput `pulumi:"tenancy"`

	// Keyword to choose what virtualization mode created instances
	// will use. Can be either `"paravirtual"` or `"hvm"`.
	VirtualizationType pulumi.StringOutput `pulumi:"virtualizationType"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOpt) (*Instance, error) {
	if args == nil || args.LayerIds == nil {
		return nil, errors.New("missing required argument 'LayerIds'")
	}
	if args == nil || args.StackId == nil {
		return nil, errors.New("missing required argument 'StackId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["agentVersion"] = args.AgentVersion
		inputs["amiId"] = args.AmiId
		inputs["architecture"] = args.Architecture
		inputs["autoScalingType"] = args.AutoScalingType
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["createdAt"] = args.CreatedAt
		inputs["deleteEbs"] = args.DeleteEbs
		inputs["deleteEip"] = args.DeleteEip
		inputs["ebsBlockDevices"] = args.EbsBlockDevices
		inputs["ebsOptimized"] = args.EbsOptimized
		inputs["ecsClusterArn"] = args.EcsClusterArn
		inputs["elasticIp"] = args.ElasticIp
		inputs["ephemeralBlockDevices"] = args.EphemeralBlockDevices
		inputs["hostname"] = args.Hostname
		inputs["infrastructureClass"] = args.InfrastructureClass
		inputs["installUpdatesOnBoot"] = args.InstallUpdatesOnBoot
		inputs["instanceProfileArn"] = args.InstanceProfileArn
		inputs["instanceType"] = args.InstanceType
		inputs["lastServiceErrorId"] = args.LastServiceErrorId
		inputs["layerIds"] = args.LayerIds
		inputs["os"] = args.Os
		inputs["platform"] = args.Platform
		inputs["privateDns"] = args.PrivateDns
		inputs["privateIp"] = args.PrivateIp
		inputs["publicDns"] = args.PublicDns
		inputs["publicIp"] = args.PublicIp
		inputs["registeredBy"] = args.RegisteredBy
		inputs["reportedAgentVersion"] = args.ReportedAgentVersion
		inputs["reportedOsFamily"] = args.ReportedOsFamily
		inputs["reportedOsName"] = args.ReportedOsName
		inputs["reportedOsVersion"] = args.ReportedOsVersion
		inputs["rootBlockDevices"] = args.RootBlockDevices
		inputs["rootDeviceType"] = args.RootDeviceType
		inputs["rootDeviceVolumeId"] = args.RootDeviceVolumeId
		inputs["securityGroupIds"] = args.SecurityGroupIds
		inputs["sshHostDsaKeyFingerprint"] = args.SshHostDsaKeyFingerprint
		inputs["sshHostRsaKeyFingerprint"] = args.SshHostRsaKeyFingerprint
		inputs["sshKeyName"] = args.SshKeyName
		inputs["stackId"] = args.StackId
		inputs["state"] = args.State
		inputs["status"] = args.Status
		inputs["subnetId"] = args.SubnetId
		inputs["tenancy"] = args.Tenancy
		inputs["virtualizationType"] = args.VirtualizationType
	}
	var resource Instance
	err := ctx.RegisterResource("aws:opsworks/instance:Instance", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceState, opts ...pulumi.ResourceOpt) (*Instance, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["agentVersion"] = state.AgentVersion
		inputs["amiId"] = state.AmiId
		inputs["architecture"] = state.Architecture
		inputs["autoScalingType"] = state.AutoScalingType
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["createdAt"] = state.CreatedAt
		inputs["deleteEbs"] = state.DeleteEbs
		inputs["deleteEip"] = state.DeleteEip
		inputs["ebsBlockDevices"] = state.EbsBlockDevices
		inputs["ebsOptimized"] = state.EbsOptimized
		inputs["ec2InstanceId"] = state.Ec2InstanceId
		inputs["ecsClusterArn"] = state.EcsClusterArn
		inputs["elasticIp"] = state.ElasticIp
		inputs["ephemeralBlockDevices"] = state.EphemeralBlockDevices
		inputs["hostname"] = state.Hostname
		inputs["infrastructureClass"] = state.InfrastructureClass
		inputs["installUpdatesOnBoot"] = state.InstallUpdatesOnBoot
		inputs["instanceProfileArn"] = state.InstanceProfileArn
		inputs["instanceType"] = state.InstanceType
		inputs["lastServiceErrorId"] = state.LastServiceErrorId
		inputs["layerIds"] = state.LayerIds
		inputs["os"] = state.Os
		inputs["platform"] = state.Platform
		inputs["privateDns"] = state.PrivateDns
		inputs["privateIp"] = state.PrivateIp
		inputs["publicDns"] = state.PublicDns
		inputs["publicIp"] = state.PublicIp
		inputs["registeredBy"] = state.RegisteredBy
		inputs["reportedAgentVersion"] = state.ReportedAgentVersion
		inputs["reportedOsFamily"] = state.ReportedOsFamily
		inputs["reportedOsName"] = state.ReportedOsName
		inputs["reportedOsVersion"] = state.ReportedOsVersion
		inputs["rootBlockDevices"] = state.RootBlockDevices
		inputs["rootDeviceType"] = state.RootDeviceType
		inputs["rootDeviceVolumeId"] = state.RootDeviceVolumeId
		inputs["securityGroupIds"] = state.SecurityGroupIds
		inputs["sshHostDsaKeyFingerprint"] = state.SshHostDsaKeyFingerprint
		inputs["sshHostRsaKeyFingerprint"] = state.SshHostRsaKeyFingerprint
		inputs["sshKeyName"] = state.SshKeyName
		inputs["stackId"] = state.StackId
		inputs["state"] = state.State
		inputs["status"] = state.Status
		inputs["subnetId"] = state.SubnetId
		inputs["tenancy"] = state.Tenancy
		inputs["virtualizationType"] = state.VirtualizationType
	}
	var resource Instance
	err := ctx.ReadResource("aws:opsworks/instance:Instance", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Instance) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Instance) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Instance resources.
type InstanceState struct {
	// The AWS OpsWorks agent to install.  Defaults to `"INHERIT"`.
	AgentVersion pulumi.StringInput `pulumi:"agentVersion"`
	// The AMI to use for the instance.  If an AMI is specified, `os` must be `"Custom"`.
	AmiId pulumi.StringInput `pulumi:"amiId"`
	// Machine architecture for created instances.  Can be either `"x8664"` (the default) or `"i386"`
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// Creates load-based or time-based instances.  If set, can be either: `"load"` or `"timer"`.
	AutoScalingType pulumi.StringInput `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created
	// by default.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	DeleteEbs pulumi.BoolInput `pulumi:"deleteEbs"`
	DeleteEip pulumi.BoolInput `pulumi:"deleteEip"`
	// Additional EBS block devices to attach to the
	// instance.  See Block Devices below for details.
	EbsBlockDevices pulumi.ArrayInput `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolInput `pulumi:"ebsOptimized"`
	// EC2 instance ID
	Ec2InstanceId pulumi.StringInput `pulumi:"ec2InstanceId"`
	EcsClusterArn pulumi.StringInput `pulumi:"ecsClusterArn"`
	ElasticIp pulumi.StringInput `pulumi:"elasticIp"`
	// Customize Ephemeral (also known as
	// "Instance Store") volumes on the instance. See Block Devices below for details.
	EphemeralBlockDevices pulumi.ArrayInput `pulumi:"ephemeralBlockDevices"`
	// The instance's host name.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	InfrastructureClass pulumi.StringInput `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Defaults to `true`.
	InstallUpdatesOnBoot pulumi.BoolInput `pulumi:"installUpdatesOnBoot"`
	InstanceProfileArn pulumi.StringInput `pulumi:"instanceProfileArn"`
	// The type of instance to start
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	LastServiceErrorId pulumi.StringInput `pulumi:"lastServiceErrorId"`
	// The ids of the layers the instance will belong to.
	LayerIds pulumi.ArrayInput `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os pulumi.StringInput `pulumi:"os"`
	Platform pulumi.StringInput `pulumi:"platform"`
	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns pulumi.StringInput `pulumi:"privateDns"`
	// The private IP address assigned to the instance
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns pulumi.StringInput `pulumi:"publicDns"`
	// The public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	RegisteredBy pulumi.StringInput `pulumi:"registeredBy"`
	ReportedAgentVersion pulumi.StringInput `pulumi:"reportedAgentVersion"`
	ReportedOsFamily pulumi.StringInput `pulumi:"reportedOsFamily"`
	ReportedOsName pulumi.StringInput `pulumi:"reportedOsName"`
	ReportedOsVersion pulumi.StringInput `pulumi:"reportedOsVersion"`
	// Customize details about the root block
	// device of the instance. See Block Devices below for details.
	RootBlockDevices pulumi.ArrayInput `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default.  Can be either `"ebs"` or `"instance-store"`
	RootDeviceType pulumi.StringInput `pulumi:"rootDeviceType"`
	RootDeviceVolumeId pulumi.StringInput `pulumi:"rootDeviceVolumeId"`
	// The associated security groups.
	SecurityGroupIds pulumi.ArrayInput `pulumi:"securityGroupIds"`
	SshHostDsaKeyFingerprint pulumi.StringInput `pulumi:"sshHostDsaKeyFingerprint"`
	SshHostRsaKeyFingerprint pulumi.StringInput `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringInput `pulumi:"sshKeyName"`
	// The id of the stack the instance will belong to.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// The desired state of the instance.  Can be either `"running"` or `"stopped"`.
	State pulumi.StringInput `pulumi:"state"`
	Status pulumi.StringInput `pulumi:"status"`
	// Subnet ID to attach to
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Instance tenancy to use. Can be one of `"default"`, `"dedicated"` or `"host"`
	Tenancy pulumi.StringInput `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either `"paravirtual"` or `"hvm"`.
	VirtualizationType pulumi.StringInput `pulumi:"virtualizationType"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The AWS OpsWorks agent to install.  Defaults to `"INHERIT"`.
	AgentVersion pulumi.StringInput `pulumi:"agentVersion"`
	// The AMI to use for the instance.  If an AMI is specified, `os` must be `"Custom"`.
	AmiId pulumi.StringInput `pulumi:"amiId"`
	// Machine architecture for created instances.  Can be either `"x8664"` (the default) or `"i386"`
	Architecture pulumi.StringInput `pulumi:"architecture"`
	// Creates load-based or time-based instances.  If set, can be either: `"load"` or `"timer"`.
	AutoScalingType pulumi.StringInput `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created
	// by default.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	DeleteEbs pulumi.BoolInput `pulumi:"deleteEbs"`
	DeleteEip pulumi.BoolInput `pulumi:"deleteEip"`
	// Additional EBS block devices to attach to the
	// instance.  See Block Devices below for details.
	EbsBlockDevices pulumi.ArrayInput `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolInput `pulumi:"ebsOptimized"`
	EcsClusterArn pulumi.StringInput `pulumi:"ecsClusterArn"`
	ElasticIp pulumi.StringInput `pulumi:"elasticIp"`
	// Customize Ephemeral (also known as
	// "Instance Store") volumes on the instance. See Block Devices below for details.
	EphemeralBlockDevices pulumi.ArrayInput `pulumi:"ephemeralBlockDevices"`
	// The instance's host name.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	InfrastructureClass pulumi.StringInput `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Defaults to `true`.
	InstallUpdatesOnBoot pulumi.BoolInput `pulumi:"installUpdatesOnBoot"`
	InstanceProfileArn pulumi.StringInput `pulumi:"instanceProfileArn"`
	// The type of instance to start
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	LastServiceErrorId pulumi.StringInput `pulumi:"lastServiceErrorId"`
	// The ids of the layers the instance will belong to.
	LayerIds pulumi.ArrayInput `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os pulumi.StringInput `pulumi:"os"`
	Platform pulumi.StringInput `pulumi:"platform"`
	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	PrivateDns pulumi.StringInput `pulumi:"privateDns"`
	// The private IP address assigned to the instance
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	PublicDns pulumi.StringInput `pulumi:"publicDns"`
	// The public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	RegisteredBy pulumi.StringInput `pulumi:"registeredBy"`
	ReportedAgentVersion pulumi.StringInput `pulumi:"reportedAgentVersion"`
	ReportedOsFamily pulumi.StringInput `pulumi:"reportedOsFamily"`
	ReportedOsName pulumi.StringInput `pulumi:"reportedOsName"`
	ReportedOsVersion pulumi.StringInput `pulumi:"reportedOsVersion"`
	// Customize details about the root block
	// device of the instance. See Block Devices below for details.
	RootBlockDevices pulumi.ArrayInput `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default.  Can be either `"ebs"` or `"instance-store"`
	RootDeviceType pulumi.StringInput `pulumi:"rootDeviceType"`
	RootDeviceVolumeId pulumi.StringInput `pulumi:"rootDeviceVolumeId"`
	// The associated security groups.
	SecurityGroupIds pulumi.ArrayInput `pulumi:"securityGroupIds"`
	SshHostDsaKeyFingerprint pulumi.StringInput `pulumi:"sshHostDsaKeyFingerprint"`
	SshHostRsaKeyFingerprint pulumi.StringInput `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringInput `pulumi:"sshKeyName"`
	// The id of the stack the instance will belong to.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// The desired state of the instance.  Can be either `"running"` or `"stopped"`.
	State pulumi.StringInput `pulumi:"state"`
	Status pulumi.StringInput `pulumi:"status"`
	// Subnet ID to attach to
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Instance tenancy to use. Can be one of `"default"`, `"dedicated"` or `"host"`
	Tenancy pulumi.StringInput `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either `"paravirtual"` or `"hvm"`.
	VirtualizationType pulumi.StringInput `pulumi:"virtualizationType"`
}
