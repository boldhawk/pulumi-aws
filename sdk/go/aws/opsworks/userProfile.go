// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an OpsWorks User Profile resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/opsworks_user_profile.html.markdown.
type UserProfile struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Whether users can specify their own SSH public key through the My Settings page
	AllowSelfManagement pulumi.BoolOutput `pulumi:"allowSelfManagement"`

	// The users public key
	SshPublicKey pulumi.StringOutput `pulumi:"sshPublicKey"`

	// The ssh username, with witch this user wants to log in
	SshUsername pulumi.StringOutput `pulumi:"sshUsername"`

	// The user's IAM ARN
	UserArn pulumi.StringOutput `pulumi:"userArn"`
}

// NewUserProfile registers a new resource with the given unique name, arguments, and options.
func NewUserProfile(ctx *pulumi.Context,
	name string, args *UserProfileArgs, opts ...pulumi.ResourceOpt) (*UserProfile, error) {
	if args == nil || args.SshUsername == nil {
		return nil, errors.New("missing required argument 'SshUsername'")
	}
	if args == nil || args.UserArn == nil {
		return nil, errors.New("missing required argument 'UserArn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["allowSelfManagement"] = args.AllowSelfManagement
		inputs["sshPublicKey"] = args.SshPublicKey
		inputs["sshUsername"] = args.SshUsername
		inputs["userArn"] = args.UserArn
	}
	var resource UserProfile
	err := ctx.RegisterResource("aws:opsworks/userProfile:UserProfile", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserProfile gets an existing UserProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserProfile(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UserProfileState, opts ...pulumi.ResourceOpt) (*UserProfile, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["allowSelfManagement"] = state.AllowSelfManagement
		inputs["sshPublicKey"] = state.SshPublicKey
		inputs["sshUsername"] = state.SshUsername
		inputs["userArn"] = state.UserArn
	}
	var resource UserProfile
	err := ctx.ReadResource("aws:opsworks/userProfile:UserProfile", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *UserProfile) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *UserProfile) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering UserProfile resources.
type UserProfileState struct {
	// Whether users can specify their own SSH public key through the My Settings page
	AllowSelfManagement pulumi.BoolInput `pulumi:"allowSelfManagement"`
	// The users public key
	SshPublicKey pulumi.StringInput `pulumi:"sshPublicKey"`
	// The ssh username, with witch this user wants to log in
	SshUsername pulumi.StringInput `pulumi:"sshUsername"`
	// The user's IAM ARN
	UserArn pulumi.StringInput `pulumi:"userArn"`
}

// The set of arguments for constructing a UserProfile resource.
type UserProfileArgs struct {
	// Whether users can specify their own SSH public key through the My Settings page
	AllowSelfManagement pulumi.BoolInput `pulumi:"allowSelfManagement"`
	// The users public key
	SshPublicKey pulumi.StringInput `pulumi:"sshPublicKey"`
	// The ssh username, with witch this user wants to log in
	SshUsername pulumi.StringInput `pulumi:"sshUsername"`
	// The user's IAM ARN
	UserArn pulumi.StringInput `pulumi:"userArn"`
}
