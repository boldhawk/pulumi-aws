// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint App resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_app.html.markdown.
type App struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Application ID of the Pinpoint App.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`

	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	CampaignHook pulumi.AnyOutput `pulumi:"campaignHook"`

	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumi.AnyOutput `pulumi:"limits"`

	// The application name. By default generated by this provider
	Name pulumi.StringOutput `pulumi:"name"`

	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`

	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumi.AnyOutput `pulumi:"quietTime"`

	// Key-value mapping of resource tags
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOpt) (*App, error) {
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["campaignHook"] = args.CampaignHook
		inputs["limits"] = args.Limits
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["quietTime"] = args.QuietTime
		inputs["tags"] = args.Tags
	}
	var resource App
	err := ctx.RegisterResource("aws:pinpoint/app:App", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AppState, opts ...pulumi.ResourceOpt) (*App, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["applicationId"] = state.ApplicationId
		inputs["arn"] = state.Arn
		inputs["campaignHook"] = state.CampaignHook
		inputs["limits"] = state.Limits
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["quietTime"] = state.QuietTime
		inputs["tags"] = state.Tags
	}
	var resource App
	err := ctx.ReadResource("aws:pinpoint/app:App", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *App) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *App) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering App resources.
type AppState struct {
	// The Application ID of the Pinpoint App.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn pulumi.StringInput `pulumi:"arn"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	CampaignHook pulumi.AnyInput `pulumi:"campaignHook"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumi.AnyInput `pulumi:"limits"`
	// The application name. By default generated by this provider
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumi.AnyInput `pulumi:"quietTime"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	CampaignHook pulumi.AnyInput `pulumi:"campaignHook"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumi.AnyInput `pulumi:"limits"`
	// The application name. By default generated by this provider
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumi.AnyInput `pulumi:"quietTime"`
	// Key-value mapping of resource tags
	Tags pulumi.MapInput `pulumi:"tags"`
}
