// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint ADM (Amazon Device Messaging) Channel resource.
// 
// > **Note:** All arguments including the Client ID and Client Secret will be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_adm_channel.html.markdown.
type AdmChannel struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`

	// Client ID (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientId pulumi.StringOutput `pulumi:"clientId"`

	// Client Secret (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`

	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
}

// NewAdmChannel registers a new resource with the given unique name, arguments, and options.
func NewAdmChannel(ctx *pulumi.Context,
	name string, args *AdmChannelArgs, opts ...pulumi.ResourceOpt) (*AdmChannel, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.ClientSecret == nil {
		return nil, errors.New("missing required argument 'ClientSecret'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["applicationId"] = args.ApplicationId
		inputs["clientId"] = args.ClientId
		inputs["clientSecret"] = args.ClientSecret
		inputs["enabled"] = args.Enabled
	}
	var resource AdmChannel
	err := ctx.RegisterResource("aws:pinpoint/admChannel:AdmChannel", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdmChannel gets an existing AdmChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdmChannel(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AdmChannelState, opts ...pulumi.ResourceOpt) (*AdmChannel, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["applicationId"] = state.ApplicationId
		inputs["clientId"] = state.ClientId
		inputs["clientSecret"] = state.ClientSecret
		inputs["enabled"] = state.Enabled
	}
	var resource AdmChannel
	err := ctx.ReadResource("aws:pinpoint/admChannel:AdmChannel", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *AdmChannel) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *AdmChannel) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering AdmChannel resources.
type AdmChannelState struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Client ID (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client Secret (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

// The set of arguments for constructing a AdmChannel resource.
type AdmChannelArgs struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Client ID (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client Secret (part of OAuth Credentials) obtained via Amazon Developer Account.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Specifies whether to enable the channel. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}
