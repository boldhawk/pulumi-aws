// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Pinpoint SMS Channel resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/pinpoint_email_channel.html.markdown.
type EmailChannel struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`

	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`

	// The email address used to send emails from.
	FromAddress pulumi.StringOutput `pulumi:"fromAddress"`

	// The ARN of an identity verified with SES.
	Identity pulumi.StringOutput `pulumi:"identity"`

	// Messages per second that can be sent.
	MessagesPerSecond pulumi.IntOutput `pulumi:"messagesPerSecond"`

	// The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
}

// NewEmailChannel registers a new resource with the given unique name, arguments, and options.
func NewEmailChannel(ctx *pulumi.Context,
	name string, args *EmailChannelArgs, opts ...pulumi.ResourceOpt) (*EmailChannel, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	if args == nil || args.FromAddress == nil {
		return nil, errors.New("missing required argument 'FromAddress'")
	}
	if args == nil || args.Identity == nil {
		return nil, errors.New("missing required argument 'Identity'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["applicationId"] = args.ApplicationId
		inputs["enabled"] = args.Enabled
		inputs["fromAddress"] = args.FromAddress
		inputs["identity"] = args.Identity
		inputs["roleArn"] = args.RoleArn
	}
	var resource EmailChannel
	err := ctx.RegisterResource("aws:pinpoint/emailChannel:EmailChannel", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailChannel gets an existing EmailChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailChannel(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EmailChannelState, opts ...pulumi.ResourceOpt) (*EmailChannel, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["applicationId"] = state.ApplicationId
		inputs["enabled"] = state.Enabled
		inputs["fromAddress"] = state.FromAddress
		inputs["identity"] = state.Identity
		inputs["messagesPerSecond"] = state.MessagesPerSecond
		inputs["roleArn"] = state.RoleArn
	}
	var resource EmailChannel
	err := ctx.ReadResource("aws:pinpoint/emailChannel:EmailChannel", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *EmailChannel) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *EmailChannel) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering EmailChannel resources.
type EmailChannelState struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The email address used to send emails from.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The ARN of an identity verified with SES.
	Identity pulumi.StringInput `pulumi:"identity"`
	// Messages per second that can be sent.
	MessagesPerSecond pulumi.IntInput `pulumi:"messagesPerSecond"`
	// The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

// The set of arguments for constructing a EmailChannel resource.
type EmailChannelArgs struct {
	// The application ID.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Whether the channel is enabled or disabled. Defaults to `true`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The email address used to send emails from.
	FromAddress pulumi.StringInput `pulumi:"fromAddress"`
	// The ARN of an identity verified with SES.
	Identity pulumi.StringInput `pulumi:"identity"`
	// The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}
