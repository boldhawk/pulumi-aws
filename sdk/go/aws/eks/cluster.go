// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an EKS Cluster.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/eks_cluster.html.markdown.
type Cluster struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) of the cluster.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Nested attribute containing `certificate-authority-data` for your cluster.
	CertificateAuthority pulumi.AnyOutput `pulumi:"certificateAuthority"`

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`

	// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
	EnabledClusterLogTypes pulumi.ArrayOutput `pulumi:"enabledClusterLogTypes"`

	// The endpoint for your Kubernetes API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`

	// Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019.
	Identities pulumi.ArrayOutput `pulumi:"identities"`

	// Name of the cluster.
	Name pulumi.StringOutput `pulumi:"name"`

	// The platform version for the cluster.
	PlatformVersion pulumi.StringOutput `pulumi:"platformVersion"`

	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`

	// The status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`. 
	Status pulumi.StringOutput `pulumi:"status"`

	// Key-value mapping of resource tags.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
	Version pulumi.StringOutput `pulumi:"version"`

	// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
	VpcConfig pulumi.AnyOutput `pulumi:"vpcConfig"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil || args.VpcConfig == nil {
		return nil, errors.New("missing required argument 'VpcConfig'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["enabledClusterLogTypes"] = args.EnabledClusterLogTypes
		inputs["name"] = args.Name
		inputs["roleArn"] = args.RoleArn
		inputs["tags"] = args.Tags
		inputs["version"] = args.Version
		inputs["vpcConfig"] = args.VpcConfig
	}
	var resource Cluster
	err := ctx.RegisterResource("aws:eks/cluster:Cluster", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClusterState, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["certificateAuthority"] = state.CertificateAuthority
		inputs["createdAt"] = state.CreatedAt
		inputs["enabledClusterLogTypes"] = state.EnabledClusterLogTypes
		inputs["endpoint"] = state.Endpoint
		inputs["identities"] = state.Identities
		inputs["name"] = state.Name
		inputs["platformVersion"] = state.PlatformVersion
		inputs["roleArn"] = state.RoleArn
		inputs["status"] = state.Status
		inputs["tags"] = state.Tags
		inputs["version"] = state.Version
		inputs["vpcConfig"] = state.VpcConfig
	}
	var resource Cluster
	err := ctx.ReadResource("aws:eks/cluster:Cluster", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Cluster) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Cluster) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Cluster resources.
type ClusterState struct {
	// The Amazon Resource Name (ARN) of the cluster.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Nested attribute containing `certificate-authority-data` for your cluster.
	CertificateAuthority pulumi.AnyInput `pulumi:"certificateAuthority"`
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
	EnabledClusterLogTypes pulumi.ArrayInput `pulumi:"enabledClusterLogTypes"`
	// The endpoint for your Kubernetes API server.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019.
	Identities pulumi.ArrayInput `pulumi:"identities"`
	// Name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The platform version for the cluster.
	PlatformVersion pulumi.StringInput `pulumi:"platformVersion"`
	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`. 
	Status pulumi.StringInput `pulumi:"status"`
	// Key-value mapping of resource tags.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
	Version pulumi.StringInput `pulumi:"version"`
	// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
	VpcConfig pulumi.AnyInput `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
	EnabledClusterLogTypes pulumi.ArrayInput `pulumi:"enabledClusterLogTypes"`
	// Name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Key-value mapping of resource tags.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
	Version pulumi.StringInput `pulumi:"version"`
	// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
	VpcConfig pulumi.AnyInput `pulumi:"vpcConfig"`
}
