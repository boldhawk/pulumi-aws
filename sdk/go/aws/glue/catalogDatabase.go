// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Glue Catalog Database Resource. You can refer to the [Glue Developer Guide](http://docs.aws.amazon.com/glue/latest/dg/populate-data-catalog.html) for a full explanation of the Glue Data Catalog functionality
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_catalog_database.html.markdown.
type CatalogDatabase struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumi.StringOutput `pulumi:"catalogId"`

	// Description of the database.
	Description pulumi.StringOutput `pulumi:"description"`

	// The location of the database (for example, an HDFS path).
	LocationUri pulumi.StringOutput `pulumi:"locationUri"`

	// The name of the database.
	Name pulumi.StringOutput `pulumi:"name"`

	// A list of key-value pairs that define parameters and properties of the database.
	Parameters pulumi.MapOutput `pulumi:"parameters"`
}

// NewCatalogDatabase registers a new resource with the given unique name, arguments, and options.
func NewCatalogDatabase(ctx *pulumi.Context,
	name string, args *CatalogDatabaseArgs, opts ...pulumi.ResourceOpt) (*CatalogDatabase, error) {
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["catalogId"] = args.CatalogId
		inputs["description"] = args.Description
		inputs["locationUri"] = args.LocationUri
		inputs["name"] = args.Name
		inputs["parameters"] = args.Parameters
	}
	var resource CatalogDatabase
	err := ctx.RegisterResource("aws:glue/catalogDatabase:CatalogDatabase", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogDatabase gets an existing CatalogDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogDatabase(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CatalogDatabaseState, opts ...pulumi.ResourceOpt) (*CatalogDatabase, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["catalogId"] = state.CatalogId
		inputs["description"] = state.Description
		inputs["locationUri"] = state.LocationUri
		inputs["name"] = state.Name
		inputs["parameters"] = state.Parameters
	}
	var resource CatalogDatabase
	err := ctx.ReadResource("aws:glue/catalogDatabase:CatalogDatabase", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *CatalogDatabase) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *CatalogDatabase) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering CatalogDatabase resources.
type CatalogDatabaseState struct {
	// ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// Description of the database.
	Description pulumi.StringInput `pulumi:"description"`
	// The location of the database (for example, an HDFS path).
	LocationUri pulumi.StringInput `pulumi:"locationUri"`
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of key-value pairs that define parameters and properties of the database.
	Parameters pulumi.MapInput `pulumi:"parameters"`
}

// The set of arguments for constructing a CatalogDatabase resource.
type CatalogDatabaseArgs struct {
	// ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// Description of the database.
	Description pulumi.StringInput `pulumi:"description"`
	// The location of the database (for example, an HDFS path).
	LocationUri pulumi.StringInput `pulumi:"locationUri"`
	// The name of the database.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of key-value pairs that define parameters and properties of the database.
	Parameters pulumi.MapInput `pulumi:"parameters"`
}
