// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Glue Connection resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_connection.html.markdown.
type Connection struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumi.StringOutput `pulumi:"catalogId"`

	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumi.MapOutput `pulumi:"connectionProperties"`

	// The type of the connection. Defaults to `JBDC`.
	ConnectionType pulumi.StringOutput `pulumi:"connectionType"`

	// Description of the connection.
	Description pulumi.StringOutput `pulumi:"description"`

	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumi.ArrayOutput `pulumi:"matchCriterias"`

	// The name of the connection.
	Name pulumi.StringOutput `pulumi:"name"`

	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumi.AnyOutput `pulumi:"physicalConnectionRequirements"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOpt) (*Connection, error) {
	if args == nil || args.ConnectionProperties == nil {
		return nil, errors.New("missing required argument 'ConnectionProperties'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["catalogId"] = args.CatalogId
		inputs["connectionProperties"] = args.ConnectionProperties
		inputs["connectionType"] = args.ConnectionType
		inputs["description"] = args.Description
		inputs["matchCriterias"] = args.MatchCriterias
		inputs["name"] = args.Name
		inputs["physicalConnectionRequirements"] = args.PhysicalConnectionRequirements
	}
	var resource Connection
	err := ctx.RegisterResource("aws:glue/connection:Connection", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ConnectionState, opts ...pulumi.ResourceOpt) (*Connection, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["catalogId"] = state.CatalogId
		inputs["connectionProperties"] = state.ConnectionProperties
		inputs["connectionType"] = state.ConnectionType
		inputs["description"] = state.Description
		inputs["matchCriterias"] = state.MatchCriterias
		inputs["name"] = state.Name
		inputs["physicalConnectionRequirements"] = state.PhysicalConnectionRequirements
	}
	var resource Connection
	err := ctx.ReadResource("aws:glue/connection:Connection", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Connection) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Connection) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Connection resources.
type ConnectionState struct {
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumi.MapInput `pulumi:"connectionProperties"`
	// The type of the connection. Defaults to `JBDC`.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Description of the connection.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumi.ArrayInput `pulumi:"matchCriterias"`
	// The name of the connection.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumi.AnyInput `pulumi:"physicalConnectionRequirements"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumi.MapInput `pulumi:"connectionProperties"`
	// The type of the connection. Defaults to `JBDC`.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Description of the connection.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumi.ArrayInput `pulumi:"matchCriterias"`
	// The name of the connection.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumi.AnyInput `pulumi:"physicalConnectionRequirements"`
}
