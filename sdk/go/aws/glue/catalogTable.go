// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Glue Catalog Table Resource. You can refer to the [Glue Developer Guide](http://docs.aws.amazon.com/glue/latest/dg/populate-data-catalog.html) for a full explanation of the Glue Data Catalog functionality.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_catalog_table.html.markdown.
type CatalogTable struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumi.StringOutput `pulumi:"catalogId"`

	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`

	// Description of the table.
	Description pulumi.StringOutput `pulumi:"description"`

	// Name of the SerDe.
	Name pulumi.StringOutput `pulumi:"name"`

	// Owner of the table.
	Owner pulumi.StringOutput `pulumi:"owner"`

	// A map of initialization parameters for the SerDe, in key-value form.
	Parameters pulumi.MapOutput `pulumi:"parameters"`

	// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
	PartitionKeys pulumi.ArrayOutput `pulumi:"partitionKeys"`

	// Retention time for this table.
	Retention pulumi.IntOutput `pulumi:"retention"`

	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumi.AnyOutput `pulumi:"storageDescriptor"`

	// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
	TableType pulumi.StringOutput `pulumi:"tableType"`

	// If the table is a view, the expanded text of the view; otherwise null.
	ViewExpandedText pulumi.StringOutput `pulumi:"viewExpandedText"`

	// If the table is a view, the original text of the view; otherwise null.
	ViewOriginalText pulumi.StringOutput `pulumi:"viewOriginalText"`
}

// NewCatalogTable registers a new resource with the given unique name, arguments, and options.
func NewCatalogTable(ctx *pulumi.Context,
	name string, args *CatalogTableArgs, opts ...pulumi.ResourceOpt) (*CatalogTable, error) {
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["catalogId"] = args.CatalogId
		inputs["databaseName"] = args.DatabaseName
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["owner"] = args.Owner
		inputs["parameters"] = args.Parameters
		inputs["partitionKeys"] = args.PartitionKeys
		inputs["retention"] = args.Retention
		inputs["storageDescriptor"] = args.StorageDescriptor
		inputs["tableType"] = args.TableType
		inputs["viewExpandedText"] = args.ViewExpandedText
		inputs["viewOriginalText"] = args.ViewOriginalText
	}
	var resource CatalogTable
	err := ctx.RegisterResource("aws:glue/catalogTable:CatalogTable", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogTable gets an existing CatalogTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogTable(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CatalogTableState, opts ...pulumi.ResourceOpt) (*CatalogTable, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["catalogId"] = state.CatalogId
		inputs["databaseName"] = state.DatabaseName
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["owner"] = state.Owner
		inputs["parameters"] = state.Parameters
		inputs["partitionKeys"] = state.PartitionKeys
		inputs["retention"] = state.Retention
		inputs["storageDescriptor"] = state.StorageDescriptor
		inputs["tableType"] = state.TableType
		inputs["viewExpandedText"] = state.ViewExpandedText
		inputs["viewOriginalText"] = state.ViewOriginalText
	}
	var resource CatalogTable
	err := ctx.ReadResource("aws:glue/catalogTable:CatalogTable", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *CatalogTable) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *CatalogTable) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering CatalogTable resources.
type CatalogTableState struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Description of the table.
	Description pulumi.StringInput `pulumi:"description"`
	// Name of the SerDe.
	Name pulumi.StringInput `pulumi:"name"`
	// Owner of the table.
	Owner pulumi.StringInput `pulumi:"owner"`
	// A map of initialization parameters for the SerDe, in key-value form.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
	PartitionKeys pulumi.ArrayInput `pulumi:"partitionKeys"`
	// Retention time for this table.
	Retention pulumi.IntInput `pulumi:"retention"`
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumi.AnyInput `pulumi:"storageDescriptor"`
	// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
	TableType pulumi.StringInput `pulumi:"tableType"`
	// If the table is a view, the expanded text of the view; otherwise null.
	ViewExpandedText pulumi.StringInput `pulumi:"viewExpandedText"`
	// If the table is a view, the original text of the view; otherwise null.
	ViewOriginalText pulumi.StringInput `pulumi:"viewOriginalText"`
}

// The set of arguments for constructing a CatalogTable resource.
type CatalogTableArgs struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Description of the table.
	Description pulumi.StringInput `pulumi:"description"`
	// Name of the SerDe.
	Name pulumi.StringInput `pulumi:"name"`
	// Owner of the table.
	Owner pulumi.StringInput `pulumi:"owner"`
	// A map of initialization parameters for the SerDe, in key-value form.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
	PartitionKeys pulumi.ArrayInput `pulumi:"partitionKeys"`
	// Retention time for this table.
	Retention pulumi.IntInput `pulumi:"retention"`
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumi.AnyInput `pulumi:"storageDescriptor"`
	// The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.).
	TableType pulumi.StringInput `pulumi:"tableType"`
	// If the table is a view, the expanded text of the view; otherwise null.
	ViewExpandedText pulumi.StringInput `pulumi:"viewExpandedText"`
	// If the table is a view, the original text of the view; otherwise null.
	ViewOriginalText pulumi.StringInput `pulumi:"viewOriginalText"`
}
