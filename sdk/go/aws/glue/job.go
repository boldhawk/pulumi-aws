// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Glue Job resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_job.html.markdown.
type Job struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
	AllocatedCapacity pulumi.IntOutput `pulumi:"allocatedCapacity"`

	// The command of the job. Defined below.
	Command pulumi.AnyOutput `pulumi:"command"`

	// The list of connections used for this job.
	Connections pulumi.ArrayOutput `pulumi:"connections"`

	// The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
	DefaultArguments pulumi.MapOutput `pulumi:"defaultArguments"`

	// Description of the job.
	Description pulumi.StringOutput `pulumi:"description"`

	// Execution property of the job. Defined below.
	ExecutionProperty pulumi.AnyOutput `pulumi:"executionProperty"`

	// The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity pulumi.Float64Output `pulumi:"maxCapacity"`

	// The maximum number of times to retry this job if it fails.
	MaxRetries pulumi.IntOutput `pulumi:"maxRetries"`

	// The name of the job command. Defaults to `glueetl`
	Name pulumi.StringOutput `pulumi:"name"`

	// The ARN of the IAM role associated with this job.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`

	// The name of the Security Configuration to be associated with the job.
	SecurityConfiguration pulumi.StringOutput `pulumi:"securityConfiguration"`

	// The job timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntOutput `pulumi:"timeout"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOpt) (*Job, error) {
	if args == nil || args.Command == nil {
		return nil, errors.New("missing required argument 'Command'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["allocatedCapacity"] = args.AllocatedCapacity
		inputs["command"] = args.Command
		inputs["connections"] = args.Connections
		inputs["defaultArguments"] = args.DefaultArguments
		inputs["description"] = args.Description
		inputs["executionProperty"] = args.ExecutionProperty
		inputs["maxCapacity"] = args.MaxCapacity
		inputs["maxRetries"] = args.MaxRetries
		inputs["name"] = args.Name
		inputs["roleArn"] = args.RoleArn
		inputs["securityConfiguration"] = args.SecurityConfiguration
		inputs["timeout"] = args.Timeout
	}
	var resource Job
	err := ctx.RegisterResource("aws:glue/job:Job", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.ID, state *JobState, opts ...pulumi.ResourceOpt) (*Job, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["allocatedCapacity"] = state.AllocatedCapacity
		inputs["command"] = state.Command
		inputs["connections"] = state.Connections
		inputs["defaultArguments"] = state.DefaultArguments
		inputs["description"] = state.Description
		inputs["executionProperty"] = state.ExecutionProperty
		inputs["maxCapacity"] = state.MaxCapacity
		inputs["maxRetries"] = state.MaxRetries
		inputs["name"] = state.Name
		inputs["roleArn"] = state.RoleArn
		inputs["securityConfiguration"] = state.SecurityConfiguration
		inputs["timeout"] = state.Timeout
	}
	var resource Job
	err := ctx.ReadResource("aws:glue/job:Job", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Job) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Job) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Job resources.
type JobState struct {
	// **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
	AllocatedCapacity pulumi.IntInput `pulumi:"allocatedCapacity"`
	// The command of the job. Defined below.
	Command pulumi.AnyInput `pulumi:"command"`
	// The list of connections used for this job.
	Connections pulumi.ArrayInput `pulumi:"connections"`
	// The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
	DefaultArguments pulumi.MapInput `pulumi:"defaultArguments"`
	// Description of the job.
	Description pulumi.StringInput `pulumi:"description"`
	// Execution property of the job. Defined below.
	ExecutionProperty pulumi.AnyInput `pulumi:"executionProperty"`
	// The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity pulumi.Float64Input `pulumi:"maxCapacity"`
	// The maximum number of times to retry this job if it fails.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The name of the job command. Defaults to `glueetl`
	Name pulumi.StringInput `pulumi:"name"`
	// The ARN of the IAM role associated with this job.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Security Configuration to be associated with the job.
	SecurityConfiguration pulumi.StringInput `pulumi:"securityConfiguration"`
	// The job timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntInput `pulumi:"timeout"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
	AllocatedCapacity pulumi.IntInput `pulumi:"allocatedCapacity"`
	// The command of the job. Defined below.
	Command pulumi.AnyInput `pulumi:"command"`
	// The list of connections used for this job.
	Connections pulumi.ArrayInput `pulumi:"connections"`
	// The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
	DefaultArguments pulumi.MapInput `pulumi:"defaultArguments"`
	// Description of the job.
	Description pulumi.StringInput `pulumi:"description"`
	// Execution property of the job. Defined below.
	ExecutionProperty pulumi.AnyInput `pulumi:"executionProperty"`
	// The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.
	MaxCapacity pulumi.Float64Input `pulumi:"maxCapacity"`
	// The maximum number of times to retry this job if it fails.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// The name of the job command. Defaults to `glueetl`
	Name pulumi.StringInput `pulumi:"name"`
	// The ARN of the IAM role associated with this job.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Security Configuration to be associated with the job.
	SecurityConfiguration pulumi.StringInput `pulumi:"securityConfiguration"`
	// The job timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntInput `pulumi:"timeout"`
}
