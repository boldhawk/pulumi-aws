// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Glue Crawler. More information can be found in the [AWS Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html)
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glue_crawler.html.markdown.
type Crawler struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN of the crawler 
	Arn pulumi.StringOutput `pulumi:"arn"`

	CatalogTargets pulumi.ArrayOutput `pulumi:"catalogTargets"`

	// List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
	Classifiers pulumi.ArrayOutput `pulumi:"classifiers"`

	// JSON string of configuration information.
	Configuration pulumi.StringOutput `pulumi:"configuration"`

	// The name of the Glue database to be synchronized.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`

	// Description of the crawler.
	Description pulumi.StringOutput `pulumi:"description"`

	// List of nested DynamoDB target arguments. See below.
	DynamodbTargets pulumi.ArrayOutput `pulumi:"dynamodbTargets"`

	// List of nested JBDC target arguments. See below.
	JdbcTargets pulumi.ArrayOutput `pulumi:"jdbcTargets"`

	// Name of the crawler.
	Name pulumi.StringOutput `pulumi:"name"`

	// The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
	Role pulumi.StringOutput `pulumi:"role"`

	// List nested Amazon S3 target arguments. See below.
	S3Targets pulumi.ArrayOutput `pulumi:"s3Targets"`

	// A cron expression used to specify the schedule. For more information, see [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html). For example, to run something every day at 12:15 UTC, you would specify: `cron(15 12 * * ? *)`.
	Schedule pulumi.StringOutput `pulumi:"schedule"`

	// Policy for the crawler's update and deletion behavior.
	SchemaChangePolicy pulumi.AnyOutput `pulumi:"schemaChangePolicy"`

	// The name of Security Configuration to be used by the crawler
	SecurityConfiguration pulumi.StringOutput `pulumi:"securityConfiguration"`

	// The table prefix used for catalog tables that are created.
	TablePrefix pulumi.StringOutput `pulumi:"tablePrefix"`
}

// NewCrawler registers a new resource with the given unique name, arguments, and options.
func NewCrawler(ctx *pulumi.Context,
	name string, args *CrawlerArgs, opts ...pulumi.ResourceOpt) (*Crawler, error) {
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["catalogTargets"] = args.CatalogTargets
		inputs["classifiers"] = args.Classifiers
		inputs["configuration"] = args.Configuration
		inputs["databaseName"] = args.DatabaseName
		inputs["description"] = args.Description
		inputs["dynamodbTargets"] = args.DynamodbTargets
		inputs["jdbcTargets"] = args.JdbcTargets
		inputs["name"] = args.Name
		inputs["role"] = args.Role
		inputs["s3Targets"] = args.S3Targets
		inputs["schedule"] = args.Schedule
		inputs["schemaChangePolicy"] = args.SchemaChangePolicy
		inputs["securityConfiguration"] = args.SecurityConfiguration
		inputs["tablePrefix"] = args.TablePrefix
	}
	var resource Crawler
	err := ctx.RegisterResource("aws:glue/crawler:Crawler", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCrawler gets an existing Crawler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCrawler(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CrawlerState, opts ...pulumi.ResourceOpt) (*Crawler, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["catalogTargets"] = state.CatalogTargets
		inputs["classifiers"] = state.Classifiers
		inputs["configuration"] = state.Configuration
		inputs["databaseName"] = state.DatabaseName
		inputs["description"] = state.Description
		inputs["dynamodbTargets"] = state.DynamodbTargets
		inputs["jdbcTargets"] = state.JdbcTargets
		inputs["name"] = state.Name
		inputs["role"] = state.Role
		inputs["s3Targets"] = state.S3Targets
		inputs["schedule"] = state.Schedule
		inputs["schemaChangePolicy"] = state.SchemaChangePolicy
		inputs["securityConfiguration"] = state.SecurityConfiguration
		inputs["tablePrefix"] = state.TablePrefix
	}
	var resource Crawler
	err := ctx.ReadResource("aws:glue/crawler:Crawler", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Crawler) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Crawler) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Crawler resources.
type CrawlerState struct {
	// The ARN of the crawler 
	Arn pulumi.StringInput `pulumi:"arn"`
	CatalogTargets pulumi.ArrayInput `pulumi:"catalogTargets"`
	// List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
	Classifiers pulumi.ArrayInput `pulumi:"classifiers"`
	// JSON string of configuration information.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The name of the Glue database to be synchronized.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Description of the crawler.
	Description pulumi.StringInput `pulumi:"description"`
	// List of nested DynamoDB target arguments. See below.
	DynamodbTargets pulumi.ArrayInput `pulumi:"dynamodbTargets"`
	// List of nested JBDC target arguments. See below.
	JdbcTargets pulumi.ArrayInput `pulumi:"jdbcTargets"`
	// Name of the crawler.
	Name pulumi.StringInput `pulumi:"name"`
	// The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
	Role pulumi.StringInput `pulumi:"role"`
	// List nested Amazon S3 target arguments. See below.
	S3Targets pulumi.ArrayInput `pulumi:"s3Targets"`
	// A cron expression used to specify the schedule. For more information, see [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html). For example, to run something every day at 12:15 UTC, you would specify: `cron(15 12 * * ? *)`.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// Policy for the crawler's update and deletion behavior.
	SchemaChangePolicy pulumi.AnyInput `pulumi:"schemaChangePolicy"`
	// The name of Security Configuration to be used by the crawler
	SecurityConfiguration pulumi.StringInput `pulumi:"securityConfiguration"`
	// The table prefix used for catalog tables that are created.
	TablePrefix pulumi.StringInput `pulumi:"tablePrefix"`
}

// The set of arguments for constructing a Crawler resource.
type CrawlerArgs struct {
	CatalogTargets pulumi.ArrayInput `pulumi:"catalogTargets"`
	// List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
	Classifiers pulumi.ArrayInput `pulumi:"classifiers"`
	// JSON string of configuration information.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// The name of the Glue database to be synchronized.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Description of the crawler.
	Description pulumi.StringInput `pulumi:"description"`
	// List of nested DynamoDB target arguments. See below.
	DynamodbTargets pulumi.ArrayInput `pulumi:"dynamodbTargets"`
	// List of nested JBDC target arguments. See below.
	JdbcTargets pulumi.ArrayInput `pulumi:"jdbcTargets"`
	// Name of the crawler.
	Name pulumi.StringInput `pulumi:"name"`
	// The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
	Role pulumi.StringInput `pulumi:"role"`
	// List nested Amazon S3 target arguments. See below.
	S3Targets pulumi.ArrayInput `pulumi:"s3Targets"`
	// A cron expression used to specify the schedule. For more information, see [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html). For example, to run something every day at 12:15 UTC, you would specify: `cron(15 12 * * ? *)`.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// Policy for the crawler's update and deletion behavior.
	SchemaChangePolicy pulumi.AnyInput `pulumi:"schemaChangePolicy"`
	// The name of Security Configuration to be used by the crawler
	SecurityConfiguration pulumi.StringInput `pulumi:"securityConfiguration"`
	// The table prefix used for catalog tables that are created.
	TablePrefix pulumi.StringInput `pulumi:"tablePrefix"`
}
