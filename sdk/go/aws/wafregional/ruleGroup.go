// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Regional Rule Group Resource
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/wafregional_rule_group.html.markdown.
type RuleGroup struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// A list of activated rules, see below
	ActivatedRules pulumi.ArrayOutput `pulumi:"activatedRules"`

	// A friendly name for the metrics from the rule group
	MetricName pulumi.StringOutput `pulumi:"metricName"`

	// A friendly name of the rule group
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewRuleGroup(ctx *pulumi.Context,
	name string, args *RuleGroupArgs, opts ...pulumi.ResourceOpt) (*RuleGroup, error) {
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["activatedRules"] = args.ActivatedRules
		inputs["metricName"] = args.MetricName
		inputs["name"] = args.Name
	}
	var resource RuleGroup
	err := ctx.RegisterResource("aws:wafregional/ruleGroup:RuleGroup", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleGroup gets an existing RuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RuleGroupState, opts ...pulumi.ResourceOpt) (*RuleGroup, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["activatedRules"] = state.ActivatedRules
		inputs["metricName"] = state.MetricName
		inputs["name"] = state.Name
	}
	var resource RuleGroup
	err := ctx.ReadResource("aws:wafregional/ruleGroup:RuleGroup", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *RuleGroup) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *RuleGroup) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering RuleGroup resources.
type RuleGroupState struct {
	// A list of activated rules, see below
	ActivatedRules pulumi.ArrayInput `pulumi:"activatedRules"`
	// A friendly name for the metrics from the rule group
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// A friendly name of the rule group
	Name pulumi.StringInput `pulumi:"name"`
}

// The set of arguments for constructing a RuleGroup resource.
type RuleGroupArgs struct {
	// A list of activated rules, see below
	ActivatedRules pulumi.ArrayInput `pulumi:"activatedRules"`
	// A friendly name for the metrics from the rule group
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// A friendly name of the rule group
	Name pulumi.StringInput `pulumi:"name"`
}
