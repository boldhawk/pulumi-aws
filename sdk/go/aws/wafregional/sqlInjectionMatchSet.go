// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Regional SQL Injection Match Set Resource for use with Application Load Balancer.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/wafregional_sql_injection_match_set.html.markdown.
type SqlInjectionMatchSet struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The name or description of the SizeConstraintSet.
	Name pulumi.StringOutput `pulumi:"name"`

	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples pulumi.ArrayOutput `pulumi:"sqlInjectionMatchTuples"`
}

// NewSqlInjectionMatchSet registers a new resource with the given unique name, arguments, and options.
func NewSqlInjectionMatchSet(ctx *pulumi.Context,
	name string, args *SqlInjectionMatchSetArgs, opts ...pulumi.ResourceOpt) (*SqlInjectionMatchSet, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["name"] = args.Name
		inputs["sqlInjectionMatchTuples"] = args.SqlInjectionMatchTuples
	}
	var resource SqlInjectionMatchSet
	err := ctx.RegisterResource("aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlInjectionMatchSet gets an existing SqlInjectionMatchSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlInjectionMatchSet(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SqlInjectionMatchSetState, opts ...pulumi.ResourceOpt) (*SqlInjectionMatchSet, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["name"] = state.Name
		inputs["sqlInjectionMatchTuples"] = state.SqlInjectionMatchTuples
	}
	var resource SqlInjectionMatchSet
	err := ctx.ReadResource("aws:wafregional/sqlInjectionMatchSet:SqlInjectionMatchSet", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *SqlInjectionMatchSet) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *SqlInjectionMatchSet) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering SqlInjectionMatchSet resources.
type SqlInjectionMatchSetState struct {
	// The name or description of the SizeConstraintSet.
	Name pulumi.StringInput `pulumi:"name"`
	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples pulumi.ArrayInput `pulumi:"sqlInjectionMatchTuples"`
}

// The set of arguments for constructing a SqlInjectionMatchSet resource.
type SqlInjectionMatchSetArgs struct {
	// The name or description of the SizeConstraintSet.
	Name pulumi.StringInput `pulumi:"name"`
	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	SqlInjectionMatchTuples pulumi.ArrayInput `pulumi:"sqlInjectionMatchTuples"`
}
