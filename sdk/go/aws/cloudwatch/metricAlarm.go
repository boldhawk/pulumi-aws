// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Metric Alarm resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_metric_alarm.html.markdown.
type MetricAlarm struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to `true`.
	ActionsEnabled pulumi.BoolOutput `pulumi:"actionsEnabled"`

	// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	AlarmActions pulumi.ArrayOutput `pulumi:"alarmActions"`

	// The description for the alarm.
	AlarmDescription pulumi.StringOutput `pulumi:"alarmDescription"`

	// The descriptive name for the alarm. This name must be unique within the user's AWS account
	Name pulumi.StringOutput `pulumi:"name"`

	// The ARN of the cloudwatch metric alarm.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`.
	ComparisonOperator pulumi.StringOutput `pulumi:"comparisonOperator"`

	// The number of datapoints that must be breaching to trigger the alarm.
	DatapointsToAlarm pulumi.IntOutput `pulumi:"datapointsToAlarm"`

	// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Dimensions pulumi.MapOutput `pulumi:"dimensions"`

	// Used only for alarms
	// based on percentiles. If you specify `ignore`, the alarm state will not
	// change during periods with too few data points to be statistically significant.
	// If you specify `evaluate` or omit this parameter, the alarm will always be
	// evaluated and possibly change state no matter how many data points are available.
	// The following values are supported: `ignore`, and `evaluate`.
	EvaluateLowSampleCountPercentiles pulumi.StringOutput `pulumi:"evaluateLowSampleCountPercentiles"`

	// The number of periods over which data is compared to the specified threshold.
	EvaluationPeriods pulumi.IntOutput `pulumi:"evaluationPeriods"`

	// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
	ExtendedStatistic pulumi.StringOutput `pulumi:"extendedStatistic"`

	// The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	InsufficientDataActions pulumi.ArrayOutput `pulumi:"insufficientDataActions"`

	// The name for this metric.
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	MetricName pulumi.StringOutput `pulumi:"metricName"`

	// Enables you to create an alarm based on a metric math expression. You may specify at most 20.
	MetricQueries pulumi.ArrayOutput `pulumi:"metricQueries"`

	// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Namespace pulumi.StringOutput `pulumi:"namespace"`

	// The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	OkActions pulumi.ArrayOutput `pulumi:"okActions"`

	// The period in seconds over which the specified `stat` is applied.
	Period pulumi.IntOutput `pulumi:"period"`

	// The statistic to apply to the alarm's associated metric.
	// Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
	Statistic pulumi.StringOutput `pulumi:"statistic"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// The value against which the specified statistic is compared.
	Threshold pulumi.Float64Output `pulumi:"threshold"`

	// Sets how this alarm is to handle missing data points. The following values are supported: `missing`, `ignore`, `breaching` and `notBreaching`. Defaults to `missing`.
	TreatMissingData pulumi.StringOutput `pulumi:"treatMissingData"`

	// The unit for this metric.
	Unit pulumi.StringOutput `pulumi:"unit"`
}

// NewMetricAlarm registers a new resource with the given unique name, arguments, and options.
func NewMetricAlarm(ctx *pulumi.Context,
	name string, args *MetricAlarmArgs, opts ...pulumi.ResourceOpt) (*MetricAlarm, error) {
	if args == nil || args.ComparisonOperator == nil {
		return nil, errors.New("missing required argument 'ComparisonOperator'")
	}
	if args == nil || args.EvaluationPeriods == nil {
		return nil, errors.New("missing required argument 'EvaluationPeriods'")
	}
	if args == nil || args.Threshold == nil {
		return nil, errors.New("missing required argument 'Threshold'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["actionsEnabled"] = args.ActionsEnabled
		inputs["alarmActions"] = args.AlarmActions
		inputs["alarmDescription"] = args.AlarmDescription
		inputs["name"] = args.Name
		inputs["comparisonOperator"] = args.ComparisonOperator
		inputs["datapointsToAlarm"] = args.DatapointsToAlarm
		inputs["dimensions"] = args.Dimensions
		inputs["evaluateLowSampleCountPercentiles"] = args.EvaluateLowSampleCountPercentiles
		inputs["evaluationPeriods"] = args.EvaluationPeriods
		inputs["extendedStatistic"] = args.ExtendedStatistic
		inputs["insufficientDataActions"] = args.InsufficientDataActions
		inputs["metricName"] = args.MetricName
		inputs["metricQueries"] = args.MetricQueries
		inputs["namespace"] = args.Namespace
		inputs["okActions"] = args.OkActions
		inputs["period"] = args.Period
		inputs["statistic"] = args.Statistic
		inputs["tags"] = args.Tags
		inputs["threshold"] = args.Threshold
		inputs["treatMissingData"] = args.TreatMissingData
		inputs["unit"] = args.Unit
	}
	var resource MetricAlarm
	err := ctx.RegisterResource("aws:cloudwatch/metricAlarm:MetricAlarm", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMetricAlarm gets an existing MetricAlarm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMetricAlarm(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MetricAlarmState, opts ...pulumi.ResourceOpt) (*MetricAlarm, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["actionsEnabled"] = state.ActionsEnabled
		inputs["alarmActions"] = state.AlarmActions
		inputs["alarmDescription"] = state.AlarmDescription
		inputs["name"] = state.Name
		inputs["arn"] = state.Arn
		inputs["comparisonOperator"] = state.ComparisonOperator
		inputs["datapointsToAlarm"] = state.DatapointsToAlarm
		inputs["dimensions"] = state.Dimensions
		inputs["evaluateLowSampleCountPercentiles"] = state.EvaluateLowSampleCountPercentiles
		inputs["evaluationPeriods"] = state.EvaluationPeriods
		inputs["extendedStatistic"] = state.ExtendedStatistic
		inputs["insufficientDataActions"] = state.InsufficientDataActions
		inputs["metricName"] = state.MetricName
		inputs["metricQueries"] = state.MetricQueries
		inputs["namespace"] = state.Namespace
		inputs["okActions"] = state.OkActions
		inputs["period"] = state.Period
		inputs["statistic"] = state.Statistic
		inputs["tags"] = state.Tags
		inputs["threshold"] = state.Threshold
		inputs["treatMissingData"] = state.TreatMissingData
		inputs["unit"] = state.Unit
	}
	var resource MetricAlarm
	err := ctx.ReadResource("aws:cloudwatch/metricAlarm:MetricAlarm", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *MetricAlarm) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *MetricAlarm) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering MetricAlarm resources.
type MetricAlarmState struct {
	// Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to `true`.
	ActionsEnabled pulumi.BoolInput `pulumi:"actionsEnabled"`
	// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	AlarmActions pulumi.ArrayInput `pulumi:"alarmActions"`
	// The description for the alarm.
	AlarmDescription pulumi.StringInput `pulumi:"alarmDescription"`
	// The descriptive name for the alarm. This name must be unique within the user's AWS account
	Name pulumi.StringInput `pulumi:"name"`
	// The ARN of the cloudwatch metric alarm.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The number of datapoints that must be breaching to trigger the alarm.
	DatapointsToAlarm pulumi.IntInput `pulumi:"datapointsToAlarm"`
	// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Dimensions pulumi.MapInput `pulumi:"dimensions"`
	// Used only for alarms
	// based on percentiles. If you specify `ignore`, the alarm state will not
	// change during periods with too few data points to be statistically significant.
	// If you specify `evaluate` or omit this parameter, the alarm will always be
	// evaluated and possibly change state no matter how many data points are available.
	// The following values are supported: `ignore`, and `evaluate`.
	EvaluateLowSampleCountPercentiles pulumi.StringInput `pulumi:"evaluateLowSampleCountPercentiles"`
	// The number of periods over which data is compared to the specified threshold.
	EvaluationPeriods pulumi.IntInput `pulumi:"evaluationPeriods"`
	// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
	ExtendedStatistic pulumi.StringInput `pulumi:"extendedStatistic"`
	// The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	InsufficientDataActions pulumi.ArrayInput `pulumi:"insufficientDataActions"`
	// The name for this metric.
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Enables you to create an alarm based on a metric math expression. You may specify at most 20.
	MetricQueries pulumi.ArrayInput `pulumi:"metricQueries"`
	// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	OkActions pulumi.ArrayInput `pulumi:"okActions"`
	// The period in seconds over which the specified `stat` is applied.
	Period pulumi.IntInput `pulumi:"period"`
	// The statistic to apply to the alarm's associated metric.
	// Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
	Statistic pulumi.StringInput `pulumi:"statistic"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The value against which the specified statistic is compared.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// Sets how this alarm is to handle missing data points. The following values are supported: `missing`, `ignore`, `breaching` and `notBreaching`. Defaults to `missing`.
	TreatMissingData pulumi.StringInput `pulumi:"treatMissingData"`
	// The unit for this metric.
	Unit pulumi.StringInput `pulumi:"unit"`
}

// The set of arguments for constructing a MetricAlarm resource.
type MetricAlarmArgs struct {
	// Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to `true`.
	ActionsEnabled pulumi.BoolInput `pulumi:"actionsEnabled"`
	// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	AlarmActions pulumi.ArrayInput `pulumi:"alarmActions"`
	// The description for the alarm.
	AlarmDescription pulumi.StringInput `pulumi:"alarmDescription"`
	// The descriptive name for the alarm. This name must be unique within the user's AWS account
	Name pulumi.StringInput `pulumi:"name"`
	// The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The number of datapoints that must be breaching to trigger the alarm.
	DatapointsToAlarm pulumi.IntInput `pulumi:"datapointsToAlarm"`
	// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Dimensions pulumi.MapInput `pulumi:"dimensions"`
	// Used only for alarms
	// based on percentiles. If you specify `ignore`, the alarm state will not
	// change during periods with too few data points to be statistically significant.
	// If you specify `evaluate` or omit this parameter, the alarm will always be
	// evaluated and possibly change state no matter how many data points are available.
	// The following values are supported: `ignore`, and `evaluate`.
	EvaluateLowSampleCountPercentiles pulumi.StringInput `pulumi:"evaluateLowSampleCountPercentiles"`
	// The number of periods over which data is compared to the specified threshold.
	EvaluationPeriods pulumi.IntInput `pulumi:"evaluationPeriods"`
	// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
	ExtendedStatistic pulumi.StringInput `pulumi:"extendedStatistic"`
	// The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	InsufficientDataActions pulumi.ArrayInput `pulumi:"insufficientDataActions"`
	// The name for this metric.
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Enables you to create an alarm based on a metric math expression. You may specify at most 20.
	MetricQueries pulumi.ArrayInput `pulumi:"metricQueries"`
	// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
	OkActions pulumi.ArrayInput `pulumi:"okActions"`
	// The period in seconds over which the specified `stat` is applied.
	Period pulumi.IntInput `pulumi:"period"`
	// The statistic to apply to the alarm's associated metric.
	// Either of the following is supported: `SampleCount`, `Average`, `Sum`, `Minimum`, `Maximum`
	Statistic pulumi.StringInput `pulumi:"statistic"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The value against which the specified statistic is compared.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// Sets how this alarm is to handle missing data points. The following values are supported: `missing`, `ignore`, `breaching` and `notBreaching`. Defaults to `missing`.
	TreatMissingData pulumi.StringInput `pulumi:"treatMissingData"`
	// The unit for this metric.
	Unit pulumi.StringInput `pulumi:"unit"`
}
