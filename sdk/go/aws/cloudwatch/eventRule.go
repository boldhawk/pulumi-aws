// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Event Rule resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_event_rule.html.markdown.
type EventRule struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) of the rule.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The description of the rule.
	Description pulumi.StringOutput `pulumi:"description"`

	// Event pattern
	// described a JSON object.
	// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
	EventPattern pulumi.StringOutput `pulumi:"eventPattern"`

	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`

	// The rule's name. By default generated by this provider.
	Name pulumi.StringOutput `pulumi:"name"`

	// The rule's name. Conflicts with `name`.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`

	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`

	// The scheduling expression.
	// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
	ScheduleExpression pulumi.StringOutput `pulumi:"scheduleExpression"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewEventRule registers a new resource with the given unique name, arguments, and options.
func NewEventRule(ctx *pulumi.Context,
	name string, args *EventRuleArgs, opts ...pulumi.ResourceOpt) (*EventRule, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["description"] = args.Description
		inputs["eventPattern"] = args.EventPattern
		inputs["isEnabled"] = args.IsEnabled
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["roleArn"] = args.RoleArn
		inputs["scheduleExpression"] = args.ScheduleExpression
		inputs["tags"] = args.Tags
	}
	var resource EventRule
	err := ctx.RegisterResource("aws:cloudwatch/eventRule:EventRule", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventRule gets an existing EventRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EventRuleState, opts ...pulumi.ResourceOpt) (*EventRule, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["eventPattern"] = state.EventPattern
		inputs["isEnabled"] = state.IsEnabled
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["roleArn"] = state.RoleArn
		inputs["scheduleExpression"] = state.ScheduleExpression
		inputs["tags"] = state.Tags
	}
	var resource EventRule
	err := ctx.ReadResource("aws:cloudwatch/eventRule:EventRule", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *EventRule) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *EventRule) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering EventRule resources.
type EventRuleState struct {
	// The Amazon Resource Name (ARN) of the rule.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Event pattern
	// described a JSON object.
	// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
	EventPattern pulumi.StringInput `pulumi:"eventPattern"`
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The rule's name. By default generated by this provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The rule's name. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The scheduling expression.
	// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a EventRule resource.
type EventRuleArgs struct {
	// The description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Event pattern
	// described a JSON object.
	// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
	EventPattern pulumi.StringInput `pulumi:"eventPattern"`
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The rule's name. By default generated by this provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The rule's name. Conflicts with `name`.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The scheduling expression.
	// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}
