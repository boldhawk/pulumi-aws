// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Log Metric Filter resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_log_metric_filter.html.markdown.
type LogMetricFilter struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The name of the log group to associate the metric filter with.
	LogGroupName pulumi.StringOutput `pulumi:"logGroupName"`

	// A block defining collection of information
	// needed to define how metric data gets emitted. See below.
	MetricTransformation pulumi.AnyOutput `pulumi:"metricTransformation"`

	// A name for the metric filter.
	Name pulumi.StringOutput `pulumi:"name"`

	// A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
	// for extracting metric data out of ingested log events.
	Pattern pulumi.StringOutput `pulumi:"pattern"`
}

// NewLogMetricFilter registers a new resource with the given unique name, arguments, and options.
func NewLogMetricFilter(ctx *pulumi.Context,
	name string, args *LogMetricFilterArgs, opts ...pulumi.ResourceOpt) (*LogMetricFilter, error) {
	if args == nil || args.LogGroupName == nil {
		return nil, errors.New("missing required argument 'LogGroupName'")
	}
	if args == nil || args.MetricTransformation == nil {
		return nil, errors.New("missing required argument 'MetricTransformation'")
	}
	if args == nil || args.Pattern == nil {
		return nil, errors.New("missing required argument 'Pattern'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["logGroupName"] = args.LogGroupName
		inputs["metricTransformation"] = args.MetricTransformation
		inputs["name"] = args.Name
		inputs["pattern"] = args.Pattern
	}
	var resource LogMetricFilter
	err := ctx.RegisterResource("aws:cloudwatch/logMetricFilter:LogMetricFilter", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogMetricFilter gets an existing LogMetricFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogMetricFilter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LogMetricFilterState, opts ...pulumi.ResourceOpt) (*LogMetricFilter, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["logGroupName"] = state.LogGroupName
		inputs["metricTransformation"] = state.MetricTransformation
		inputs["name"] = state.Name
		inputs["pattern"] = state.Pattern
	}
	var resource LogMetricFilter
	err := ctx.ReadResource("aws:cloudwatch/logMetricFilter:LogMetricFilter", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *LogMetricFilter) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *LogMetricFilter) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering LogMetricFilter resources.
type LogMetricFilterState struct {
	// The name of the log group to associate the metric filter with.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// A block defining collection of information
	// needed to define how metric data gets emitted. See below.
	MetricTransformation pulumi.AnyInput `pulumi:"metricTransformation"`
	// A name for the metric filter.
	Name pulumi.StringInput `pulumi:"name"`
	// A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
	// for extracting metric data out of ingested log events.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

// The set of arguments for constructing a LogMetricFilter resource.
type LogMetricFilterArgs struct {
	// The name of the log group to associate the metric filter with.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// A block defining collection of information
	// needed to define how metric data gets emitted. See below.
	MetricTransformation pulumi.AnyInput `pulumi:"metricTransformation"`
	// A name for the metric filter.
	Name pulumi.StringInput `pulumi:"name"`
	// A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)
	// for extracting metric data out of ingested log events.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}
