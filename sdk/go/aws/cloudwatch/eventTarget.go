// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Event Target resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudwatch_event_target.html.markdown.
type EventTarget struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) associated of the target.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumi.AnyOutput `pulumi:"batchTarget"`

	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumi.AnyOutput `pulumi:"ecsTarget"`

	// Valid JSON text passed to the target.
	Input pulumi.StringOutput `pulumi:"input"`

	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/)
	// that is used for extracting part of the matched event when passing it to the target.
	InputPath pulumi.StringOutput `pulumi:"inputPath"`

	// Parameters used when you are providing a custom input to a target based on certain event data.
	InputTransformer pulumi.AnyOutput `pulumi:"inputTransformer"`

	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumi.AnyOutput `pulumi:"kinesisTarget"`

	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`

	// The name of the rule you want to add targets to.
	Rule pulumi.StringOutput `pulumi:"rule"`

	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumi.ArrayOutput `pulumi:"runCommandTargets"`

	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumi.AnyOutput `pulumi:"sqsTarget"`

	// The unique target assignment ID.  If missing, will generate a random, unique id.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
}

// NewEventTarget registers a new resource with the given unique name, arguments, and options.
func NewEventTarget(ctx *pulumi.Context,
	name string, args *EventTargetArgs, opts ...pulumi.ResourceOpt) (*EventTarget, error) {
	if args == nil || args.Arn == nil {
		return nil, errors.New("missing required argument 'Arn'")
	}
	if args == nil || args.Rule == nil {
		return nil, errors.New("missing required argument 'Rule'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["targetId"] = pulumi.Any()
	if args != nil {
		inputs["arn"] = args.Arn
		inputs["batchTarget"] = args.BatchTarget
		inputs["ecsTarget"] = args.EcsTarget
		inputs["input"] = args.Input
		inputs["inputPath"] = args.InputPath
		inputs["inputTransformer"] = args.InputTransformer
		inputs["kinesisTarget"] = args.KinesisTarget
		inputs["roleArn"] = args.RoleArn
		inputs["rule"] = args.Rule
		inputs["runCommandTargets"] = args.RunCommandTargets
		inputs["sqsTarget"] = args.SqsTarget
		inputs["targetId"] = args.TargetId
	}
	var resource EventTarget
	err := ctx.RegisterResource("aws:cloudwatch/eventTarget:EventTarget", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventTarget gets an existing EventTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventTarget(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EventTargetState, opts ...pulumi.ResourceOpt) (*EventTarget, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["batchTarget"] = state.BatchTarget
		inputs["ecsTarget"] = state.EcsTarget
		inputs["input"] = state.Input
		inputs["inputPath"] = state.InputPath
		inputs["inputTransformer"] = state.InputTransformer
		inputs["kinesisTarget"] = state.KinesisTarget
		inputs["roleArn"] = state.RoleArn
		inputs["rule"] = state.Rule
		inputs["runCommandTargets"] = state.RunCommandTargets
		inputs["sqsTarget"] = state.SqsTarget
		inputs["targetId"] = state.TargetId
	}
	var resource EventTarget
	err := ctx.ReadResource("aws:cloudwatch/eventTarget:EventTarget", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *EventTarget) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *EventTarget) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering EventTarget resources.
type EventTargetState struct {
	// The Amazon Resource Name (ARN) associated of the target.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumi.AnyInput `pulumi:"batchTarget"`
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumi.AnyInput `pulumi:"ecsTarget"`
	// Valid JSON text passed to the target.
	Input pulumi.StringInput `pulumi:"input"`
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/)
	// that is used for extracting part of the matched event when passing it to the target.
	InputPath pulumi.StringInput `pulumi:"inputPath"`
	// Parameters used when you are providing a custom input to a target based on certain event data.
	InputTransformer pulumi.AnyInput `pulumi:"inputTransformer"`
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumi.AnyInput `pulumi:"kinesisTarget"`
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the rule you want to add targets to.
	Rule pulumi.StringInput `pulumi:"rule"`
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumi.ArrayInput `pulumi:"runCommandTargets"`
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumi.AnyInput `pulumi:"sqsTarget"`
	// The unique target assignment ID.  If missing, will generate a random, unique id.
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

// The set of arguments for constructing a EventTarget resource.
type EventTargetArgs struct {
	// The Amazon Resource Name (ARN) associated of the target.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumi.AnyInput `pulumi:"batchTarget"`
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumi.AnyInput `pulumi:"ecsTarget"`
	// Valid JSON text passed to the target.
	Input pulumi.StringInput `pulumi:"input"`
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/)
	// that is used for extracting part of the matched event when passing it to the target.
	InputPath pulumi.StringInput `pulumi:"inputPath"`
	// Parameters used when you are providing a custom input to a target based on certain event data.
	InputTransformer pulumi.AnyInput `pulumi:"inputTransformer"`
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumi.AnyInput `pulumi:"kinesisTarget"`
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the rule you want to add targets to.
	Rule pulumi.StringInput `pulumi:"rule"`
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumi.ArrayInput `pulumi:"runCommandTargets"`
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumi.AnyInput `pulumi:"sqsTarget"`
	// The unique target assignment ID.  If missing, will generate a random, unique id.
	TargetId pulumi.StringInput `pulumi:"targetId"`
}
