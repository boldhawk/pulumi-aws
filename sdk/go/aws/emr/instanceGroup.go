// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Elastic MapReduce Cluster Instance Group configuration.
// See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/emr/) for more information.
// 
// > **NOTE:** At this time, Instance Groups cannot be destroyed through the API nor
// web interface. Instance Groups are destroyed when the EMR Cluster is destroyed.
// this provider will resize any Instance Group to zero when destroying the resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/emr_instance_group.html.markdown.
type InstanceGroup struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumi.StringOutput `pulumi:"autoscalingPolicy"`

	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumi.StringOutput `pulumi:"bidPrice"`

	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`

	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	ConfigurationsJson pulumi.StringOutput `pulumi:"configurationsJson"`

	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumi.ArrayOutput `pulumi:"ebsConfigs"`

	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumi.BoolOutput `pulumi:"ebsOptimized"`

	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumi.IntOutput `pulumi:"instanceCount"`

	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`

	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	RunningInstanceCount pulumi.IntOutput `pulumi:"runningInstanceCount"`

	Status pulumi.StringOutput `pulumi:"status"`
}

// NewInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroup(ctx *pulumi.Context,
	name string, args *InstanceGroupArgs, opts ...pulumi.ResourceOpt) (*InstanceGroup, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["autoscalingPolicy"] = args.AutoscalingPolicy
		inputs["bidPrice"] = args.BidPrice
		inputs["clusterId"] = args.ClusterId
		inputs["configurationsJson"] = args.ConfigurationsJson
		inputs["ebsConfigs"] = args.EbsConfigs
		inputs["ebsOptimized"] = args.EbsOptimized
		inputs["instanceCount"] = args.InstanceCount
		inputs["instanceType"] = args.InstanceType
		inputs["name"] = args.Name
	}
	var resource InstanceGroup
	err := ctx.RegisterResource("aws:emr/instanceGroup:InstanceGroup", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroup gets an existing InstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceGroupState, opts ...pulumi.ResourceOpt) (*InstanceGroup, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["autoscalingPolicy"] = state.AutoscalingPolicy
		inputs["bidPrice"] = state.BidPrice
		inputs["clusterId"] = state.ClusterId
		inputs["configurationsJson"] = state.ConfigurationsJson
		inputs["ebsConfigs"] = state.EbsConfigs
		inputs["ebsOptimized"] = state.EbsOptimized
		inputs["instanceCount"] = state.InstanceCount
		inputs["instanceType"] = state.InstanceType
		inputs["name"] = state.Name
		inputs["runningInstanceCount"] = state.RunningInstanceCount
		inputs["status"] = state.Status
	}
	var resource InstanceGroup
	err := ctx.ReadResource("aws:emr/instanceGroup:InstanceGroup", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *InstanceGroup) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *InstanceGroup) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering InstanceGroup resources.
type InstanceGroupState struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumi.StringInput `pulumi:"autoscalingPolicy"`
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumi.StringInput `pulumi:"bidPrice"`
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	ConfigurationsJson pulumi.StringInput `pulumi:"configurationsJson"`
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumi.ArrayInput `pulumi:"ebsConfigs"`
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumi.BoolInput `pulumi:"ebsOptimized"`
	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	RunningInstanceCount pulumi.IntInput `pulumi:"runningInstanceCount"`
	Status pulumi.StringInput `pulumi:"status"`
}

// The set of arguments for constructing a InstanceGroup resource.
type InstanceGroupArgs struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumi.StringInput `pulumi:"autoscalingPolicy"`
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumi.StringInput `pulumi:"bidPrice"`
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	ConfigurationsJson pulumi.StringInput `pulumi:"configurationsJson"`
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumi.ArrayInput `pulumi:"ebsConfigs"`
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumi.BoolInput `pulumi:"ebsOptimized"`
	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}
