// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Direct Connect Gateway.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/dx_gateway.html.markdown.
type Gateway struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumi.StringOutput `pulumi:"amazonSideAsn"`

	// The name of the connection.
	Name pulumi.StringOutput `pulumi:"name"`

	// AWS Account ID of the gateway.
	OwnerAccountId pulumi.StringOutput `pulumi:"ownerAccountId"`
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOpt) (*Gateway, error) {
	if args == nil || args.AmazonSideAsn == nil {
		return nil, errors.New("missing required argument 'AmazonSideAsn'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["amazonSideAsn"] = args.AmazonSideAsn
		inputs["name"] = args.Name
	}
	var resource Gateway
	err := ctx.RegisterResource("aws:directconnect/gateway:Gateway", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GatewayState, opts ...pulumi.ResourceOpt) (*Gateway, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["amazonSideAsn"] = state.AmazonSideAsn
		inputs["name"] = state.Name
		inputs["ownerAccountId"] = state.OwnerAccountId
	}
	var resource Gateway
	err := ctx.ReadResource("aws:directconnect/gateway:Gateway", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Gateway) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Gateway) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Gateway resources.
type GatewayState struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumi.StringInput `pulumi:"amazonSideAsn"`
	// The name of the connection.
	Name pulumi.StringInput `pulumi:"name"`
	// AWS Account ID of the gateway.
	OwnerAccountId pulumi.StringInput `pulumi:"ownerAccountId"`
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumi.StringInput `pulumi:"amazonSideAsn"`
	// The name of the connection.
	Name pulumi.StringInput `pulumi:"name"`
}
