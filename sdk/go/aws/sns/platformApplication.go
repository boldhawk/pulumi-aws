// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SNS platform application resource
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_platform_application.html.markdown.
type PlatformApplication struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ARN of the SNS platform application
	Arn pulumi.StringOutput `pulumi:"arn"`

	// SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringOutput `pulumi:"eventDeliveryFailureTopicArn"`

	// SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringOutput `pulumi:"eventEndpointCreatedTopicArn"`

	// SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringOutput `pulumi:"eventEndpointDeletedTopicArn"`

	// SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringOutput `pulumi:"eventEndpointUpdatedTopicArn"`

	// The IAM role permitted to receive failure feedback for this application.
	FailureFeedbackRoleArn pulumi.StringOutput `pulumi:"failureFeedbackRoleArn"`

	// The friendly name for the SNS platform application
	Name pulumi.StringOutput `pulumi:"name"`

	// The platform that the app is registered with. See [Platform][1] for supported platforms.
	Platform pulumi.StringOutput `pulumi:"platform"`

	// Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringOutput `pulumi:"platformCredential"`

	// Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringOutput `pulumi:"platformPrincipal"`

	// The IAM role permitted to receive success feedback for this application.
	SuccessFeedbackRoleArn pulumi.StringOutput `pulumi:"successFeedbackRoleArn"`

	// The percentage of success to sample (0-100)
	SuccessFeedbackSampleRate pulumi.StringOutput `pulumi:"successFeedbackSampleRate"`
}

// NewPlatformApplication registers a new resource with the given unique name, arguments, and options.
func NewPlatformApplication(ctx *pulumi.Context,
	name string, args *PlatformApplicationArgs, opts ...pulumi.ResourceOpt) (*PlatformApplication, error) {
	if args == nil || args.Platform == nil {
		return nil, errors.New("missing required argument 'Platform'")
	}
	if args == nil || args.PlatformCredential == nil {
		return nil, errors.New("missing required argument 'PlatformCredential'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["eventDeliveryFailureTopicArn"] = args.EventDeliveryFailureTopicArn
		inputs["eventEndpointCreatedTopicArn"] = args.EventEndpointCreatedTopicArn
		inputs["eventEndpointDeletedTopicArn"] = args.EventEndpointDeletedTopicArn
		inputs["eventEndpointUpdatedTopicArn"] = args.EventEndpointUpdatedTopicArn
		inputs["failureFeedbackRoleArn"] = args.FailureFeedbackRoleArn
		inputs["name"] = args.Name
		inputs["platform"] = args.Platform
		inputs["platformCredential"] = args.PlatformCredential
		inputs["platformPrincipal"] = args.PlatformPrincipal
		inputs["successFeedbackRoleArn"] = args.SuccessFeedbackRoleArn
		inputs["successFeedbackSampleRate"] = args.SuccessFeedbackSampleRate
	}
	var resource PlatformApplication
	err := ctx.RegisterResource("aws:sns/platformApplication:PlatformApplication", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlatformApplication gets an existing PlatformApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlatformApplication(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PlatformApplicationState, opts ...pulumi.ResourceOpt) (*PlatformApplication, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["eventDeliveryFailureTopicArn"] = state.EventDeliveryFailureTopicArn
		inputs["eventEndpointCreatedTopicArn"] = state.EventEndpointCreatedTopicArn
		inputs["eventEndpointDeletedTopicArn"] = state.EventEndpointDeletedTopicArn
		inputs["eventEndpointUpdatedTopicArn"] = state.EventEndpointUpdatedTopicArn
		inputs["failureFeedbackRoleArn"] = state.FailureFeedbackRoleArn
		inputs["name"] = state.Name
		inputs["platform"] = state.Platform
		inputs["platformCredential"] = state.PlatformCredential
		inputs["platformPrincipal"] = state.PlatformPrincipal
		inputs["successFeedbackRoleArn"] = state.SuccessFeedbackRoleArn
		inputs["successFeedbackSampleRate"] = state.SuccessFeedbackSampleRate
	}
	var resource PlatformApplication
	err := ctx.ReadResource("aws:sns/platformApplication:PlatformApplication", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *PlatformApplication) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *PlatformApplication) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering PlatformApplication resources.
type PlatformApplicationState struct {
	// The ARN of the SNS platform application
	Arn pulumi.StringInput `pulumi:"arn"`
	// SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringInput `pulumi:"eventDeliveryFailureTopicArn"`
	// SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringInput `pulumi:"eventEndpointCreatedTopicArn"`
	// SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringInput `pulumi:"eventEndpointDeletedTopicArn"`
	// SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringInput `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role permitted to receive failure feedback for this application.
	FailureFeedbackRoleArn pulumi.StringInput `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name pulumi.StringInput `pulumi:"name"`
	// The platform that the app is registered with. See [Platform][1] for supported platforms.
	Platform pulumi.StringInput `pulumi:"platform"`
	// Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringInput `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringInput `pulumi:"platformPrincipal"`
	// The IAM role permitted to receive success feedback for this application.
	SuccessFeedbackRoleArn pulumi.StringInput `pulumi:"successFeedbackRoleArn"`
	// The percentage of success to sample (0-100)
	SuccessFeedbackSampleRate pulumi.StringInput `pulumi:"successFeedbackSampleRate"`
}

// The set of arguments for constructing a PlatformApplication resource.
type PlatformApplicationArgs struct {
	// SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringInput `pulumi:"eventDeliveryFailureTopicArn"`
	// SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringInput `pulumi:"eventEndpointCreatedTopicArn"`
	// SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringInput `pulumi:"eventEndpointDeletedTopicArn"`
	// SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringInput `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role permitted to receive failure feedback for this application.
	FailureFeedbackRoleArn pulumi.StringInput `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name pulumi.StringInput `pulumi:"name"`
	// The platform that the app is registered with. See [Platform][1] for supported platforms.
	Platform pulumi.StringInput `pulumi:"platform"`
	// Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringInput `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringInput `pulumi:"platformPrincipal"`
	// The IAM role permitted to receive success feedback for this application.
	SuccessFeedbackRoleArn pulumi.StringInput `pulumi:"successFeedbackRoleArn"`
	// The percentage of success to sample (0-100)
	SuccessFeedbackSampleRate pulumi.StringInput `pulumi:"successFeedbackSampleRate"`
}
