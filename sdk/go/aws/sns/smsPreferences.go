// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a way to set SNS SMS preferences.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sns_sms_preferences.html.markdown.
type SmsPreferences struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumi.StringOutput `pulumi:"defaultSenderId"`

	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumi.StringOutput `pulumi:"defaultSmsType"`

	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumi.StringOutput `pulumi:"deliveryStatusIamRoleArn"`

	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumi.StringOutput `pulumi:"deliveryStatusSuccessSamplingRate"`

	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumi.StringOutput `pulumi:"monthlySpendLimit"`

	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumi.StringOutput `pulumi:"usageReportS3Bucket"`
}

// NewSmsPreferences registers a new resource with the given unique name, arguments, and options.
func NewSmsPreferences(ctx *pulumi.Context,
	name string, args *SmsPreferencesArgs, opts ...pulumi.ResourceOpt) (*SmsPreferences, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["defaultSenderId"] = args.DefaultSenderId
		inputs["defaultSmsType"] = args.DefaultSmsType
		inputs["deliveryStatusIamRoleArn"] = args.DeliveryStatusIamRoleArn
		inputs["deliveryStatusSuccessSamplingRate"] = args.DeliveryStatusSuccessSamplingRate
		inputs["monthlySpendLimit"] = args.MonthlySpendLimit
		inputs["usageReportS3Bucket"] = args.UsageReportS3Bucket
	}
	var resource SmsPreferences
	err := ctx.RegisterResource("aws:sns/smsPreferences:SmsPreferences", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmsPreferences gets an existing SmsPreferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmsPreferences(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SmsPreferencesState, opts ...pulumi.ResourceOpt) (*SmsPreferences, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["defaultSenderId"] = state.DefaultSenderId
		inputs["defaultSmsType"] = state.DefaultSmsType
		inputs["deliveryStatusIamRoleArn"] = state.DeliveryStatusIamRoleArn
		inputs["deliveryStatusSuccessSamplingRate"] = state.DeliveryStatusSuccessSamplingRate
		inputs["monthlySpendLimit"] = state.MonthlySpendLimit
		inputs["usageReportS3Bucket"] = state.UsageReportS3Bucket
	}
	var resource SmsPreferences
	err := ctx.ReadResource("aws:sns/smsPreferences:SmsPreferences", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *SmsPreferences) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *SmsPreferences) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering SmsPreferences resources.
type SmsPreferencesState struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumi.StringInput `pulumi:"defaultSenderId"`
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumi.StringInput `pulumi:"defaultSmsType"`
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumi.StringInput `pulumi:"deliveryStatusIamRoleArn"`
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumi.StringInput `pulumi:"deliveryStatusSuccessSamplingRate"`
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumi.StringInput `pulumi:"monthlySpendLimit"`
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumi.StringInput `pulumi:"usageReportS3Bucket"`
}

// The set of arguments for constructing a SmsPreferences resource.
type SmsPreferencesArgs struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumi.StringInput `pulumi:"defaultSenderId"`
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumi.StringInput `pulumi:"defaultSmsType"`
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumi.StringInput `pulumi:"deliveryStatusIamRoleArn"`
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumi.StringInput `pulumi:"deliveryStatusSuccessSamplingRate"`
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumi.StringInput `pulumi:"monthlySpendLimit"`
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumi.StringInput `pulumi:"usageReportS3Bucket"`
}
