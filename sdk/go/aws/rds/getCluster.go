// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a RDS cluster.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/rds_cluster.html.markdown.
func LookupCluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["clusterIdentifier"] = args.ClusterIdentifier
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:rds/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetClusterResult{
		Arn: outputs["arn"],
		AvailabilityZones: outputs["availabilityZones"],
		BackupRetentionPeriod: outputs["backupRetentionPeriod"],
		ClusterIdentifier: outputs["clusterIdentifier"],
		ClusterMembers: outputs["clusterMembers"],
		ClusterResourceId: outputs["clusterResourceId"],
		DatabaseName: outputs["databaseName"],
		DbClusterParameterGroupName: outputs["dbClusterParameterGroupName"],
		DbSubnetGroupName: outputs["dbSubnetGroupName"],
		EnabledCloudwatchLogsExports: outputs["enabledCloudwatchLogsExports"],
		Endpoint: outputs["endpoint"],
		Engine: outputs["engine"],
		EngineVersion: outputs["engineVersion"],
		FinalSnapshotIdentifier: outputs["finalSnapshotIdentifier"],
		HostedZoneId: outputs["hostedZoneId"],
		IamDatabaseAuthenticationEnabled: outputs["iamDatabaseAuthenticationEnabled"],
		IamRoles: outputs["iamRoles"],
		KmsKeyId: outputs["kmsKeyId"],
		MasterUsername: outputs["masterUsername"],
		Port: outputs["port"],
		PreferredBackupWindow: outputs["preferredBackupWindow"],
		PreferredMaintenanceWindow: outputs["preferredMaintenanceWindow"],
		ReaderEndpoint: outputs["readerEndpoint"],
		ReplicationSourceIdentifier: outputs["replicationSourceIdentifier"],
		StorageEncrypted: outputs["storageEncrypted"],
		Tags: outputs["tags"],
		VpcSecurityGroupIds: outputs["vpcSecurityGroupIds"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// The cluster identifier of the RDS cluster.
	ClusterIdentifier pulumi.StringInput `pulumi:"clusterIdentifier"`
	Tags pulumi.MapInput `pulumi:"tags"`
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	Arn string `pulumi:"arn"`
	AvailabilityZones []interface{} `pulumi:"availabilityZones"`
	BackupRetentionPeriod int `pulumi:"backupRetentionPeriod"`
	ClusterIdentifier string `pulumi:"clusterIdentifier"`
	ClusterMembers []interface{} `pulumi:"clusterMembers"`
	ClusterResourceId string `pulumi:"clusterResourceId"`
	DatabaseName string `pulumi:"databaseName"`
	DbClusterParameterGroupName string `pulumi:"dbClusterParameterGroupName"`
	DbSubnetGroupName string `pulumi:"dbSubnetGroupName"`
	EnabledCloudwatchLogsExports []interface{} `pulumi:"enabledCloudwatchLogsExports"`
	Endpoint string `pulumi:"endpoint"`
	Engine string `pulumi:"engine"`
	EngineVersion string `pulumi:"engineVersion"`
	FinalSnapshotIdentifier string `pulumi:"finalSnapshotIdentifier"`
	HostedZoneId string `pulumi:"hostedZoneId"`
	IamDatabaseAuthenticationEnabled bool `pulumi:"iamDatabaseAuthenticationEnabled"`
	IamRoles []interface{} `pulumi:"iamRoles"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	MasterUsername string `pulumi:"masterUsername"`
	Port int `pulumi:"port"`
	PreferredBackupWindow string `pulumi:"preferredBackupWindow"`
	PreferredMaintenanceWindow string `pulumi:"preferredMaintenanceWindow"`
	ReaderEndpoint string `pulumi:"readerEndpoint"`
	ReplicationSourceIdentifier string `pulumi:"replicationSourceIdentifier"`
	StorageEncrypted bool `pulumi:"storageEncrypted"`
	Tags map[string]interface{} `pulumi:"tags"`
	VpcSecurityGroupIds []interface{} `pulumi:"vpcSecurityGroupIds"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
