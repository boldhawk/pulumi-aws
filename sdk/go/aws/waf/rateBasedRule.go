// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Rate Based Rule Resource
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/waf_rate_based_rule.html.markdown.
type RateBasedRule struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumi.StringOutput `pulumi:"metricName"`

	// The name or description of the rule.
	Name pulumi.StringOutput `pulumi:"name"`

	// The objects to include in a rule (documented below).
	Predicates pulumi.ArrayOutput `pulumi:"predicates"`

	// Valid value is IP.
	RateKey pulumi.StringOutput `pulumi:"rateKey"`

	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.
	RateLimit pulumi.IntOutput `pulumi:"rateLimit"`
}

// NewRateBasedRule registers a new resource with the given unique name, arguments, and options.
func NewRateBasedRule(ctx *pulumi.Context,
	name string, args *RateBasedRuleArgs, opts ...pulumi.ResourceOpt) (*RateBasedRule, error) {
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	if args == nil || args.RateKey == nil {
		return nil, errors.New("missing required argument 'RateKey'")
	}
	if args == nil || args.RateLimit == nil {
		return nil, errors.New("missing required argument 'RateLimit'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["metricName"] = args.MetricName
		inputs["name"] = args.Name
		inputs["predicates"] = args.Predicates
		inputs["rateKey"] = args.RateKey
		inputs["rateLimit"] = args.RateLimit
	}
	var resource RateBasedRule
	err := ctx.RegisterResource("aws:waf/rateBasedRule:RateBasedRule", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRateBasedRule gets an existing RateBasedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateBasedRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RateBasedRuleState, opts ...pulumi.ResourceOpt) (*RateBasedRule, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["metricName"] = state.MetricName
		inputs["name"] = state.Name
		inputs["predicates"] = state.Predicates
		inputs["rateKey"] = state.RateKey
		inputs["rateLimit"] = state.RateLimit
	}
	var resource RateBasedRule
	err := ctx.ReadResource("aws:waf/rateBasedRule:RateBasedRule", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *RateBasedRule) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *RateBasedRule) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering RateBasedRule resources.
type RateBasedRuleState struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The name or description of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The objects to include in a rule (documented below).
	Predicates pulumi.ArrayInput `pulumi:"predicates"`
	// Valid value is IP.
	RateKey pulumi.StringInput `pulumi:"rateKey"`
	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.
	RateLimit pulumi.IntInput `pulumi:"rateLimit"`
}

// The set of arguments for constructing a RateBasedRule resource.
type RateBasedRuleArgs struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The name or description of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The objects to include in a rule (documented below).
	Predicates pulumi.ArrayInput `pulumi:"predicates"`
	// Valid value is IP.
	RateKey pulumi.StringInput `pulumi:"rateKey"`
	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.
	RateLimit pulumi.IntInput `pulumi:"rateLimit"`
}
