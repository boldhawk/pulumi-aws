// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elastictranscoder

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Elastic Transcoder pipeline resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elastictranscoder_pipeline.html.markdown.
type Pipeline struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	Arn pulumi.StringOutput `pulumi:"arn"`

	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringOutput `pulumi:"awsKmsKeyArn"`

	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumi.AnyOutput `pulumi:"contentConfig"`

	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumi.ArrayOutput `pulumi:"contentConfigPermissions"`

	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringOutput `pulumi:"inputBucket"`

	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringOutput `pulumi:"name"`

	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumi.AnyOutput `pulumi:"notifications"`

	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringOutput `pulumi:"outputBucket"`

	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringOutput `pulumi:"role"`

	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumi.AnyOutput `pulumi:"thumbnailConfig"`

	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions pulumi.ArrayOutput `pulumi:"thumbnailConfigPermissions"`
}

// NewPipeline registers a new resource with the given unique name, arguments, and options.
func NewPipeline(ctx *pulumi.Context,
	name string, args *PipelineArgs, opts ...pulumi.ResourceOpt) (*Pipeline, error) {
	if args == nil || args.InputBucket == nil {
		return nil, errors.New("missing required argument 'InputBucket'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["awsKmsKeyArn"] = args.AwsKmsKeyArn
		inputs["contentConfig"] = args.ContentConfig
		inputs["contentConfigPermissions"] = args.ContentConfigPermissions
		inputs["inputBucket"] = args.InputBucket
		inputs["name"] = args.Name
		inputs["notifications"] = args.Notifications
		inputs["outputBucket"] = args.OutputBucket
		inputs["role"] = args.Role
		inputs["thumbnailConfig"] = args.ThumbnailConfig
		inputs["thumbnailConfigPermissions"] = args.ThumbnailConfigPermissions
	}
	var resource Pipeline
	err := ctx.RegisterResource("aws:elastictranscoder/pipeline:Pipeline", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipeline gets an existing Pipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipeline(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PipelineState, opts ...pulumi.ResourceOpt) (*Pipeline, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["awsKmsKeyArn"] = state.AwsKmsKeyArn
		inputs["contentConfig"] = state.ContentConfig
		inputs["contentConfigPermissions"] = state.ContentConfigPermissions
		inputs["inputBucket"] = state.InputBucket
		inputs["name"] = state.Name
		inputs["notifications"] = state.Notifications
		inputs["outputBucket"] = state.OutputBucket
		inputs["role"] = state.Role
		inputs["thumbnailConfig"] = state.ThumbnailConfig
		inputs["thumbnailConfigPermissions"] = state.ThumbnailConfigPermissions
	}
	var resource Pipeline
	err := ctx.ReadResource("aws:elastictranscoder/pipeline:Pipeline", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Pipeline) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Pipeline) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Pipeline resources.
type PipelineState struct {
	Arn pulumi.StringInput `pulumi:"arn"`
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringInput `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumi.AnyInput `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumi.ArrayInput `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringInput `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringInput `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumi.AnyInput `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringInput `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringInput `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumi.AnyInput `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions pulumi.ArrayInput `pulumi:"thumbnailConfigPermissions"`
}

// The set of arguments for constructing a Pipeline resource.
type PipelineArgs struct {
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringInput `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumi.AnyInput `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumi.ArrayInput `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringInput `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringInput `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumi.AnyInput `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringInput `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringInput `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumi.AnyInput `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions pulumi.ArrayInput `pulumi:"thumbnailConfigPermissions"`
}
