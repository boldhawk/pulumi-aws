// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a lifecycle configuration for SageMaker Notebook Instances.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/sagemaker_notebook_instance_lifecycle_configuration.html.markdown.
type NotebookInstanceLifecycleConfiguration struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`

	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumi.StringOutput `pulumi:"name"`

	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumi.StringOutput `pulumi:"onCreate"`

	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumi.StringOutput `pulumi:"onStart"`
}

// NewNotebookInstanceLifecycleConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, args *NotebookInstanceLifecycleConfigurationArgs, opts ...pulumi.ResourceOpt) (*NotebookInstanceLifecycleConfiguration, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["name"] = args.Name
		inputs["onCreate"] = args.OnCreate
		inputs["onStart"] = args.OnStart
	}
	var resource NotebookInstanceLifecycleConfiguration
	err := ctx.RegisterResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebookInstanceLifecycleConfiguration gets an existing NotebookInstanceLifecycleConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NotebookInstanceLifecycleConfigurationState, opts ...pulumi.ResourceOpt) (*NotebookInstanceLifecycleConfiguration, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["name"] = state.Name
		inputs["onCreate"] = state.OnCreate
		inputs["onStart"] = state.OnStart
	}
	var resource NotebookInstanceLifecycleConfiguration
	err := ctx.ReadResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *NotebookInstanceLifecycleConfiguration) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *NotebookInstanceLifecycleConfiguration) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering NotebookInstanceLifecycleConfiguration resources.
type NotebookInstanceLifecycleConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumi.StringInput `pulumi:"onCreate"`
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumi.StringInput `pulumi:"onStart"`
}

// The set of arguments for constructing a NotebookInstanceLifecycleConfiguration resource.
type NotebookInstanceLifecycleConfigurationArgs struct {
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumi.StringInput `pulumi:"name"`
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumi.StringInput `pulumi:"onCreate"`
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumi.StringInput `pulumi:"onStart"`
}
