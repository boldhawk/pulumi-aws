// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Associates an SSM Document to an instance or EC2 tag.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ssm_association.html.markdown.
type Association struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The ID of the SSM association.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`

	// The descriptive name for the association.
	AssociationName pulumi.StringOutput `pulumi:"associationName"`

	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringOutput `pulumi:"complianceSeverity"`

	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringOutput `pulumi:"documentVersion"`

	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`

	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringOutput `pulumi:"maxConcurrency"`

	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxErrors pulumi.StringOutput `pulumi:"maxErrors"`

	// The name of the SSM document to apply.
	Name pulumi.StringOutput `pulumi:"name"`

	// An output location block. Output Location is documented below.
	OutputLocation pulumi.AnyOutput `pulumi:"outputLocation"`

	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.MapOutput `pulumi:"parameters"`

	// A cron expression when the association will be applied to the target(s).
	ScheduleExpression pulumi.StringOutput `pulumi:"scheduleExpression"`

	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumi.ArrayOutput `pulumi:"targets"`
}

// NewAssociation registers a new resource with the given unique name, arguments, and options.
func NewAssociation(ctx *pulumi.Context,
	name string, args *AssociationArgs, opts ...pulumi.ResourceOpt) (*Association, error) {
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["associationName"] = args.AssociationName
		inputs["complianceSeverity"] = args.ComplianceSeverity
		inputs["documentVersion"] = args.DocumentVersion
		inputs["instanceId"] = args.InstanceId
		inputs["maxConcurrency"] = args.MaxConcurrency
		inputs["maxErrors"] = args.MaxErrors
		inputs["name"] = args.Name
		inputs["outputLocation"] = args.OutputLocation
		inputs["parameters"] = args.Parameters
		inputs["scheduleExpression"] = args.ScheduleExpression
		inputs["targets"] = args.Targets
	}
	var resource Association
	err := ctx.RegisterResource("aws:ssm/association:Association", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssociation gets an existing Association resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AssociationState, opts ...pulumi.ResourceOpt) (*Association, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["associationId"] = state.AssociationId
		inputs["associationName"] = state.AssociationName
		inputs["complianceSeverity"] = state.ComplianceSeverity
		inputs["documentVersion"] = state.DocumentVersion
		inputs["instanceId"] = state.InstanceId
		inputs["maxConcurrency"] = state.MaxConcurrency
		inputs["maxErrors"] = state.MaxErrors
		inputs["name"] = state.Name
		inputs["outputLocation"] = state.OutputLocation
		inputs["parameters"] = state.Parameters
		inputs["scheduleExpression"] = state.ScheduleExpression
		inputs["targets"] = state.Targets
	}
	var resource Association
	err := ctx.ReadResource("aws:ssm/association:Association", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Association) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Association) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Association resources.
type AssociationState struct {
	// The ID of the SSM association.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The descriptive name for the association.
	AssociationName pulumi.StringInput `pulumi:"associationName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringInput `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringInput `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringInput `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxErrors pulumi.StringInput `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name pulumi.StringInput `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation pulumi.AnyInput `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// A cron expression when the association will be applied to the target(s).
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumi.ArrayInput `pulumi:"targets"`
}

// The set of arguments for constructing a Association resource.
type AssociationArgs struct {
	// The descriptive name for the association.
	AssociationName pulumi.StringInput `pulumi:"associationName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringInput `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringInput `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringInput `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxErrors pulumi.StringInput `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name pulumi.StringInput `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation pulumi.AnyInput `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.MapInput `pulumi:"parameters"`
	// A cron expression when the association will be applied to the target(s).
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumi.ArrayInput `pulumi:"targets"`
}
