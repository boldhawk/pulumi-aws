// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SSM Maintenance Window Target resource
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ssm_maintenance_window_target.html.markdown.
type MaintenanceWindowTarget struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The description of the maintenance window target.
	Description pulumi.StringOutput `pulumi:"description"`

	// The name of the maintenance window target.
	Name pulumi.StringOutput `pulumi:"name"`

	// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
	OwnerInformation pulumi.StringOutput `pulumi:"ownerInformation"`

	// The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`

	// The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
	Targets pulumi.ArrayOutput `pulumi:"targets"`

	// The Id of the maintenance window to register the target with.
	WindowId pulumi.StringOutput `pulumi:"windowId"`
}

// NewMaintenanceWindowTarget registers a new resource with the given unique name, arguments, and options.
func NewMaintenanceWindowTarget(ctx *pulumi.Context,
	name string, args *MaintenanceWindowTargetArgs, opts ...pulumi.ResourceOpt) (*MaintenanceWindowTarget, error) {
	if args == nil || args.ResourceType == nil {
		return nil, errors.New("missing required argument 'ResourceType'")
	}
	if args == nil || args.Targets == nil {
		return nil, errors.New("missing required argument 'Targets'")
	}
	if args == nil || args.WindowId == nil {
		return nil, errors.New("missing required argument 'WindowId'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["ownerInformation"] = args.OwnerInformation
		inputs["resourceType"] = args.ResourceType
		inputs["targets"] = args.Targets
		inputs["windowId"] = args.WindowId
	}
	var resource MaintenanceWindowTarget
	err := ctx.RegisterResource("aws:ssm/maintenanceWindowTarget:MaintenanceWindowTarget", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaintenanceWindowTarget gets an existing MaintenanceWindowTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaintenanceWindowTarget(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MaintenanceWindowTargetState, opts ...pulumi.ResourceOpt) (*MaintenanceWindowTarget, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["ownerInformation"] = state.OwnerInformation
		inputs["resourceType"] = state.ResourceType
		inputs["targets"] = state.Targets
		inputs["windowId"] = state.WindowId
	}
	var resource MaintenanceWindowTarget
	err := ctx.ReadResource("aws:ssm/maintenanceWindowTarget:MaintenanceWindowTarget", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *MaintenanceWindowTarget) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *MaintenanceWindowTarget) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering MaintenanceWindowTarget resources.
type MaintenanceWindowTargetState struct {
	// The description of the maintenance window target.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the maintenance window target.
	Name pulumi.StringInput `pulumi:"name"`
	// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
	OwnerInformation pulumi.StringInput `pulumi:"ownerInformation"`
	// The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
	Targets pulumi.ArrayInput `pulumi:"targets"`
	// The Id of the maintenance window to register the target with.
	WindowId pulumi.StringInput `pulumi:"windowId"`
}

// The set of arguments for constructing a MaintenanceWindowTarget resource.
type MaintenanceWindowTargetArgs struct {
	// The description of the maintenance window target.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the maintenance window target.
	Name pulumi.StringInput `pulumi:"name"`
	// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
	OwnerInformation pulumi.StringInput `pulumi:"ownerInformation"`
	// The type of target being registered with the Maintenance Window. Possible values `INSTANCE`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The targets (either instances or tags). Instances are specified using Key=InstanceIds,Values=InstanceId1,InstanceId2. Tags are specified using Key=tag name,Values=tag value.
	Targets pulumi.ArrayInput `pulumi:"targets"`
	// The Id of the maintenance window to register the target with.
	WindowId pulumi.StringInput `pulumi:"windowId"`
}
