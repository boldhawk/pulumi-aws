// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Registers an on-premises server or virtual machine with Amazon EC2 so that it can be managed using Run Command.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ssm_activation.html.markdown.
type Activation struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	// The code the system generates when it processes the activation.
	ActivationCode pulumi.StringOutput `pulumi:"activationCode"`

	// The description of the resource that you want to register.
	Description pulumi.StringOutput `pulumi:"description"`

	// A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`

	// If the current activation has expired.
	Expired pulumi.StringOutput `pulumi:"expired"`

	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringOutput `pulumi:"iamRole"`

	// The default name of the registered managed instance.
	Name pulumi.StringOutput `pulumi:"name"`

	// The number of managed instances that are currently registered using this activation.
	RegistrationCount pulumi.IntOutput `pulumi:"registrationCount"`

	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntOutput `pulumi:"registrationLimit"`

	// A mapping of tags to assign to the object.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewActivation registers a new resource with the given unique name, arguments, and options.
func NewActivation(ctx *pulumi.Context,
	name string, args *ActivationArgs, opts ...pulumi.ResourceOpt) (*Activation, error) {
	if args == nil || args.IamRole == nil {
		return nil, errors.New("missing required argument 'IamRole'")
	}
	inputs := map[string]pulumi.Input{}
	inputs["name"] = pulumi.Any()
	if args != nil {
		inputs["description"] = args.Description
		inputs["expirationDate"] = args.ExpirationDate
		inputs["iamRole"] = args.IamRole
		inputs["name"] = args.Name
		inputs["registrationLimit"] = args.RegistrationLimit
		inputs["tags"] = args.Tags
	}
	var resource Activation
	err := ctx.RegisterResource("aws:ssm/activation:Activation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActivation gets an existing Activation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActivation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ActivationState, opts ...pulumi.ResourceOpt) (*Activation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["activationCode"] = state.ActivationCode
		inputs["description"] = state.Description
		inputs["expirationDate"] = state.ExpirationDate
		inputs["expired"] = state.Expired
		inputs["iamRole"] = state.IamRole
		inputs["name"] = state.Name
		inputs["registrationCount"] = state.RegistrationCount
		inputs["registrationLimit"] = state.RegistrationLimit
		inputs["tags"] = state.Tags
	}
	var resource Activation
	err := ctx.ReadResource("aws:ssm/activation:Activation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Activation) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Activation) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Activation resources.
type ActivationState struct {
	// The code the system generates when it processes the activation.
	ActivationCode pulumi.StringInput `pulumi:"activationCode"`
	// The description of the resource that you want to register.
	Description pulumi.StringInput `pulumi:"description"`
	// A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// If the current activation has expired.
	Expired pulumi.StringInput `pulumi:"expired"`
	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringInput `pulumi:"iamRole"`
	// The default name of the registered managed instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of managed instances that are currently registered using this activation.
	RegistrationCount pulumi.IntInput `pulumi:"registrationCount"`
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntInput `pulumi:"registrationLimit"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Activation resource.
type ActivationArgs struct {
	// The description of the resource that you want to register.
	Description pulumi.StringInput `pulumi:"description"`
	// A timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringInput `pulumi:"iamRole"`
	// The default name of the registered managed instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntInput `pulumi:"registrationLimit"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}
