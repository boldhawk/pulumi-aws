// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SSM Document resource
// 
// > **NOTE on updating SSM documents:** Only documents with a schema version of 2.0
// or greater can update their content once created, see [SSM Schema Features][1]. To update a document with an older
// schema version you must recreate the resource.
// 
// ## Permissions
// 
// The permissions attribute specifies how you want to share the document. If you share a document privately,
// you must specify the AWS user account IDs for those people who can use the document. If you share a document
// publicly, you must specify All as the account ID.
// 
// The permissions mapping supports the following:
// 
// * `type` - The permission type for the document. The permission type can be `Share`.
// * `accountIds` - The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or `All`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/ssm_document.html.markdown.
type Document struct {
	// URN is this resource's unique name assigned by Pulumi.
	URN pulumi.URNOutput `pulumi:"urn"`

	// ID is this resource's unique identifier assigned by its provider.
	ID pulumi.IDOutput `pulumi:"id"`

	Arn pulumi.StringOutput `pulumi:"arn"`

	// The JSON or YAML content of the document.
	Content pulumi.StringOutput `pulumi:"content"`

	// The date the document was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`

	// The default version of the document.
	DefaultVersion pulumi.StringOutput `pulumi:"defaultVersion"`

	// The description of the document.
	Description pulumi.StringOutput `pulumi:"description"`

	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumi.StringOutput `pulumi:"documentFormat"`

	// The type of the document. Valid document types include: `Command`, `Policy`, `Automation` and `Session`
	DocumentType pulumi.StringOutput `pulumi:"documentType"`

	// The sha1 or sha256 of the document content
	Hash pulumi.StringOutput `pulumi:"hash"`

	// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
	HashType pulumi.StringOutput `pulumi:"hashType"`

	// The latest version of the document.
	LatestVersion pulumi.StringOutput `pulumi:"latestVersion"`

	// The name of the document.
	Name pulumi.StringOutput `pulumi:"name"`

	// The AWS user account of the person who created the document.
	Owner pulumi.StringOutput `pulumi:"owner"`

	// The parameters that are available to this document.
	Parameters pulumi.ArrayOutput `pulumi:"parameters"`

	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumi.AnyOutput `pulumi:"permissions"`

	// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
	PlatformTypes pulumi.ArrayOutput `pulumi:"platformTypes"`

	// The schema version of the document.
	SchemaVersion pulumi.StringOutput `pulumi:"schemaVersion"`

	// "Creating", "Active" or "Deleting". The current status of the document.
	Status pulumi.StringOutput `pulumi:"status"`

	// A mapping of tags to assign to the object.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewDocument registers a new resource with the given unique name, arguments, and options.
func NewDocument(ctx *pulumi.Context,
	name string, args *DocumentArgs, opts ...pulumi.ResourceOpt) (*Document, error) {
	if args == nil || args.Content == nil {
		return nil, errors.New("missing required argument 'Content'")
	}
	if args == nil || args.DocumentType == nil {
		return nil, errors.New("missing required argument 'DocumentType'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		inputs["content"] = args.Content
		inputs["documentFormat"] = args.DocumentFormat
		inputs["documentType"] = args.DocumentType
		inputs["name"] = args.Name
		inputs["permissions"] = args.Permissions
		inputs["tags"] = args.Tags
	}
	var resource Document
	err := ctx.RegisterResource("aws:ssm/document:Document", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocument gets an existing Document resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocument(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DocumentState, opts ...pulumi.ResourceOpt) (*Document, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["content"] = state.Content
		inputs["createdDate"] = state.CreatedDate
		inputs["defaultVersion"] = state.DefaultVersion
		inputs["description"] = state.Description
		inputs["documentFormat"] = state.DocumentFormat
		inputs["documentType"] = state.DocumentType
		inputs["hash"] = state.Hash
		inputs["hashType"] = state.HashType
		inputs["latestVersion"] = state.LatestVersion
		inputs["name"] = state.Name
		inputs["owner"] = state.Owner
		inputs["parameters"] = state.Parameters
		inputs["permissions"] = state.Permissions
		inputs["platformTypes"] = state.PlatformTypes
		inputs["schemaVersion"] = state.SchemaVersion
		inputs["status"] = state.Status
		inputs["tags"] = state.Tags
	}
	var resource Document
	err := ctx.ReadResource("aws:ssm/document:Document", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURN returns this resource's unique name assigned by Pulumi.
func (r *Document) GetURN() pulumi.URNOutput {
	return r.URN
}

// GetID returns this resource's unique identifier assigned by its provider.
func (r *Document) GetID() pulumi.IDOutput {
	return r.ID
}
// Input properties used for looking up and filtering Document resources.
type DocumentState struct {
	Arn pulumi.StringInput `pulumi:"arn"`
	// The JSON or YAML content of the document.
	Content pulumi.StringInput `pulumi:"content"`
	// The date the document was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The default version of the document.
	DefaultVersion pulumi.StringInput `pulumi:"defaultVersion"`
	// The description of the document.
	Description pulumi.StringInput `pulumi:"description"`
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumi.StringInput `pulumi:"documentFormat"`
	// The type of the document. Valid document types include: `Command`, `Policy`, `Automation` and `Session`
	DocumentType pulumi.StringInput `pulumi:"documentType"`
	// The sha1 or sha256 of the document content
	Hash pulumi.StringInput `pulumi:"hash"`
	// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
	HashType pulumi.StringInput `pulumi:"hashType"`
	// The latest version of the document.
	LatestVersion pulumi.StringInput `pulumi:"latestVersion"`
	// The name of the document.
	Name pulumi.StringInput `pulumi:"name"`
	// The AWS user account of the person who created the document.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The parameters that are available to this document.
	Parameters pulumi.ArrayInput `pulumi:"parameters"`
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumi.AnyInput `pulumi:"permissions"`
	// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
	PlatformTypes pulumi.ArrayInput `pulumi:"platformTypes"`
	// The schema version of the document.
	SchemaVersion pulumi.StringInput `pulumi:"schemaVersion"`
	// "Creating", "Active" or "Deleting". The current status of the document.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Document resource.
type DocumentArgs struct {
	// The JSON or YAML content of the document.
	Content pulumi.StringInput `pulumi:"content"`
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumi.StringInput `pulumi:"documentFormat"`
	// The type of the document. Valid document types include: `Command`, `Policy`, `Automation` and `Session`
	DocumentType pulumi.StringInput `pulumi:"documentType"`
	// The name of the document.
	Name pulumi.StringInput `pulumi:"name"`
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumi.AnyInput `pulumi:"permissions"`
	// A mapping of tags to assign to the object.
	Tags pulumi.MapInput `pulumi:"tags"`
}
